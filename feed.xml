<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="www.ankushchoubey.com/feed.xml" rel="self" type="application/atom+xml" /><link href="www.ankushchoubey.com/" rel="alternate" type="text/html" /><updated>2020-05-10T09:45:43-05:00</updated><id>www.ankushchoubey.com/feed.xml</id><title type="html">Ankush</title><subtitle>Random Thoughts</subtitle><entry><title type="html">Math motivation</title><link href="www.ankushchoubey.com/thoughts/mathematics/2020/05/04/math-motivation.html" rel="alternate" type="text/html" title="Math motivation" /><published>2020-05-04T00:00:00-05:00</published><updated>2020-05-04T00:00:00-05:00</updated><id>www.ankushchoubey.com/thoughts/mathematics/2020/05/04/math-motivation</id><content type="html" xml:base="www.ankushchoubey.com/thoughts/mathematics/2020/05/04/math-motivation.html">&lt;p&gt;I have always been interested in &lt;strong&gt;🧮&lt;/strong&gt; even after failing twice at math exams during college.&lt;/p&gt;

&lt;p&gt;I have been collecting a lot of notes on the topic since the last 6-8 months and recently the number of notes exponentially grew. (damn recommendation systems). Some I came up on my own.&lt;/p&gt;

&lt;p&gt;This should be a good time to publish the list and see how things evolve.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;maths-is-a-language-that-applies-to-the-real-world&quot;&gt;Maths is a language that applies to the real world&lt;/h2&gt;

&lt;h3 id=&quot;it-is-a-human-language-like-english-because-it-helps-to-talk--with-each-other-&quot;&gt;It is a human language like English because it helps to talk 💭 with each other. &lt;sup id=&quot;fnref:9&quot;&gt;&lt;a href=&quot;#fn:9&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;h3 id=&quot;it-is-the-language-of-nature-&quot;&gt;It is the language of nature. &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;p&gt;Perhaps we can think, teach, and learn like it’s natural.&lt;/p&gt;

&lt;h3 id=&quot;it-is-the-same-for-everyone&quot;&gt;It is the same for everyone&lt;/h3&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;maths-is-everywhere-even-if-you-dont-notice&quot;&gt;Maths is everywhere. Even if you don’t notice.&lt;/h2&gt;

&lt;p&gt;⏰ 🗺 🥇🥈🥉🎰🎲⚽️🍻&lt;/p&gt;

&lt;p&gt;You have to learn it once and use it everywhere.&lt;/p&gt;

&lt;p&gt;Plus you can learn it from anywhere.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;emphasis-on-maths-from-home-&quot;&gt;Emphasis on maths from home 🏡&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;p&gt;People in Spanish class who come from 🏡s where Spanish is spoken are going to be better from day one☝️ . 🧮 is the same.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;maths-is-useful-and-fun&quot;&gt;Maths is useful and fun&lt;/h2&gt;

&lt;h3 id=&quot;it-makes-you-more-popular&quot;&gt;It makes you more popular.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;It is cool when others are silently looking for their calculator and you just say the answer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;run-the-numbers-&quot;&gt;Run the numbers! &lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;You can verify a lot of facts by just running the calculating things in your head.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;maths-is-a-playground-&quot;&gt;Maths Is a Playground &lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;p&gt;if you stop✋🏽 and look 👀.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can explore the patterns on 🌊 🐚.&lt;/li&gt;
  &lt;li&gt;Play with tiles and shapes.&lt;/li&gt;
  &lt;li&gt;Categories objects in bizarre and creative ways.&lt;/li&gt;
  &lt;li&gt;Do puzzles 🧩.&lt;/li&gt;
  &lt;li&gt;Do origami.&lt;/li&gt;
  &lt;li&gt;Study the patterns in music 🎶.&lt;/li&gt;
  &lt;li&gt;Study the structure of trees🌳s.&lt;/li&gt;
  &lt;li&gt;🎨. 🧶.&lt;/li&gt;
  &lt;li&gt;Create secret codes.&lt;/li&gt;
  &lt;li&gt;Program 🖥.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;math-is-reasoning-not-memorizing-or-speed&quot;&gt;Math is reasoning not memorizing or speed&lt;/h2&gt;

&lt;h3 id=&quot;it-doesnt-matter-how-you-get-there-if-your-reasoning-is-correct-&quot;&gt;It doesn’t matter how you get there if your reasoning is correct. &lt;sup id=&quot;fnref:8&quot;&gt;&lt;a href=&quot;#fn:8&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;p&gt;There is no single right way to solve it.&lt;/p&gt;

&lt;h3 id=&quot;there-is-nothing-wrong-with-counting-on-fingets--as-an-aid-to-doing-maths-&quot;&gt;There is nothing wrong with counting on fingets 🖐🏽 as an aid to doing maths. &lt;sup id=&quot;fnref:7&quot;&gt;&lt;a href=&quot;#fn:7&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;It actually indicates an understanding of arithmetic more than if everything were memorized.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;maths-is-boring-when-it-is-taught-incompletely-&quot;&gt;Maths is boring when it is taught incompletely &lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;p&gt;aka &lt;em&gt;we&lt;/em&gt; know only a handful of processes&lt;/p&gt;

&lt;p&gt;Processes are like cookbook knowledge 👨‍🍳📖&lt;/p&gt;

&lt;p&gt;Maths is a whole tool box 🧰 of operations that can apply to different situations.&lt;/p&gt;

&lt;p&gt;Knowing the processes is important but does not make you good at maths.&lt;/p&gt;

&lt;h3 id=&quot;tools-of-maths-are-simple-&quot;&gt;Tools of Maths are simple. &lt;sup id=&quot;fnref:6:1&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;​&lt;strong&gt;Number&lt;/strong&gt;​ (In all their forms)&lt;/li&gt;
  &lt;li&gt;​&lt;strong&gt;Operations (&lt;/strong&gt;​Arithmetic; all others are derived from them)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Laws&lt;/strong&gt; (applies to all numbers)&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Commutative&lt;/li&gt;
  &lt;li&gt;Associative&lt;/li&gt;
  &lt;li&gt;Distributive&lt;/li&gt;
  &lt;li&gt;Identity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you know these ​&lt;strong&gt;you can construct the process on the fly&lt;/strong&gt;​.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;when-learning-maths&quot;&gt;When learning Maths&lt;/h2&gt;

&lt;h3 id=&quot;bring-your--pen-and--paper-&quot;&gt;Bring your ✍🏽 pen and 📝 paper &lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;h3 id=&quot;maths-becomes-hard-when-you-move-away-from-the-real--and-abstract-it-beyond-recognition-&quot;&gt;Maths becomes hard when you move away from the real 🌎 and abstract it &lt;em&gt;beyond recognition&lt;/em&gt;. &lt;sup id=&quot;fnref:9:1&quot;&gt;&lt;a href=&quot;#fn:9&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;h3 id=&quot;like-any-problem-you-can-sleep-on-numbers&quot;&gt;Like any problem, you can sleep on numbers.&lt;/h3&gt;
&lt;p&gt;Go away for a while. Rest.&lt;/p&gt;

&lt;h3 id=&quot;are-you-studying-maths-for-an-exam&quot;&gt;Are you studying maths for an exam?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Or are you exploring it because it’s fun???&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are advantages to each.&lt;/p&gt;

&lt;p&gt;Studying for an exam means you likely have a deadline and you will tent to go through the material faster.&lt;/p&gt;

&lt;p&gt;The problem here is you are less likely to go deep and may forget 🧠 things as soon as an exam is over.&lt;/p&gt;

&lt;p&gt;Exploring for fun means overall you will sustain your learning for longer and be less overwhelmed.&lt;/p&gt;

&lt;p&gt;But this also means you will take much longer than need time and then wander off 💭.&lt;/p&gt;

&lt;p&gt;Balance is the key. ⚖️&lt;/p&gt;

&lt;h3 id=&quot;the-best-way-to-study-math-is-to-have-constant-exposure-to-it-&quot;&gt;The best way to study math is to have constant exposure to it. &lt;sup id=&quot;fnref:5:1&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:9&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=64643Op6WJo&quot;&gt;What is Mathematics?&lt;/a&gt; &lt;a href=&quot;#fnref:9&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:9:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://twitter.com/naval/status/924404740183805953?s=20&quot;&gt;Naval’s tweet on Math&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tg0Z--pmPog&quot;&gt;You’re Not Bad At Math, You’re Just Lazy&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nccvDyjvdps&quot;&gt;Jordan Peterson - The Cost of Procrastinating &amp;amp; Wasting Half Your Life&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.quickanddirtytips.com/education/math/why-is-it-important-to-study-math&quot;&gt;Math Dude: Why Is It Important to Study Math?&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:8&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VW6LYuli7VU&amp;amp;feature=share&quot;&gt;Richard Feynman talks about Algebra&lt;/a&gt; &lt;a href=&quot;#fnref:8&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:7&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.uaf.edu/deved/math/help-for-math-anxiety/12-math-myths/&quot;&gt;Twelve Math Myths&lt;/a&gt; &lt;a href=&quot;#fnref:7&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=a19A04HMTVo&quot;&gt;Classical Conversation: Why Should You Study Math?&lt;/a&gt; &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:6:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=HPsazrVSjl8&quot;&gt;How to Get Better at Math&lt;/a&gt; &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:5:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">I have always been interested in 🧮 even after failing twice at math exams during college.</summary></entry><entry><title type="html">Advice for those who want to learn Deep Learning</title><link href="www.ankushchoubey.com/thoughts/deep%20learning/2020/05/02/advice-for-want-to-learn-deep-learning.html" rel="alternate" type="text/html" title="Advice for those who want to learn Deep Learning" /><published>2020-05-02T00:00:00-05:00</published><updated>2020-05-02T00:00:00-05:00</updated><id>www.ankushchoubey.com/thoughts/deep%20learning/2020/05/02/advice-for-want-to-learn-deep-learning</id><content type="html" xml:base="www.ankushchoubey.com/thoughts/deep%20learning/2020/05/02/advice-for-want-to-learn-deep-learning.html">&lt;p&gt;I do get questions once or twice a month in my friend circle of someone who is thinking of starting to learn Machine Learning or Deep Learning.&lt;/p&gt;

&lt;p&gt;​&lt;strong&gt;I am not an expert&lt;/strong&gt;​. &lt;em&gt;Nor do I have a DL job&lt;/em&gt;. But I do know enough that I can work with a DL team and build something over a few months.&lt;/p&gt;

&lt;p&gt;Hopefully, this answers all of your questions.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;-dont-learn-machine-learning&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Don’t learn Machine Learning&lt;/h2&gt;

&lt;p&gt;You don’t need to know ML before learning DL.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;It’s dumb.&lt;/li&gt;
  &lt;li&gt;It is getting rapidly replaced by DL. Therefore, turning irrelevant.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lot of times people build a complex hand made ML solution just to get little bit higher metrics.
In the &lt;a href=&quot;https://medium.com/modern-nlp/risk-and-counter-intuition-in-data-science-1a21a792ad95&quot;&gt;long run a simple DL model be better&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;-deep-learning-gets-easier-as-more-time-passes&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Deep Learning gets easier as more time passes.&lt;/h2&gt;

&lt;p&gt;Allow your mind to adjust to the counter-intuitiveness.
For me, it took months to adjust.&lt;/p&gt;

&lt;h2 id=&quot;-get-comfortable-not-knowing-a-lot-of-stuff&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Get comfortable not knowing a lot of stuff.&lt;/h2&gt;

&lt;p&gt;You might never need to do calculus but hand yourself.
We have computers in the 21st century.&lt;/p&gt;

&lt;p&gt;Knowing where to use it and what it does is enough.&lt;/p&gt;

&lt;h2 id=&quot;--material-beats-the-method&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt;  Material beats the Method.&lt;/h2&gt;

&lt;p&gt;Learn from the latest courses and use the latest tools.&lt;/p&gt;

&lt;p&gt;This is a fast-changing field. 2-year-old stuff is mostly irrelevant.&lt;/p&gt;

&lt;p&gt;Recommended Course: &lt;a href=&quot;https://www.fast.ai/&quot;&gt;https://www.fast.ai/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recommended next read: &lt;a href=&quot;https://hackernoon.com/how-not-to-do-fast-ai-or-any-ml-mooc-3d34a7e0ab8c&quot; target=&quot;_blank&quot;&gt;How not to do Fast.ai (or any ML MOOC)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;-learn-a-framework-well&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Learn a framework well&lt;/h2&gt;

&lt;p&gt;This is useful when you are not following a tutorial.&lt;/p&gt;

&lt;p&gt;I learned PyTorch.&lt;/p&gt;

&lt;h2 id=&quot;-be-hands-on-from-day-one&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Be hands-on from Day One&lt;/h2&gt;

&lt;p&gt;Learned gradient descent today??? Nice! Open a Jupyter notebook and code the simplest gradient descent you could think of.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reading/Watching videos matters less&lt;/strong&gt;. Coding is the skill you are trying to develop.&lt;/p&gt;

&lt;h2 id=&quot;-dont-get-intimidated-from-people-on-the-internet&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Don’t get intimidated from people on the internet.&lt;/h2&gt;

&lt;p&gt;Most people in DL space are genuinely nice. But some you will find just crank out project after project by stealing other people’s code and never giving them credits.&lt;/p&gt;

&lt;p&gt;Don’t get intimidated by them. Fame comes and bites them in the ass!&lt;/p&gt;

&lt;p&gt;Know that those who are genuinely nice have spent a lot of time working on it.&lt;/p&gt;

&lt;h2 id=&quot;-wait-and-develop-skills-for-a-good-job-dont-turn-into-a-beggar&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Wait and develop skills for a good job. Don’t turn into a beggar.&lt;/h2&gt;

&lt;p&gt;This is a hard one. DL is something I really really loved and I wanted to do it full-time.&lt;/p&gt;

&lt;p&gt;But looking at the job market here in Mumbai, India, a lot of companies which say they are doing DL and often just don’t.&lt;/p&gt;

&lt;p&gt;Or they do enough to get investors and job candidates. Most don’t ship anything. I can think of none actually.&lt;/p&gt;

&lt;h2 id=&quot;-finding-something-difficult&quot;&gt;&lt;input type=&quot;checkbox&quot; /&gt; Finding something difficult??&lt;/h2&gt;

&lt;p&gt;Shoot me an email at &lt;a href=&quot;mailto:ankushchoubey@outlook.com&quot;&gt;ankushchoubey@outlook.com&lt;/a&gt; 😁&lt;/p&gt;

&lt;p&gt;For questions or counter related to this post, write them in the comments below.&lt;/p&gt;</content><author><name></name></author><summary type="html">I do get questions once or twice a month in my friend circle of someone who is thinking of starting to learn Machine Learning or Deep Learning.</summary></entry><entry><title type="html">Series Kaggle Getting Started</title><link href="www.ankushchoubey.com/deep%20learning/kaggle/2020/03/30/series-kaggle-getting-started.html" rel="alternate" type="text/html" title="Series  Kaggle Getting Started" /><published>2020-03-30T00:00:00-05:00</published><updated>2020-03-30T00:00:00-05:00</updated><id>www.ankushchoubey.com/deep%20learning/kaggle/2020/03/30/series-kaggle-getting-started</id><content type="html" xml:base="www.ankushchoubey.com/deep%20learning/kaggle/2020/03/30/series-kaggle-getting-started.html">&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;

&lt;h5 id=&quot;because-getting-started-is&quot;&gt;&lt;strong&gt;Because Getting Started is:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Easy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Less intimidating&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Less chance of getting stuck&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-we-will-do-it&quot;&gt;How we will do it?&lt;/h2&gt;

&lt;h5 id=&quot;by&quot;&gt;&lt;strong&gt;By:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;focusing on the process rather than just getting the output.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;starting with easier problems.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prerequisite&quot;&gt;Prerequisite&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;PyTorch:&lt;a href=&quot;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&quot;&gt; A 60 Minute Blitz&lt;/a&gt;, &lt;a href=&quot;https://pytorch.org/tutorials/beginner/data_loading_tutorial.html?highlight=dataset&quot;&gt;Writing Custom Datasets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;expectations-from-this-series&quot;&gt;Expectations from this series&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Time&lt;/strong&gt;: 5–6 Hours per challenge or more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding Style&lt;/strong&gt;:&lt;a href=&quot;https://docs.fast.ai/dev/style.html&quot;&gt; fastai coding style&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;While coding, no function takes 10 seconds.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Heavy use of %timeit%&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Explanation Style&lt;/strong&gt;: Based on Kaggle Notebook Commits&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Notebook Commit 1&lt;/em&gt;: Will focus on getting input and output&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Next N-1 Commits&lt;/em&gt;: Will add new features/improvements. These will be linked.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Last Commit&lt;/em&gt;: Complete solution&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way one can see get a peek behind the finished product.&lt;/p&gt;

&lt;h2 id=&quot;abbreviations-used&quot;&gt;Abbreviations Used&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;X = training_data
y = training_label

ds = dataset
dl = dataloader

o = optimizer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;index&quot;&gt;Index&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;/deep%20learning/kaggle/2020/03/30/digit-recognition.html&quot;&gt;Digit Recognition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Facial Keypoints Detection - &lt;em&gt;in progress&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Why?</summary></entry><entry><title type="html">Digit Recognition</title><link href="www.ankushchoubey.com/deep%20learning/kaggle/2020/03/30/digit-recognition.html" rel="alternate" type="text/html" title="Digit Recognition" /><published>2020-03-30T00:00:00-05:00</published><updated>2020-03-30T00:00:00-05:00</updated><id>www.ankushchoubey.com/deep%20learning/kaggle/2020/03/30/digit-recognition</id><content type="html" xml:base="www.ankushchoubey.com/deep%20learning/kaggle/2020/03/30/digit-recognition.html">&lt;hr /&gt;
&lt;h3 id=&quot;how-to-read-this&quot;&gt;How to read this?&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Skim through the &lt;a href=&quot;https://medium.com/p/c06251780b&quot;&gt;Pre-requisites&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open each commit notebook then read the explanations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Just run each notebook top to bottom.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Try to understand each line.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you find yourself stuck at statements, explore the variable involved.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Still, &lt;strong&gt;stuck&lt;/strong&gt;?? &lt;strong&gt;highlight the explanation and comment&lt;/strong&gt;. I will get back to your query.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;commit-version-2-getting-input-and-generating-submission-file&quot;&gt;&lt;a href=&quot;https://www.kaggle.com/ankschoubey/20200324-pytorch-mnist?scriptVersionId=30660257&quot;&gt;Commit Version 2&lt;/a&gt;: Getting Input and Generating Submission File&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Day 1&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Score — 0.43&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Time invested — about an hour&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My goal for any first commit is always to get input, pass it through a NN and generate a submittable output.&lt;/p&gt;

&lt;h4 id=&quot;read-the-data&quot;&gt;Read the data&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;train_df = pd.read_csv('/kaggle/input/digit-recognizer/train.csv')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;trainingtesting&quot;&gt;Training/testing&lt;/h4&gt;

&lt;p&gt;I needed a way to separate features and labels.&lt;/p&gt;

&lt;p&gt;So the easiest way was to not select a column named ‘label’.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;test_df&lt;/em&gt; does not contain a label column&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;train_df.loc[:, train_df.columns != 'label']
type(test_df.get('label')) == None
#false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;dataset&quot;&gt;Dataset&lt;/h4&gt;

&lt;p&gt;Returns features and labels if ‘train=True’. else it returns just features&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class **MnistDataset**(Dataset):
    def __init__(self, df, train=True):
        #convert df to self.X and self.y using above

    def __len__(self):
        return self.X.shape[0]

    def __getitem__(self, i):
        if self.train: return self.X[i], self.y[i]
        return self.X[i]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Observation: Even if I don’t explicitly mention Tensor, NumPy is converted to tensor.&lt;/p&gt;

&lt;h4 id=&quot;creating-dataloader&quot;&gt;Creating DataLoader&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bs = 64
ds = MnistDataset(train_df)
dl = DataLoader(ds, bs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;checking-if-dataloader-returns-the-right-output&quot;&gt;Checking if DataLoader returns the right output&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;images, labels = next(iter(dl))
images.shape, labels.shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;creating-a-vanilla-neural-network&quot;&gt;Creating a vanilla Neural Network&lt;/h4&gt;

&lt;p&gt;I created a dumb NN just so that I can pass data through it and get output in the desired shape.&lt;/p&gt;

&lt;p&gt;The details don’t matter much. This will be replaced by a CNN later.&lt;/p&gt;

&lt;h4 id=&quot;preparing-the-training-loop&quot;&gt;Preparing the training loop&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;epochs = 10
loss_fn = nn.CrossEntropyLoss()

import torch.optim as optim
o = optim.Adam(net.parameters())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;creating-the-training-loop&quot;&gt;Creating the training loop&lt;/h4&gt;

&lt;p&gt;Here are the 4 steps to create a basic training loop&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Loop epoch number of times&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for i **in** range(epochs):
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Inside the epoch loop, &lt;strong&gt;loop through data loader&lt;/strong&gt; (dl)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for images, labels **in** dl:
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Inside the data loader loop,&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;zero&lt;/strong&gt; &lt;strong&gt;grad optimizer&lt;/strong&gt; &lt;strong&gt;before passing pushing data&lt;/strong&gt; into NN.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Take an &lt;strong&gt;optimizer step after pushing data&lt;/strong&gt; through NN.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;o.zero_grad()
...
o.step()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Between optimizer zero_grad and optimizer step, &lt;strong&gt;pass data through the NN, compute loss and gradients.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;out = net(images.float())
loss = loss_fn(out.float(), labels.long())
loss.backward()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;generating-output&quot;&gt;Generating output&lt;/h4&gt;

&lt;p&gt;A similar step as above has been taken to generate test_dl and the testing loop.&lt;/p&gt;

&lt;p&gt;The only difference,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test_dl has ‘train=true’. Dataset will only return features and not labels.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;code to not calculate gradients since we are not training.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;with torch.no_grad():
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The output is in the form of numbers from 0…9.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Our output is a column &lt;strong&gt;&lt;em&gt;(dim=1)&lt;/em&gt;&lt;/strong&gt; array of length 10 with probability.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The maximum of this array is our output.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;out.argmax(dim=1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We store these outputs in an &lt;strong&gt;outputs&lt;/strong&gt; python list.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;test_df.shape, sample_df.shape
# Out[17]: ((28000, 784), (28000, 2))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I realized that sample submission and output df have the same length.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I just need to add ‘Label’ column to the submission data frame and save it in CSV form.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sample_df['Label'] = outputs
sample_df.to_csv('submission.csv', index=False)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index=False&lt;/strong&gt; removed the default pandas index when saving&lt;/p&gt;

&lt;h3 id=&quot;commit-version-3-improvements&quot;&gt;&lt;a href=&quot;https://www.kaggle.com/ankschoubey/20200324-pytorch-mnist?scriptVersionId=30753580&quot;&gt;Commit Version 3&lt;/a&gt;: Improvements&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Changes&lt;/em&gt;: Proper Accuracy, Graph, and Data Normalization&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Day 4&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Score — 0.96&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Time invested — about an hour&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;proper-accuracy&quot;&gt;Proper Accuracy&lt;/h4&gt;

&lt;p&gt;Accuracy should always be calculated on the validation set.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Creating a separate validation set&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;val_len = int(len(ds)*0.01) # 0.01 percent of data
train_len = len(ds) — val_len # all other are in training

from torch.utils.data import random_split

train_ds, val_ds = random_split(ds, [train_len, val_len])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Likewise, 2 data loaders are created.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bs = 64
train_dl = DataLoader(train_ds, bs)
val_dl = DataLoader(val_ds, bs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Changes in the training loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A separate list called accuracies in created to store the accuracy of an epoch.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
with torch.no_grad():
        accuracy = 0
        for images, labels in val_dl:
            out = net(images.float())
            accuracy+=(out.argmax(dim=1) == labels).sum().item()
        accuracies.append(accuracy/len(val_ds) * 100)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;graph&quot;&gt;Graph&lt;/h4&gt;

&lt;p&gt;Since the accuracy of each epoch was stored in a separate accuracies list, creating a graph was easy.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import matplotlib.pyplot as plt

plt.plot(range(epochs), accuracies)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;data-normalization&quot;&gt;Data Normalization&lt;/h4&gt;

&lt;p&gt;After plotting the graph, I realized accuracy was 43% which is the same as the score of commit 2.&lt;/p&gt;

&lt;p&gt;The easiest thing to do was to normalize the data.&lt;/p&gt;

&lt;p&gt;Since MNIST images are in the range of 1…250 the easiest thing to do was to divide by 250 which would result in a range of 0…1.&lt;/p&gt;

&lt;p&gt;Ideally, the range should be around 0 so an even better approach would be&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;image = image/250–0.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;this would result in a range between -0.5…+0.5.&lt;/p&gt;

&lt;p&gt;Later we would use &lt;code class=&quot;highlighter-rouge&quot;&gt;torchvision.transforms.Normalize&lt;/code&gt;(&lt;em&gt;mean&lt;/em&gt;, &lt;em&gt;std&lt;/em&gt;, &lt;em&gt;inplace=False&lt;/em&gt;) which generates unique normalization value for each dataset&lt;/p&gt;

&lt;h3 id=&quot;commit-6-convnet-and-gpu&quot;&gt;&lt;a href=&quot;https://www.kaggle.com/ankschoubey/20200326-pytorch-mnist?scriptVersionId=30896320&quot;&gt;Commit 6&lt;/a&gt;: ConvNet, and GPU&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Day 6&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Score — 0.97&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Time invested — about 2 hours (lots of googling and reading docs) + 1 hours fixes bugs&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;convnet&quot;&gt;ConvNet&lt;/h4&gt;

&lt;p&gt;Convolutional Neural Networks are ideal images.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;ResNet&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ResNet 34 is my goto ConvNet but since MNIST is so easy, I went with ResNet 18.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import torchvision.models as models
resnet18 = models.resnet18(pretrained=True)
resnet18.fc #print fully connected network
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ResNet is designed to output 1000 classes. But our output is from 0…9 aka 10 classes.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lin_in = resnet18.fc.in_features

import torch.nn as nn

resnet18.fc = nn.Sequential(
    nn.Linear(lin_in, 10),
    nn.Softmax(dim=1)
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Convert Grayscale to RGB image&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ResNet expects RGB images. MNIST is grayscale.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`img = img.view(3, 28, 28).expand(3, 28, 28)`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This &lt;a href=&quot;https://discuss.pytorch.org/t/grayscale-to-rgb-transform/18315/7&quot;&gt;grayscale to the RGB&lt;/a&gt; line is added to our Dataset class.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Normalization&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When using an existing model, we need to use the same normalization values as that model. The &lt;a href=&quot;#https://pytorch.org/docs/stable/torchvision/models.html&quot;&gt;docs mention the normalization value&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import  torchvision.transforms as transforms
normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],
                                 std=[0.229, 0.224, 0.225])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;init&lt;/strong&gt; and &lt;strong&gt;getitem&lt;/strong&gt; dataset class have been modified to use this transformation.&lt;/p&gt;

&lt;p&gt;Modifications have also been made to test_ds.&lt;/p&gt;

&lt;h4 id=&quot;gpu&quot;&gt;GPU&lt;/h4&gt;

&lt;p&gt;One I started the training loop, I realized it suddenly became too slow.&lt;/p&gt;

&lt;p&gt;GPU is needed!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;device = torch.device('cuda:0') if torch.cuda.is_available() else 'cpu'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the GPU is on, the device will be &lt;em&gt;cuda&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The neural network and the data in training, validation and texting loop have been changed to run on GPU.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;net = net.to(device)
...

images, labels = images.to(device,dtype=torch.float), labels.to(device)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And since we are on GPU we can increase our batch size from 64 to much higher.&lt;/p&gt;

&lt;p&gt;I experimented with a few sizes from 320…640 and kept an eye on GPU utilization and settled for 512.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-30-digit-recognition/1.png&quot; alt=&quot;CPU and GPU Utilization. Also, see the number of tabs open.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I did the same for &lt;a href=&quot;https://discuss.pytorch.org/t/guidelines-for-assigning-num-workers-to-dataloader/813/2&quot;&gt;num_worker&lt;/a&gt; which specifies the number of threads to load a batch. This is CPU stuff.&lt;/p&gt;

&lt;p&gt;Along with monitoring GPU and CPU usage, I modified training_loop to show the &lt;a href=&quot;https://stackoverflow.com/a/36423341&quot;&gt;amount of time taken to complete each epoch&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bs = 512
num_workers = 2
train_dl = DataLoader(train_ds, bs, num_workers=num_workers)
val_dl = DataLoader(val_ds, bs, num_workers=num_workers)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This resulted in 7 seconds per epoch.&lt;/p&gt;

&lt;p&gt;For testing, the batch_size can be much higher since we don’t have to back prop.&lt;/p&gt;

&lt;h3 id=&quot;commit-7-improvement&quot;&gt;&lt;a href=&quot;https://www.kaggle.com/ankschoubey/20200326-pytorch-mnist/output?scriptVersionId=31120757&quot;&gt;Commit 7&lt;/a&gt;: Improvement&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Day 8&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Score — 0.97&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Time invested — about 30 minutes&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I learned that you don’t need &lt;a href=&quot;https://discuss.pytorch.org/t/vgg-output-layer-no-softmax/9273&quot;&gt;nn.Softmax if you are using nn.CrossEntropyLoss&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;nn.CrossEntropyLoss has nn.Softmax built-in and the results of softmax are not used during back-prop. So it can be safely removed.&lt;/p&gt;

&lt;p&gt;Now FC is this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lin_in = resnet18.fc.in_features

import torch.nn as nn

resnet18.fc = nn.Sequential(
    nn.Linear(lin_in, 10)
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;Index: &lt;a href=&quot;/deep%20learning/kaggle/2020/03/30/series-kaggle-getting-started.html&quot;&gt;Series - Kaggle Getting Started&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next Post: []&lt;/p&gt;</content><author><name></name></author><summary type="html">How to read this? Skim through the Pre-requisites</summary></entry><entry><title type="html">Kaggle CLI QA: How to download a particular folder</title><link href="www.ankushchoubey.com/qa/kaggle/2020/03/10/kaggle-cli-download-a-folder.html" rel="alternate" type="text/html" title="Kaggle CLI QA: How to download a particular folder" /><published>2020-03-10T00:00:00-05:00</published><updated>2020-03-10T00:00:00-05:00</updated><id>www.ankushchoubey.com/qa/kaggle/2020/03/10/kaggle-cli-download-a-folder</id><content type="html" xml:base="www.ankushchoubey.com/qa/kaggle/2020/03/10/kaggle-cli-download-a-folder.html">&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://medium.com/@harshini2898/nice-article-c1eb575b0baf&quot;&gt;Harshini on Medium asks&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nice Article,&lt;/p&gt;

  &lt;p&gt;But I got struck while trying to download a particular folder from kaggle competition “state-farm-distracted-driver-detection”. I want to download “img/train/c4” folder in that dataset, But when I’m trying to run the command, it’s giving an error like “404 — Not found”..&lt;/p&gt;

  &lt;p&gt;But I am able to download a particular image like this “img/train/c2/img_100029.jpg”&lt;/p&gt;

  &lt;p&gt;*Is there any command to download a particular folder??&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Hi Harshini,&lt;/p&gt;

&lt;p&gt;Kaggle CLI does not support downloading the entire folder or multiple files at once (except in case of downloading entire competition). Only one file can be downloaded at a time via the CLI.&lt;/p&gt;

&lt;p&gt;Here is how I downloaded the entire c4 folder&lt;/p&gt;

&lt;h4 id=&quot;1-created-directory-if-it-does-not-already-exist&quot;&gt;1. Created directory if it does not already exist&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; img/train/c4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;2-get-the-list-of-all-files-available-in-the-dataset-filtered-the-files-which-were-in-the-c4-folder-picked-file-name-repeatedly-download-each-file&quot;&gt;2. Get the list of all files available in the dataset, filtered the files which were in the c4 folder, picked file name, repeatedly download each file.&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaggle competitions files &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; state-farm-distracted-driver-detection | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;c4 | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; ‘&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;print &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;’ | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;x &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;kaggle competitions download &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt; state-farm-distracted-driver-detection &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; img/train/c4 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020-03-10-hi-harshini/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;— — — — —&lt;/p&gt;

&lt;p&gt;I don’t use the command line regularly. These are the sources I looked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2746553/read-values-into-a-shell-variable-from-a-pipe&quot;&gt;Read values into a shell variable from a pipe&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/793858/how-to-mkdir-only-if-a-dir-does-not-already-exist&quot;&gt;How to mkdir only if a dir does not already exist?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/136884/how-to-use-a-shell-command-to-only-show-the-first-column-and-last-column-in-a-te&quot;&gt;How to use a shell command to only show the first column and last column in a text file?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaggle competitions download &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Hope this helps! Have a good day!&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;a href=&quot;https://medium.com/@ankushchoubey/hi-harshini-b0e50202d15&quot;&gt;Medium reply&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Harshini on Medium asks</summary></entry><entry><title type="html">Simple Hacks for increasing website load time</title><link href="www.ankushchoubey.com/web%20development/2020/02/22/simple-hacks-for-increasing-website-load-time.html" rel="alternate" type="text/html" title="Simple Hacks for increasing website load time" /><published>2020-02-22T00:00:00-06:00</published><updated>2020-02-22T00:00:00-06:00</updated><id>www.ankushchoubey.com/web%20development/2020/02/22/simple-hacks-for-increasing-website-load-time</id><content type="html" xml:base="www.ankushchoubey.com/web%20development/2020/02/22/simple-hacks-for-increasing-website-load-time.html">&lt;h2 id=&quot;reduce-bundle-size&quot;&gt;Reduce bundle size&lt;/h2&gt;

&lt;h5 id=&quot;always-use-compression-at-least-gzip&quot;&gt;&lt;a href=&quot;https://twitter.com/ankschoubey/status/1229795313994461187?ref_src=twsrc%5Etfw&quot;&gt;Always use compression: at least &lt;code class=&quot;highlighter-rouge&quot;&gt;gzip&lt;/code&gt;&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;Always compress. The configuration is set in the webserver.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gzip&lt;/code&gt; is good enough in most cases in terms of both performance and speed.&lt;/p&gt;

&lt;p&gt;My application went from 4 MB to 800 kb. Fewer data faster speed.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;Source 1: &lt;a href=&quot;https://varvy.com/pagespeed/enable-compression.html&quot;&gt;Enabling gzip&lt;/a&gt;&lt;/sup&gt;&lt;br /&gt;
&lt;sup&gt;Source 2: &lt;a href=&quot;https://stackoverflow.com/a/18834602&quot;&gt;Verify gzip on Chrome&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;make-less-number-of-requests&quot;&gt;Make less number of requests&lt;/h2&gt;

&lt;h5 id=&quot;always-cache-static-content-js-css-and-static-images&quot;&gt;Always cache static content: &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; and static images.&lt;/h5&gt;

&lt;p&gt;This can be configured in your web server or your application. Just google “ “how to cache in &lt;your framework=&quot;&quot; or=&quot;&quot; web=&quot;&quot; server=&quot;&quot;&gt;“.&lt;/your&gt;&lt;/p&gt;

&lt;p&gt;Of course: &lt;strong&gt;&lt;em&gt;be sure to not cache dynamic content.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; files, make sure it has a name that is unique if the file is modified.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Example: in angular after creating a &lt;code class=&quot;highlighter-rouge&quot;&gt;--prod&lt;/code&gt; build, the filename is in following format &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;filename&amp;gt;.&amp;lt;md5 checksum&amp;gt;.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This ensures that if the content of the file changes, the &lt;code class=&quot;highlighter-rouge&quot;&gt;md5&lt;/code&gt; checksum will change and a new request will be sent but if the file does not change then it will have the same checksum so it can be pulled from the cache.&lt;/p&gt;

&lt;h5 id=&quot;always-load-images-lazily&quot;&gt;Always load images lazily&lt;/h5&gt;

&lt;center&gt;
    &lt;div class=&quot;jekyll-twitter-plugin&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&amp;lt;img loading=‘lazy’ ... /&amp;gt; is so so easy. Images are only fetched when user scrolls near it. &lt;a href=&quot;https://twitter.com/hashtag/freeSpeedUp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#freeSpeedUp&lt;/a&gt; &lt;a href=&quot;https://t.co/nduXUy5GLm&quot;&gt;https://t.co/nduXUy5GLm&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Are there any more such tweaks that exist?&lt;/p&gt;&amp;mdash; Ankush (@ankschoubey) &lt;a href=&quot;https://twitter.com/ankschoubey/status/1219613362239049728?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;&lt;sup&gt;Advanced tips: &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video&quot;&gt;Lazy Loading Images and Video&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;do-it-fast&quot;&gt;Do it fast&lt;/h2&gt;

&lt;h5 id=&quot;fetch-js-and-css-asynchronously-source&quot;&gt;&lt;a href=&quot;https://twitter.com/ankschoubey/status/1229793732418920449?s=20&quot;&gt;Fetch &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; asynchronously&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;https://flaviocopes.com/javascript-async-defer/#the-position-matters&quot;&gt;&lt;em&gt;Source&lt;/em&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/h5&gt;

&lt;p&gt;When fetching &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; add &lt;code class=&quot;highlighter-rouge&quot;&gt;async defer&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; tag. This will fetch multiple &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; files in parallel.&lt;/p&gt;

&lt;p&gt;Keep &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; tag in the header for this.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Are there more such easy tips?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please mention them in the comments and I will add the tip to the list and mention your name.&lt;/p&gt;</content><author><name></name></author><summary type="html">Reduce bundle size</summary></entry><entry><title type="html">Clean Code Leave it better than you found it</title><link href="www.ankushchoubey.com/medium/2020/01/06/clean-code-leave-it-better-than-you-found-it.html" rel="alternate" type="text/html" title="Clean Code  Leave it better than you found it" /><published>2020-01-06T00:00:00-06:00</published><updated>2020-01-06T00:00:00-06:00</updated><id>www.ankushchoubey.com/medium/2020/01/06/clean-code-leave-it-better-than-you-found-it</id><content type="html" xml:base="www.ankushchoubey.com/medium/2020/01/06/clean-code-leave-it-better-than-you-found-it.html">&lt;p&gt;Code is much more like a work of art/craft that people consider it.&lt;/p&gt;

&lt;p&gt;Knowing the benefits and tips for writing good code will take you only so far. It requires a mindset shift. Looking at the code through an artist’s eye.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;![The clean version of the image from the source: &lt;a href=&quot;/images/2020-01-06-clean-code-leave-it-better-than-you-found-it/1.png&quot;&gt;Leave it a little better than you found it&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;incremental-improvements&quot;&gt;Incremental Improvements&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;If we all checked-in our code a little cleaner than when we checked it out, the code simply could not rot. The &lt;strong&gt;cleanup doesn’t have to be something big&lt;/strong&gt;. Change &lt;strong&gt;one variable name&lt;/strong&gt; for the &lt;strong&gt;better&lt;/strong&gt;, &lt;strong&gt;break up one function&lt;/strong&gt; that’s a little too large, &lt;strong&gt;eliminate one small bit of duplication&lt;/strong&gt;, &lt;strong&gt;clean up one composite if statement&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Can you imagine working on a project where the &lt;strong&gt;code &lt;em&gt;simply got better&lt;/em&gt; as time passed&lt;/strong&gt;?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;~ Rober C. Martin (&lt;a href=&quot;http://www.informit.com/articles/article.aspx?p=1235624&amp;amp;seqNum=6&quot;&gt;Author of Clean Code&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Maybe, improve one microservice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tip-leave-todo-as-comments-for-your-future-self-these-could-include-how-you-want-to-improve-the-code-but-dont-have-time-right-now-to-do-it-hopefully-your-future-self-will-handle-it&quot;&gt;Tip: Leave TODO as comments for your future self. These could include how you want to improve the code but don’t have time right now to do it. Hopefully your future self will handle it.&lt;/h3&gt;

&lt;h2 id=&quot;upgrading-fast-get-rid-of-legacy&quot;&gt;Upgrading Fast (get rid of Legacy)&lt;/h2&gt;

&lt;p&gt;Newer languages and frameworks provide many more features, provide security upgrades and are easier to use. The longer you wait to upgrade, the harder the upgrading becomes.&lt;/p&gt;

&lt;p&gt;You will also find that &lt;strong&gt;clean code is much easier to upgrade&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;do-it-one-step-at-a-time&quot;&gt;Do it one step at a time.&lt;/h3&gt;

&lt;h3 id=&quot;making-a-big-bang-change-is-never-feasible&quot;&gt;Making a big bang change is never feasible.&lt;/h3&gt;

&lt;p&gt;Upgrading can come in a variety of sizes.&lt;/p&gt;

&lt;h4 id=&quot;simple-upgrades-such-as--custom-sql-executors-in-code-to-using-an-orm&quot;&gt;Simple upgrades such as — Custom SQL executors in code to using an ORM.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Get rid of prepared statements and replace them with Spring Data JPA&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;or-they-can-be-a-little-bigger-such-as--going-from-angularjs-to-angular&quot;&gt;Or they can be a little bigger such as — Going from AngularJs to Angular.&lt;/h4&gt;

&lt;p&gt;Developers of the code to provide guides and tools to make upgrading frameworks easier&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*Like&lt;/strong&gt;: &lt;a href=&quot;https://angular.io/guide/upgrade&quot;&gt;Official guide for upgrading from AngularJS to Angula*&lt;/a&gt;r.&lt;/p&gt;

&lt;p&gt;The above guide mentions some things that are worth mentioning here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Some&lt;/strong&gt; applications will be &lt;strong&gt;easier to upgrade&lt;/strong&gt; than others, and there are many &lt;strong&gt;ways to make it easier for yourself&lt;/strong&gt;. It is possible to &lt;strong&gt;prepare&lt;/strong&gt; and &lt;strong&gt;align&lt;/strong&gt; AngularJS &lt;strong&gt;applications&lt;/strong&gt; with Angular &lt;strong&gt;even before beginning the upgrade&lt;/strong&gt; &lt;strong&gt;process&lt;/strong&gt;. These preparation steps are all about &lt;strong&gt;making the code more decoupled&lt;/strong&gt;, more &lt;strong&gt;maintainable&lt;/strong&gt;, and &lt;strong&gt;better aligned with modern development tools&lt;/strong&gt;. That means in addition to making the upgrade easier, you &lt;strong&gt;will also improve the existing AngularJS applications&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;or-a-much-bigger-one-like--going-from-java-to-kotlin&quot;&gt;Or a much bigger one like — Going from Java to Kotlin.&lt;/h4&gt;

&lt;p&gt;Choosing a programming language is a hard process.&lt;/p&gt;

&lt;p&gt;Ideally, you would want to choose something which is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Non-proprietary&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In-expensive or FREE&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Easy to code in&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Flexible enough&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;java-to-kotlin&quot;&gt;Java to Kotlin&lt;/h4&gt;

&lt;p&gt;Enterprises seem to have got stuck with Java 8 (released in 2017) because it is free. The newer versions of Java offer much better and easy to use features but enterprises won’t upgrade.&lt;/p&gt;

&lt;p&gt;Kotlin might be a much better choice because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It is completely interoperable with Java. You can import your Java code and any other built by anyone within Kotlin.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring Boot and Android officially support Kotlin.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Kotlin is much more modern than Java offering things like default parameters and null checks.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A smaller way to check if Kotlin might be right for you is to migrate or create one microservice in/to Kotlin.&lt;/p&gt;

&lt;h4 id=&quot;python-2-to-python-3&quot;&gt;Python 2 to Python 3&lt;/h4&gt;

&lt;p&gt;The support for Python 2 ended (2019) after 20 years of development. Its code is frozen and won’t even receive security upgrades. Time to upgrade to Python 3.&lt;/p&gt;

&lt;h2 id=&quot;code-reviews&quot;&gt;Code Reviews&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-06-clean-code-leave-it-better-than-you-found-it/2.png&quot; alt=&quot;No code review discussion is relevant without mentioning this.&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;benefits-of-code-review&quot;&gt;Benefits of Code Review&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Code reviews share knowledge&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;As code reviews expose developers to new ideas and technologies, they write better and better code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Nobody wants to dive into a critical piece of code they didn’t write&lt;/strong&gt;–&lt;strong&gt;especially during a production emergency&lt;/strong&gt;. Code reviews share knowledge across the team so that any team member can take up the reins and continue steering the ship.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Code reviews make for better estimates&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Any code reviewer is also exposed to the complexity, known issues, and concerns of that area of the code base&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Keep in mind, &lt;strong&gt;code review is not just a senior team member reviewing a junior team member’s code&lt;/strong&gt;. Code review should happen across the team in every direction. Knowledge knows no bounds! Yes, code review can help newer engineers, but by no means should it be used solely as a mentoring exercise.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://www.atlassian.com/agile/software-development/code-reviews&quot;&gt;Why code reviews matter (and actually save time!)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The article also mentions ways to make code reviews much more productive.&lt;/p&gt;

&lt;h3 id=&quot;when-done-right-code-reviews-actually-save-time-in-the-long-run&quot;&gt;When done right, code reviews actually save time in the long run.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Share the load&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Review before merging&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use peer pressure to your advantage&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Previous&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/a7bca1e66d9e&quot;&gt;Always know why you are catching an exception&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Index&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/30d717f32ae4&quot;&gt;Tips on writing Clean Code&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Code is much more like a work of art/craft that people consider it.</summary></entry><entry><title type="html">Clean Code Exception handling</title><link href="www.ankushchoubey.com/medium/2020/01/06/clean-code-exception-handling.html" rel="alternate" type="text/html" title="Clean Code  Exception handling" /><published>2020-01-06T00:00:00-06:00</published><updated>2020-01-06T00:00:00-06:00</updated><id>www.ankushchoubey.com/medium/2020/01/06/clean-code-exception-handling</id><content type="html" xml:base="www.ankushchoubey.com/medium/2020/01/06/clean-code-exception-handling.html">&lt;h4 id=&quot;clean-code-7&quot;&gt;Clean Code 7&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Errors should never pass silently.
Unless explicitly silenced.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;~The Zen of Python, by Tim Peters&lt;/p&gt;

&lt;h1 id=&quot;create-custom-exception-classes&quot;&gt;Create custom exception classes&lt;/h1&gt;

&lt;p&gt;Your exceptions should say exactly what went wrong. While those provided by programming languages are good, they are too general and are not specific to your codebase.&lt;/p&gt;

&lt;p&gt;Oversimplified example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Bad&lt;/strong&gt;: Exception(“number is smaller than 0”)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Better&lt;/strong&gt;: SpeedException(“Speed should not be smaller than 0”)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason you want to do this is that you can handle different types of exceptions in different ways and it is much easy to know exactly what went wrong from the logs.&lt;/p&gt;

&lt;p&gt;In most programming languages creating exception is easy. Just inherit from the main Exception class which should be enough for most cases.&lt;/p&gt;

&lt;p&gt;Custom Exception class also makes your logs easier to read.&lt;/p&gt;

&lt;h1 id=&quot;always-know-why-you-are-catching-an-exception&quot;&gt;Always know why you are catching an exception…&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-06-clean-code-exception-handling/1.png&quot; alt=&quot;TODO: Find and Add YouTube video attribution&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;-or-just-dont-catch-it-throws-to-the-caller&quot;&gt;… or just don’t catch it (throws to the caller)&lt;/h1&gt;

&lt;p&gt;if you are not going to do anything with the exception don’t catch it just throw it.&lt;/p&gt;

&lt;p&gt;Don’t add throw exception in the catch block. Use &lt;strong&gt;throws while declaring the function instead&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;for-unsupported-operations&quot;&gt;For Unsupported Operations&lt;/h1&gt;

&lt;p&gt;In if-else statements or switch cases, it is always good to have a default case which will execute if no other condition is true.&lt;/p&gt;

&lt;p&gt;If something is not possible or not supported then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;throw (Java): &lt;strong&gt;UnsupportedOperationException&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;raise (Python): &lt;strong&gt;NotImplementedError&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-06-clean-code-exception-handling/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;global-exception-handling&quot;&gt;Global exception handling&lt;/h1&gt;

&lt;p&gt;These allow you to have the same exception handling mechanism in case you have not explicitly handled the exception.&lt;/p&gt;

&lt;p&gt;The most basic thing to do here is logging the exception.&lt;/p&gt;

&lt;h4 id=&quot;spring-java-controlleradvice&quot;&gt;Spring (Java): @ControllerAdvice&lt;/h4&gt;

&lt;iframe width=&quot;854&quot; height=&quot;480&quot; src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FyIr5iNIXJjo%3Ffeature%3Doembed&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DyIr5iNIXJjo&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FyIr5iNIXJjo%2Fhqdefault.jpg&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Previous&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/43dfcff10bcd&quot;&gt;Avoid inventing algorithms and data structures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/604c7e06235d/&quot;&gt;Leave code better than you found it.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Index&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/30d717f32ae4&quot;&gt;Tips on writing Clean Code&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Clean Code 7</summary></entry><entry><title type="html">Clean Code Remove un-necessary code</title><link href="www.ankushchoubey.com/medium/2020/01/04/clean-code-remove-un-necessary-code.html" rel="alternate" type="text/html" title="Clean Code  Remove un-necessary code" /><published>2020-01-04T00:00:00-06:00</published><updated>2020-01-04T00:00:00-06:00</updated><id>www.ankushchoubey.com/medium/2020/01/04/clean-code-remove-un-necessary-code</id><content type="html" xml:base="www.ankushchoubey.com/medium/2020/01/04/clean-code-remove-un-necessary-code.html">&lt;h4 id=&quot;clean-code-5-you-aint-gonna-need-it&quot;&gt;Clean Code #5: You ain’t gonna need it&lt;/h4&gt;

&lt;h1 id=&quot;declare-the-local-variable-as-close-to-where-it-is-used-and-remove-un-necessary-once&quot;&gt;Declare the local variable as close to where it is used and remove un-necessary once&lt;/h1&gt;

&lt;p&gt;Local variables declared at some different place makes it harder to read the code.&lt;/p&gt;

&lt;h4 id=&quot;example&quot;&gt;Example:&lt;/h4&gt;

&lt;p&gt;Below are the variations of aRandomFunction which does a bunch of operations (skipped by dots) and on completion returns “Hello” along with the date.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/1.png&quot; alt=&quot;Bad&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The local variables &lt;strong&gt;names&lt;/strong&gt; and &lt;strong&gt;date&lt;/strong&gt; are declared on top of the functions.&lt;/p&gt;

&lt;p&gt;The first usage of the functions are somewhere between the function and the last usage is in the return statement.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/2.png&quot; alt=&quot;Better. 2 lines saved.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;strong&gt;name&lt;/strong&gt; and &lt;strong&gt;date&lt;/strong&gt; variables are moved to where they are first used.&lt;/p&gt;

&lt;p&gt;Let’s say after moving we realize that we do not use the variables between the code, we just use it during return.&lt;/p&gt;

&lt;p&gt;So we should move it near the return statement:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/3.png&quot; alt=&quot;Even Better&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;just-return-it-dont-store&quot;&gt;Just return it. Don’t store&lt;/h1&gt;

&lt;p&gt;Continuing from the previous example:&lt;/p&gt;

&lt;p&gt;Storing in a variable is un-necessary is it is never used.&lt;/p&gt;

&lt;p&gt;Rather than storing “hello” in name and a new date in date, we should just return it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;remove-commented-code&quot;&gt;Remove commented code&lt;/h1&gt;

&lt;p&gt;In case you do need to refer to the exact code you can always check it in your version control.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;remove-functions-and-variables-which-you-do-not-use&quot;&gt;Remove functions and variables which you do not use.&lt;/h1&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;variable-argument-lengths&quot;&gt;Variable argument lengths&lt;/h1&gt;

&lt;h4 id=&quot;python-args-kwargs-more-than-just-variable-length-argument&quot;&gt;Python: *args, **kwargs (more than just variable-length argument)&lt;/h4&gt;

&lt;p&gt;Java also has an implementation for &lt;a href=&quot;https://www.youtube.com/watch?v=BFL1oWnEO2k&quot;&gt;variable length arguments&lt;/a&gt; but they are not as elegant as Python implementation. Therefore, a list as an argument might be better suited.&lt;/p&gt;

&lt;iframe width=&quot;854&quot; height=&quot;480&quot; src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FWcTXxX3vYgY%3Ffeature%3Doembed&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DWcTXxX3vYgY&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FWcTXxX3vYgY%2Fhqdefault.jpg&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;default-arguments&quot;&gt;Default Arguments&lt;/h1&gt;

&lt;p&gt;Python and Typescript both support default function arguments.&lt;/p&gt;

&lt;p&gt;While not officially supported in Java, one can work around the builder pattern to get similar functionality.&lt;/p&gt;

&lt;p&gt;![Source: &lt;a href=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/5.png&quot;&gt;Managing Constructor with many parameters&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;use-annotationsdecorators&quot;&gt;Use annotations/decorators&lt;/h1&gt;

&lt;p&gt;Annotations extend the functionality of your function dynamically and reduce the size of the code dramatically.&lt;/p&gt;

&lt;h4 id=&quot;python-decorators&quot;&gt;Python: Decorators&lt;/h4&gt;

&lt;p&gt;In python, these are called decorators.&lt;/p&gt;

&lt;p&gt;Python 3.7+ also has &lt;strong&gt;@ dataclass **annotation which auto-generates constructor, **str&lt;/strong&gt; and &lt;strong&gt;repr&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Relevant Links:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://realpython.com/primer-on-python-decorators/&quot;&gt;&lt;em&gt;Primer on Python Decorator&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Source: &lt;code class=&quot;highlighter-rouge&quot;&gt;[functools](https://docs.python.org/2/library/functools.html#module-functools)&lt;/code&gt; — Higher-order functions and operations on a callable object&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://realpython.com/python-data-classes/&quot;&gt;&lt;em&gt;The Ultimate Guide to Data Classes in Python 3.7&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PNpt7cFjGsM&quot;&gt;&lt;em&gt;Method Types in Python OOP: @classmethod, @staticmethod, and Instance Methods&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;spring-boot-java&quot;&gt;Spring Boot (Java)&lt;/h4&gt;

&lt;p&gt;![Source: &lt;a href=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/6.png&quot;&gt;Spring Annotations Cheat Sheet&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;java-for-jpa&quot;&gt;Java: For JPA&lt;/h4&gt;

&lt;p&gt;No need to write @Column over your entity’s variables. By default, camelCase is substituted with snake_case.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;lookupId =&amp;gt; lookup_id&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can change these using &lt;a href=&quot;https://www.baeldung.com/hibernate-naming-strategy&quot;&gt;naming strategies&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;java-map-using-mapper-dont-create-your-own-logic&quot;&gt;Java: Map using Mapper. Don’t create your own logic.&lt;/h4&gt;

&lt;p&gt;There are many &lt;a href=&quot;https://www.baeldung.com/java-performance-mapping-frameworks&quot;&gt;mapping frameworks in Java&lt;/a&gt; that can make the task of converting one object to another much much easier. This can be especially helpful when you want to convert your @Entity to a DTO object.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;java-project-lombok-to-avoid-boilerplate&quot;&gt;Java: Project Lombok to avoid boilerplate&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Project Lombok is a java library that automatically plugs into your editor and build tools, spicing up your java.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Never write another getter or equals method again, with one annotation your class has a fully featured builder, Automate your logging variables, and much more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;@Getter and @Setter&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@NonNull&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@ToString&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@EqualsAndHashCode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Data&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Cleanup&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Synchronized&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@SneakyThrows&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The good thing is that it is present is &lt;a href=&quot;https://start.spring.io/&quot;&gt;SpringInitializer&lt;/a&gt;. Just click the Project Lombok option.&lt;/p&gt;

&lt;p&gt;With this, the size of your java code will reduce dramatically.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;remove-duplicates&quot;&gt;Remove duplicates&lt;/h1&gt;

&lt;p&gt;Linters will provide you a list of duplicate codes. Shove it into a function/method.&lt;/p&gt;

&lt;h4 id=&quot;use-existinginbuilt-methods-rather-than-new-once&quot;&gt;Use existing/inbuilt methods rather than new once&lt;/h4&gt;

&lt;p&gt;This goes back to not inventing new algorithms. If something is already made, don’t make it again. Reuse it. &lt;em&gt;(Link — Clean Code: &lt;a href=&quot;https://medium.com/@ankushchoubey/clean-code-know-thy-complexities-data-structures-and-avoid-inventing-algorithms-especially-for-43dfcff10bcd&quot;&gt;Know thy complexities&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Probably a bad example #1 of reuse:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Below is a very complex function. One of them works with List and other with an array but that is the only difference in implementation.&lt;/p&gt;

&lt;p&gt;The bad approach is creating the same logic to work with different data structures.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A better approach is to have one main logic function and convert one data structure to another and then call the main one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can also take advantage of having the same name for both the functions which means less to remember.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Probably a bad example #2 of reuse:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is similar to the above.&lt;/p&gt;

&lt;p&gt;Here suppose you already have a complex function that works on a list of integers, and now you have to make a similar one to work on a single int.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;single-line-boolean-evaluation&quot;&gt;Single line boolean evaluation&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-01-04-clean-code-remove-un-necessary-code/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;think-in-terms-of-streams&quot;&gt;Think in terms of Streams&lt;/h1&gt;

&lt;p&gt;Streams make your code really really tiny and give much better performance. Streams do have a learning curve but are worth it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(swap in a stream() for parallelStream() and you just went Super Saiyan 3)&lt;/em&gt;&lt;/p&gt;

&lt;iframe width=&quot;854&quot; height=&quot;480&quot; src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Ft1-YZ6bF-g0%3Ffeature%3Doembed&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dt1-YZ6bF-g0&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Ft1-YZ6bF-g0%2Fhqdefault.jpg&amp;amp;key=d04bfffea46d4aeda930ec88cc64b87c&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Though the implementation of Java streams and having a single line list comprehension in Python are very different, they are similar in terms of style of code.&lt;/p&gt;

&lt;iframe width=&quot;854&quot; height=&quot;480&quot; src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FAhSvKGTh28Q%3Ffeature%3Doembed&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DAhSvKGTh28Q&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FAhSvKGTh28Q%2Fhqdefault.jpg&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;create-and-use-base-classes&quot;&gt;Create and use base classes&lt;/h1&gt;

&lt;p&gt;Base classes are an excellent way to avoid duplications. Make them as generic as possible.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Previous&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/@ankushchoubey/clean-code-4-make-the-database-do-the-heavy-lifting-88178a1c3a16&quot;&gt;Make database do the heavy lifting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/43dfcff10bcd&quot;&gt;Avoid inventing algorithms and data structures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Index&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/30d717f32ae4&quot;&gt;Tips on writing Clean Code&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Clean Code #5: You ain’t gonna need it</summary></entry><entry><title type="html">Clean Code Know thy complexities, data structures and avoid inventing algorithms (especially for…</title><link href="www.ankushchoubey.com/medium/2019/12/25/clean-code-know-thy-complexities-data-structures-and-avoid-inventing-algorithms-especially-for.html" rel="alternate" type="text/html" title="Clean Code  Know thy complexities, data structures and avoid inventing algorithms (especially for…" /><published>2019-12-25T00:00:00-06:00</published><updated>2019-12-25T00:00:00-06:00</updated><id>www.ankushchoubey.com/medium/2019/12/25/clean-code-know-thy-complexities-data-structures-and-avoid-inventing-algorithms-especially-for</id><content type="html" xml:base="www.ankushchoubey.com/medium/2019/12/25/clean-code-know-thy-complexities-data-structures-and-avoid-inventing-algorithms-especially-for.html">&lt;h4 id=&quot;clean-code-6-especially-for-maths&quot;&gt;Clean Code #6: (especially for maths)&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;If&lt;/strong&gt; you are &lt;strong&gt;inventing new algorithms&lt;/strong&gt;, you either &lt;strong&gt;don’t know&lt;/strong&gt; the right algorithm &lt;strong&gt;or&lt;/strong&gt; are working on your &lt;strong&gt;PhD&lt;/strong&gt; thesis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Eliminating&lt;/strong&gt; as much of this **accidental complexity **as possible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://www.codeproject.com/Articles/838973/Why-Your-Code-Is-So-Hard-to-Understand&quot;&gt;Why Your Code Is So Hard to Understand&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;keep-your-implementation-as-simple-as-possible&quot;&gt;Keep your implementation as simple as possible&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;If the implementation is hard to explain, it’s a bad idea.
If the implementation is easy to explain, it may be a good idea.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;~ The Zen of Python, by Tim Peters&lt;/p&gt;

&lt;h1 id=&quot;knowing-the-basics-of-time-and-space-complexity-goes-a-long-way&quot;&gt;Knowing the basics of time and space complexity goes a long way.&lt;/h1&gt;

&lt;p&gt;Going through each is beyond the scope of this. Here is a link if you want to go in-depth: &lt;a href=&quot;https://www.youtube.com/playlist?list=PLX6IKgS15Ue02WDPRCmYKuZicQHit9kFt&quot;&gt;Cracking the Coding Interview YouTube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The concept of List, Sets, and Maps is universal though this particular post is going to look at it through the lens of Java&lt;/strong&gt;. In the case of Python map is called a dictionary.&lt;/p&gt;

&lt;h1 id=&quot;additional-tip-always-use-parent-interface-for-the-type&quot;&gt;Additional Tip: Always use parent interface for the type&lt;/h1&gt;

&lt;p&gt;Be as general as you can be.&lt;/p&gt;

&lt;p&gt;This allows you to swap in any form of implementation of parent interface in a single line.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2808/1*M2J_YiubLnrId8k23GiNyA.png&quot; alt=&quot;[Collections in Java](https://www.javatpoint.com/collections-in-java)&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;when-trying-to-find-duplicates&quot;&gt;When trying to find duplicates&lt;/h1&gt;

&lt;h4 id=&quot;use-set-instead-of-lists&quot;&gt;Use Set instead of Lists&lt;/h4&gt;

&lt;p&gt;Set always contain unique values.&lt;/p&gt;

&lt;p&gt;Finding an element in the set is much faster O(1) than compared to a list O(n)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2880/1*HVkmS59kcy7lkvkWSoZNhg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;java-if-you-know-the-size-of-the-list&quot;&gt;Java: If you know the size of the list&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;… if the required maximum capacity of the ArrayList is known, we can get the optimal performance (both average latency and throughput) by specifying the initial capacity to the required capacity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In doing so, we can get 24% to 34% improvement in average latency and 30% to 50% improvement in throughput.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://dzone.com/articles/performance-evaluation-of-java-arraylist&quot;&gt;Performance Evaluation of Java ArrayLists&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;always-have-your-algorithmic-logic-in-a-separate-function&quot;&gt;Always have your algorithmic logic in a separate function&lt;/h1&gt;

&lt;p&gt;This just makes it much easier to debug. Your function will be doing just one this.&lt;/p&gt;

&lt;p&gt;Making it general enough will be even helpful so that you can easily use it.&lt;/p&gt;

&lt;p&gt;**Example: **&lt;a href=&quot;https://medium.com/@ankushchoubey/clean-code-1-flat-is-better-than-nested-leave-when-not-okay-c09ba74090ef&quot;&gt;&lt;em&gt;Separate loop and operation section: Clean Code #1&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;rather-than-implementing-own-logic-take-5-minutes-to-see-if-your-modules-already-provide-the-implementation&quot;&gt;Rather than implementing own logic, take 5 minutes to see if your modules already provide the implementation&lt;/h1&gt;

&lt;h4 id=&quot;example-sorting-in-javascripttypescript&quot;&gt;Example: Sorting in Javascript/Typescript&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2668/1*UoB_nYYPlLWGY14bNEs2IQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2704/1*BS7jYfKY4DhpY-cLuGULHw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A library in java which you can find is &lt;a href=&quot;https://www.baeldung.com/java-commons-lang-3&quot;&gt;Apache Common Lang 3&lt;/a&gt; which does provide a lot of utilities.&lt;/p&gt;

&lt;p&gt;Python has much more abundance. Just google a solution for python and you will probably find a pip package.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previous&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/c477707e5be1&quot;&gt;Remove unnecessary code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/a7bca1e66d9e&quot;&gt;Always know why you are catching an exception&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Index&lt;/strong&gt;: &lt;a href=&quot;https://medium.com/p/30d717f32ae4&quot;&gt;Tips on writing Clean Code&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Clean Code #6: (especially for maths)</summary></entry></feed>