<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://www.ankushchoubey.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.ankushchoubey.com/" rel="alternate" type="text/html" /><updated>2023-08-12T15:38:27-05:00</updated><id>https://www.ankushchoubey.com/feed.xml</id><title type="html">Ankush Choubey</title><subtitle>Full Stack Developer - Cloud/Microservices</subtitle><entry><title type="html">How to promote the habit of TDD within a Team</title><link href="https://www.ankushchoubey.com/promote-tdd-in-a-team/" rel="alternate" type="text/html" title="How to promote the habit of TDD within a Team" /><published>2023-08-09T00:00:00-05:00</published><updated>2023-08-09T15:52:08-05:00</updated><id>https://www.ankushchoubey.com/promoting-tdd-within-a-team</id><content type="html" xml:base="https://www.ankushchoubey.com/promote-tdd-in-a-team/"><![CDATA[<div class="flash announce-block">
    <svg class="octicon octicon-megaphone" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><g fill-rule="evenodd"><path d="M3.25 9a.75.75 0 01.75.75c0 2.142.456 3.828.733 4.653a.121.121 0 00.05.064.207.207 0 00.117.033h1.31c.085 0 .18-.042.258-.152a.448.448 0 00.075-.366A16.74 16.74 0 016 9.75a.75.75 0 011.5 0c0 1.588.25 2.926.494 3.85.293 1.113-.504 2.4-1.783 2.4H4.9c-.686 0-1.35-.41-1.589-1.12A16.42 16.42 0 012.5 9.75.75.75 0 013.25 9z"></path><path d="M0 6a4 4 0 014-4h2.75a.75.75 0 01.75.75v6.5a.75.75 0 01-.75.75H4a4 4 0 01-4-4zm4-2.5a2.5 2.5 0 000 5h2v-5H4z"></path><path d="M15.59.082A.75.75 0 0116 .75v10.5a.75.75 0 01-1.189.608l-.002-.001h.001l-.014-.01a5.829 5.829 0 00-.422-.25 10.58 10.58 0 00-1.469-.64C11.576 10.484 9.536 10 6.75 10a.75.75 0 110-1.5c2.964 0 5.174.516 6.658 1.043.423.151.787.302 1.092.443V2.014c-.305.14-.669.292-1.092.443C11.924 2.984 9.713 3.5 6.75 3.5a.75.75 0 110-1.5c2.786 0 4.826-.484 6.155-.957.665-.236 1.154-.47 1.47-.64a5.82 5.82 0 00.421-.25l.014-.01a.75.75 0 01.78-.061zm-.78.06zm.44 11.108l-.44.607.44-.607z"></path></g></svg>
    <strong>Announcement: </strong> <a href="">This blog post part of my free 'Test First Test Everything' series. Explore the complete series for comprehensive insights and guidance.</a>
</div>

<p>When you do TDD yourself, you’d have improved your code quality, reduced the number of bugs you produce, and become faster at development.</p>

<p>At the same time, it’s likely that developers that don’t code with TDD, are doing less than they could.</p>

<p>(And finally, what’s good for all is good for us) So #weShouldShare our knowledge!</p>

<p>Doing things alone is nice. But having the whole team do TDD is something else. You can pick anyone’s code and any piece of code and know that it was done to the best.</p>

<p>Promoting TDD within the team takes time. And your patience and consistent effort is needed.</p>

<p><img src="/images/promote-tdd-in-a-team.jpg" alt="" /></p>

<h2 id="tdd-is-a-skill-that-you-develop-and-a-choice-that-you-make-">TDD is a skill that you develop and a choice that you make <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></h2>

<p>We’ll explore TDD through the lens of habit change. The Atomic Habits is the best book on habit change. Below are the 4 Laws of Behavior Change as outlined in the book The Atomic Habits.</p>

<ol>
  <li>Make it obvious.</li>
  <li>Make it attractive.</li>
  <li>Make it easy.</li>
  <li>Make it satisfying.</li>
</ol>

<p>We’ll explore the 4 Laws in a different order, starting with <strong>Make it Attractive</strong>.</p>

<h2 id="making-it-attractive">Making it Attractive</h2>

<h3 id="lead-by-example">Lead by Example</h3>

<p>I have found that no matter how much I try to motivate others, they only get motivated when they see an example. When I tried to tell people to do X, they didn’t believe me that it works. And then I did X and did so publically, and they brought questions for people. What was your thought process? How did you do? Didn’t you think? Etc etc.</p>

<p>So start by being someone who does TDD, and does it well. This series of posts may have taught you valuable insights into TDD.</p>

<p>Practice them to their best.</p>

<ul>
  <li>Produce good and clean tests</li>
  <li>Product good and clean code</li>
  <li>Be able to demonstrate that you can code easily.</li>
</ul>

<p>When they see you do TDD and see the quality of your code and tests and your change in productivity, They’ll find it inspiring to adopt.</p>

<h3 id="start-using-tests-and-explaining-what-the-code-does">Start using tests and explaining what the Code Does</h3>

<p>When you show your code, start with the tests. Collapse all the code blocks so that developers can only see the test names.</p>

<p>For example, collapsing the upsert method tests would look something like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>upsert method
 - WHEN data is present
  - SHOULD update values
 - WHEN data is not present
  - SHOULD insert new values
</code></pre></div></div>

<p>Now you can speak the tests easily.</p>

<h2 id="make-it-satisfying">Make it satisfying</h2>

<h3 id="find-the-early-adopters-and-help-them-through-the-journey">Find the early adopters and help them through the journey</h3>

<p>Some people are more open to trying new ideas than others. This group also includes those developers who are new and those developers who want to improve their coding skills.</p>

<p>Start with them. Teach them TDD. You could always refer to this series.</p>

<p>When one person becomes an evangelist of the process, more people will start adopting.</p>

<p><img src="https://omniplexlearning.com/wp-content/uploads/Highres-scaled.jpg.webp" alt="Highres" /></p>

<p>Source: <a href="https://omniplexlearning.com/blog/technology-adoption-curve-stages/">https://omniplexlearning.com/blog/technology-adoption-curve-stages/</a></p>

<h3 id="take-sessions-on-tdd-and-continuously-coach">Take sessions on TDD and continuously coach</h3>

<p>The first reaction of people who hear TDD is that they think they know what TDD is or that they say they have practiced it but it didn’t work.</p>

<p>This is why, try to start by teaching developers and the organization what TDD is and how it can benefit everyone.</p>

<p>Explain the 3 benefits highlighted in this TDD series:</p>

<ol>
  <li>TDD leads to fewer bugs.</li>
  <li>TDD increases code quality.</li>
  <li>TDD is faster overall.</li>
</ol>

<p>TDD has subtle nuances which is why most developers don’t learn it well. Use the git repo and the cheatsheet mentioned in the series to help them.</p>

<p>After the session and as time goes on keep coaching the team on improving their TDD practice. Find impediments and solve them. Identify the signals that you need better tests and continue refining.</p>

<h3 id="provide-time-and-support-to-developers-while-they-learn">Provide time and support to developers while they learn</h3>

<p>TDD requires a mind shift and isn’t as easy to grasp. Give your developers time. Initially, they may take time to ship the feature.</p>

<p>It’s important to help the developers focus on delivering with quality - with tests rather than forcing them to deliver something that’s not finished.</p>

<p>Expect some slowness when the team adopts TDD. But remember to continuously inspect and adapt so that you can solve their impediments. At the same time, don’t let developers drag on their “learning” phase, TDD takes some iterations to learn but overall it will reduce time. If developer productivity doesn’t improve after 20-30 days of iterating, there are problems with the way TDD is practiced.</p>

<h2 id="make-it-easy">Make it easy</h2>

<h3 id="provide-templates">Provide templates</h3>

<p>Many developers won’t know where to start. Therefore, they can start with a template. This would make it easy for them to think in terms of TDD.</p>

<p>The method/when/then style of writing is fantastic by default. You can modify and generate your templates.</p>

<p>You can refer to and use the following template for Java and Javascript and Typescript.</p>

<p>For react, you can use the following template which was first mentioned in <todo-react-post-link></todo-react-post-link></p>

<p><img src="/images/method-when-should.png" alt="" /></p>

<h2 id="make-it-obvious">Make it obvious</h2>

<h3 id="anytime-a-developer-comes-to-you-ask-them-to-show-the-test">Anytime a developer comes to you, ask them to show the test</h3>

<p>This is the simplest thing you can do. When someone comes to you with a doubt, ask them to show it in a test.</p>

<p>If they haven’t written a test, you can walk them through the TDD process.</p>

<h3 id="automate-checking">Automate Checking</h3>

<p>Before and while adding the automation, explain to the team the benefits of adding these checks.</p>

<p>There are two automations that you can do:</p>

<ol>
  <li>Code Coverage</li>
  <li>Test Format</li>
</ol>

<p>For Code Coverage, keep your minimum code coverage for your build pipeline to 85%. When you do TDD, your code coverage would be as close to 90-95%. If it’s less, maybe you or your team haven’t done good TDD.</p>

<p>Test Format verification would help generate cleaner and more consistent tests. Add the equivalent of the ArchUnit test in your Java code. When someone doesn’t follow the test format, this test should fail.</p>

<p>You can find the ArchTest for verifying the given/when/then pattern in the blog post on <a href="https://www.ankushchoubey.com/method-when-should/">method/when/then style</a>.</p>

<div class="flash announce-block">
    <svg class="octicon octicon-megaphone" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><g fill-rule="evenodd"><path d="M3.25 9a.75.75 0 01.75.75c0 2.142.456 3.828.733 4.653a.121.121 0 00.05.064.207.207 0 00.117.033h1.31c.085 0 .18-.042.258-.152a.448.448 0 00.075-.366A16.74 16.74 0 016 9.75a.75.75 0 011.5 0c0 1.588.25 2.926.494 3.85.293 1.113-.504 2.4-1.783 2.4H4.9c-.686 0-1.35-.41-1.589-1.12A16.42 16.42 0 012.5 9.75.75.75 0 013.25 9z"></path><path d="M0 6a4 4 0 014-4h2.75a.75.75 0 01.75.75v6.5a.75.75 0 01-.75.75H4a4 4 0 01-4-4zm4-2.5a2.5 2.5 0 000 5h2v-5H4z"></path><path d="M15.59.082A.75.75 0 0116 .75v10.5a.75.75 0 01-1.189.608l-.002-.001h.001l-.014-.01a5.829 5.829 0 00-.422-.25 10.58 10.58 0 00-1.469-.64C11.576 10.484 9.536 10 6.75 10a.75.75 0 110-1.5c2.964 0 5.174.516 6.658 1.043.423.151.787.302 1.092.443V2.014c-.305.14-.669.292-1.092.443C11.924 2.984 9.713 3.5 6.75 3.5a.75.75 0 110-1.5c2.786 0 4.826-.484 6.155-.957.665-.236 1.154-.47 1.47-.64a5.82 5.82 0 00.421-.25l.014-.01a.75.75 0 01.78-.061zm-.78.06zm.44 11.108l-.44.607.44-.607z"></path></g></svg>
    <strong>Announcement: </strong> <a href="">This blog post part of my free 'Test First Test Everything' series. Explore the complete series for comprehensive insights and guidance.</a>
</div>

<p>Photo by <a href="https://unsplash.com/@austindistel?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Austin Distel</a> on <a href="https://unsplash.com/photos/wD1LRb9OeEo?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>Rewording Naval Ravikant “Happiness is the skill that you develop and the choice that you make” <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="testing" /><category term="tdd" /><summary type="html"><![CDATA[Promoting TDD within a team requires patience, consistent effort, and a focus on creating a positive and supportive environment for learning and improvement.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/promote-tdd-in-a-team.jpg" /><media:content medium="image" url="https://www.ankushchoubey.com/images/promote-tdd-in-a-team.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">7 Tips to Optimize a Microservice for Data Migration Job</title><link href="https://www.ankushchoubey.com/data-migration-microservice/" rel="alternate" type="text/html" title="7 Tips to Optimize a Microservice for Data Migration Job" /><published>2023-08-05T00:00:00-05:00</published><updated>2023-08-05T15:52:08-05:00</updated><id>https://www.ankushchoubey.com/v1-migration-microservice</id><content type="html" xml:base="https://www.ankushchoubey.com/data-migration-microservice/"><![CDATA[<p>I published a post in <a href="[https://www.ankushchoubey.com/db-migration-script/](https://www.ankushchoubey.com/db-migration-script/" title="smartCard-inline">March 2023 about how typically DB migrations</a>  ) take place. The post is considered a direct migration from one DB to the other.</p>

<p>But sometimes, you need to do a lot of things that can only be done by the microservice that would use this data.</p>

<p>For example, you need to structure data in a very particular format which would be a very heavy code to remake as DB Scripts.</p>

<p>Or you also need to communicate with special third parties like saving data to a storage bucket which might be something microservice does already.</p>

<p>In such cases, you need to use your existing microservice for the migration.</p>

<p>This post highlights some techniques I thought of when performing such a migration. The data had lakhs of records.</p>

<h2 id="tip-1-create-a-separate-endpoint-for-bulk">Tip 1: Create a separate endpoint for bulk</h2>

<p>Instead of saving one record at a time, save a bunch of records at once.</p>

<p>This increases performance for two reasons a large part of communication is establishing a connection, sending similar metadata, and waiting for a response on a thread. When you do bulk save, you establish 1 connection instead of multiple, you send similar metadata only once instead of individually and you have only one thread waiting for a response instead of everything waiting for a response.</p>

<p><strong>Diagram of Single Request at a time</strong></p>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG5PcmlnaW5hbCBTeXN0ZW0tPj4rU2VydmVyOiBSZXF1ZXN0IDFcblNlcnZlci0-PitEYXRhYmFzZTogUmVxdWVzdCAxXG5EYXRhYmFzZS0tPj4tU2VydmVyOiBSZXBseSBvZiBSZXF1ZXN0IDFcblNlcnZlci0tPj4tT3JpZ2luYWwgU3lzdGVtOiBSZXBseSBvZiBSZXF1ZXN0IDFcbk9yaWdpbmFsIFN5c3RlbS0-PitTZXJ2ZXI6IFJlcXVlc3QgMlxuU2VydmVyLT4-K0RhdGFiYXNlOiBSZXF1ZXN0IDJcbkRhdGFiYXNlLS0-Pi1TZXJ2ZXI6IFJlcGx5IG9mIFJlcXVlc3QgMlxuU2VydmVyLS0-Pi1PcmlnaW5hbCBTeXN0ZW06IFJlcGx5IG9mIFJlcXVlc3QgMlxuT3JpZ2luYWwgU3lzdGVtLT4-K1NlcnZlcjogUmVxdWVzdCBuXG5TZXJ2ZXItPj4rRGF0YWJhc2U6IFJlcXVlc3QgblxuRGF0YWJhc2UtLT4-LVNlcnZlcjogUmVwbHkgb2YgUmVxdWVzdCBuXG5TZXJ2ZXItLT4-LU9yaWdpbmFsIFN5c3RlbTogUmVwbHkgb2YgUmVxdWVzdCBuIiwibWVybWFpZCI6bnVsbH0" /></p>

<p>Even multiple single requests are passed in parallel, they won’t be as fast as bulk because of the number of connections that are needed to manage.</p>

<p><strong>Diagram of Bulk Request with batch of 1000</strong></p>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG5PcmlnaW5hbCBTeXN0ZW0tPj4rU2VydmVyOiBCdWxrIFJlcXVlc3Q8YnI-KEVnOiAxMDAwIFJlY29yZHMpXG5TZXJ2ZXItPj4rRGF0YWJhc2U6IEJ1bGsgUmVxdWVzdDxicj4oRWc6ICAxMDAwIFJlY29yZHMpXG5EYXRhYmFzZS0tPj4tU2VydmVyOiBSZXBseSBvZiBCdWxrIFJlcXVlc3QgPGJyPihFZzogIDEwMDAgUmVjb3JkcylcblNlcnZlci0tPj4tT3JpZ2luYWwgU3lzdGVtOiBSZXBseSBvZiBCdWxrIFJlcXVlc3Q8YnI-KEVnOiAxMDAwIFJlY29yZHMpIiwibWVybWFpZCI6bnVsbH0" /></p>

<p>Apart from this, databases are optimized for bulk operations, and therefore bulk operations are faster.</p>

<h2 id="tip-2-in-terms-of-io-make-sure-everything-is-in-bulk-all-processes">Tip 2: In terms of IO, make sure everything is in bulk all processes</h2>

<p>When doing bulk operations, you need to ensure everything in the pipeline is in bulk.</p>

<p>If you have twenty steps in your pipeline and 19 of them are bulk and one is sequential, then the sequential step would be a bottleneck to the whole system.</p>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG5CdWxrIC0-PisgQnVsayBSZWNlaXZlcjogQnVsayBvZiAxMDAgUmVjb3Jkc1xuQnVsayBSZWNlaXZlciAtPj4rIFNlcXVlbmNpYWwgU3lzdGVtOiBGaXJzdCBSZWNvcmRcblNlcXVlbmNpYWwgU3lzdGVtLS0-Pi1CdWxrIFJlY2VpdmVyOiBGaXJzdCBSZWNvcmQgUmVwbHlcbkJ1bGsgUmVjZWl2ZXIgLT4-KyBTZXF1ZW5jaWFsIFN5c3RlbTogU2Vjb25kIFJlY29yZFxuU2VxdWVuY2lhbCBTeXN0ZW0tLT4-LUJ1bGsgUmVjZWl2ZXI6IFNlY29uZCBSZWNvcmQgUmVwbHlcbkJ1bGsgUmVjZWl2ZXIgLT4-KyBTZXF1ZW5jaWFsIFN5c3RlbTogbnRoIFJlY29yZFxuU2VxdWVuY2lhbCBTeXN0ZW0tLT4-LUJ1bGsgUmVjZWl2ZXI6IG50aCBSZWNvcmQgUmVwbHlcbkJ1bGsgUmVjZWl2ZXItLT4-LUJ1bGs6IFJlc3BvbnNlIHRvIEJ1bGsgb2YgMTAwIFJlY29yZHMiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<p>So, try to make sure every step is bulk, if you need to fetch data from the database, fetch them all at once.</p>

<p>If you need to save them to the database save them all at once.</p>

<p>Make sure all IO operations are in bulk.</p>

<h2 id="tip-3-make-use-of-message-queuesbuffers-like-kafka-and-leverage-autoscaling-of-instances">Tip 3: Make use of message queues/buffers like Kafka and leverage autoscaling of instances</h2>

<p>If you have a large number of things to transfer, rather than migrating synchronously, you can bring a message queue in between.</p>

<p>The message queue will sit between the source system and the destination system. The data from the source system would be migrated to the buffer. The destination system can independently pick up resources from the buffer when it’s ready and can process them.</p>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoiZmxvd2NoYXJ0IExSXG5Tb3VyY2VTeXN0ZW1bZmE6ZmEtc2VydmVyIFNvdXJjZSBTeXN0ZW1dIC0tPnxmYTpmYS1wbGF5IFB1c2h8IE1lc3NhZ2VRdWV1ZVtmYTpmYS1kYXRhYmFzZSBNZXNzYWdlIFF1ZXVlIFxcbiBcXG4gQWN0cyBhcyBhIGJ1ZmZlciB0aGF0IFxcbnN0b3JlcyBtdWx0aXBsZSBtZXNzYWdlc10gLS0-IHxmYTpmYS1wbGF5IGZhOmZhLXBhdXNlIFBvbGwgd2hlbiByZWFkeXwgUmVjZWl2aW5nW2ZhOmZhLWNvZGUgUmVjZWl2aW5nIFN5c3RlbSBJbnN0YW5jZSAxXVxuTWVzc2FnZVF1ZXVlIC0tPiB8ZmE6ZmEtcGxheSBmYTpmYS1wYXVzZSBQb2xsIHdoZW4gcmVhZHl8IFJlY2VpdmluZzJbZmE6ZmEtY29kZSBSZWNlaXZpbmcgU3lzdGVtIEluc3RhbmNlIDJdXG5NZXNzYWdlUXVldWUgLS0-fGZhOmZhLXBsYXkgZmE6ZmEtcGF1c2UgUG9sbCB3aGVuIHJlYWR5fCBSZWNlaXZpbmczW2ZhOmZhLWNvZGUgUmVjZWl2aW5nIFN5c3RlbSBJbnN0YW5jZSAzXVxuTWVzc2FnZVF1ZXVlIC0tPiB8ZmE6ZmEtcGxheSBmYTpmYS1wYXVzZSBQb2xsIHdoZW4gcmVhZHl8IFJlY2VpdmluZzRbZmE6ZmEtY29kZSBSZWNlaXZpbmcgU3lzdGVtIEluc3RhbmNlIG5dIiwibWVybWFpZCI6bnVsbH0" /></p>

<p>This has the following advantage: The receiving system can autoscale.</p>

<p>If there are too many items in the buffer remaining to be processed, you can increase the number of instances to accommodate. Similarly, when the number of items in the buffer is less, you can scale down to a fewer number of instances.</p>

<p>This way multiple instances can work in parallel and only process messages when they are ready.</p>

<h2 id="tip-4-use-feature-flagging-to-disable-features-that-are-not-needed">Tip 4: Use feature flagging to disable features that are not needed</h2>

<p>Hotstar is an Indian OTT platform that streams IPL, the country’s most-watched sporting event. They get peak traffic of around 2.2Cr. What do they do when they are suddenly hit with all this traffic?</p>

<p>They do two things:</p>

<p>One, they increase the number of instances.</p>

<p>Two, they temporarily disable the number of features on the website to a minimum necessary. They call it “Panic mode”.</p>

<p>While migrating, we can use the same principle, only enable features that are needed for the migration and disable everything else.</p>

<ol>
  <li>List down all the features your microservice provides</li>
  <li>Go through the list and check the essential features needed.</li>
  <li>Add a feature flag to disable the features.</li>
</ol>

<p>In Spring Boot, you could use \@‌ConditionalOnProperty to declare beans when the system is not in migration.mode=true.</p>

<p>You may need to pair this tip up with the last tip in this post.</p>

<h2 id="tip-5-increase-resources-temporarily">Tip 5: Increase resources temporarily</h2>

<p>Increasing the number of instances is called horizontal scaling. Increasing number the of CPU, RAM, and other resources is called vertical scaling.</p>

<p>In most cases, horizontal scaling would be good. But in case you need, go for vertical scaling. This would require a certain level of experimentation monitoring to decide. Monitor your microservice while performing the actions in a lower environment (dev/qa/uat).</p>

<h2 id="tip-6-create-a-temporary-separate-deployment-of-your-microservice">Tip 6: Create a temporary separate deployment of your microservice</h2>

<p>Since you are doing feature flagging, increasing resources, having extra replicas, etc. it’s easier to manage this all by creating a separate deployment.</p>

<p>So, if you had a movies microservice deployment, you’ll create something like a movies-migration deployment.</p>

<p>The new movies-migration all the migration-specific configurations in it.</p>

<h2 id="final-tip-7-and-conclusion-monitor-your-application-to-find-bottlenecks-and-do-experiments-to-mitigate-them">Final Tip 7 and conclusion: Monitor your application to find bottlenecks. And do experiments to mitigate them</h2>

<p>All the strategies above shouldn’t be used blindly, they should be used with experimentation.</p>

<p>Monitor your microservice while performing the migration and see, what’s the bottleneck. And try to resolve it.</p>

<p>If the bottleneck is the database, optimize query performance or use bulk like Tip 1.</p>

<p>If it’s because the service is doing extra things, feature flag it.</p>

<p>If it’s because there is heavy processing, increase resources.</p>

<p>Having an observability platform can be very useful for this sort of experimentation as you can find the bottlenecks really fast through graphs and visualizations.</p>]]></content><author><name></name></author><category term="backend" /><summary type="html"><![CDATA[I published a post in March 2023 about how typically DB migrations  ) take place. The post is considered a direct migration from one DB to the other.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/data-migration-microservice.png" /><media:content medium="image" url="https://www.ankushchoubey.com/images/data-migration-microservice.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Thinking in terms of exponential grow over linear growth</title><link href="https://www.ankushchoubey.com/exponential-growth/" rel="alternate" type="text/html" title="Thinking in terms of exponential grow over linear growth" /><published>2023-07-20T00:00:00-05:00</published><updated>2023-07-20T15:42:15-05:00</updated><id>https://www.ankushchoubey.com/exponential-growth</id><content type="html" xml:base="https://www.ankushchoubey.com/exponential-growth/"><![CDATA[<p><img src="/images/exponential-growth.jpg" alt="" /></p>

<p>Photo by <a href="https://unsplash.com/@scw1217?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" title="‌">Suzanne D. Williams</a> on <a href="https://unsplash.com/photos/VMKBFR6r_jg?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" title="‌">Unsplash</a></p>

<h2 id="thinking-exponentially">Thinking Exponentially</h2>

<p>The lessons in this blog post apply to work, business, and personal life. This blog post is relatable to empiricism which is one of the pillars of Scrum.</p>

<p>For business, it explains how to think of exponential growth and how short-term planning is better long-term than a perfect road map.</p>

<p>Linear thinking is when software companies plan an elaborate road map, of all the stories and break them down into one story or another until you have 100 story cards created.</p>

<p>Linear story is a personal life, is the goal of watching one movie every day. If 1 movie gives you 100 happiness points, 100 movies will you 100 happiness points per day. Not all movies are equal and this doesn’t even consider that you have changed during the process.</p>

<p>Rather than look for incremental improvements, what we should look for is exponential growth, the kind of growth that give 10x ever-growing result.</p>

<p>The exponential growth is kind of the upper quadrants of Eisenhower’s matrix.</p>

<h2 id="lesson-1-not-all-tasks-are-equal-some-tasks-are-more-important-than-other-tasks">Lesson 1: Not all tasks are equal. Some tasks are more important than other tasks.</h2>

<p>We, humans, are very linear thinkers. We think that if we do X things, its output will be X*constant.</p>

<p>For example, if we do X tasks, we’ll have X*constant = Y value.</p>

<p>This is why we have 20 things on our bucket list, we feel all of them are equally important. And just doing them is enough.</p>

<p>For example, you may have:</p>

<ol>
  <li>Learn Piano</li>
  <li>Learn Boxing</li>
  <li>Travel to Japan</li>
  <li>Complete College</li>
  <li>Get A Job</li>
</ol>

<p>And you think all of them have equal value.</p>

<p>But here’s the thing, some of these items are enablers. They are enablers of more things and more opportunities. For example, if you complete college, you are more likely to get a job and more likely to have enough money and maybe freedom to pursue other tasks.</p>

<p>So, the exponential growth path if you are younger and in college is that you should focus on completing college first.</p>

<p>This is the first lesson, not all tasks are equal. Some tasks are more important than other tasks.</p>

<p>Pick the most important task. If you are unable to decide what’s the best, pick either what’s the hardest or pick your best guess. You can always re-iterate your plan later.</p>

<h2 id="second-lesson-doing-one-thing-well-eliminated-20-other-things">Second Lesson: Doing one thing well eliminated 20 other things.</h2>

<p>Now, towards the second lesson. Given our premise of assuming 1 task is equal to X points, if we do N tasks it’ll be X*N points. A linear growth. We learned that certain tasks are more important than other tasks.</p>

<p>Now, here’s something interesting. You might know many people who just get certifications. For example, they may have one certification in AWS Cloud Practitioner, then they get a Certificate related to AWS Solution Architect. And so on and so on. They continue to acquire certificates. Why?</p>

<p>Doesn’t one certificate be enough? You learned something in that one certification <strong>that you can apply</strong> and then you won’t have to learn for another certification.</p>

<p>Okay, some people just want to get certificates and flaunt. But my point here is more general.</p>

<p>If you do something well, it’s less likely you will have to face the same problems again.</p>

<p>If you do something well, it’s more likely that you’ll eliminate a bunch of tasks.</p>

<p>Do the tasks you are doing to their best. Best means you are learning, putting your best, and growing to be better next time. <put link="" here=""></put></p>

<h2 id="lesson-3-perfect-plan-only-works-when-you-are-ineffective">Lesson 3: Perfect plan only works when you are ineffective</h2>

<p>A perfect plan only works when the implementation has been ineffective. You can only plan when you know exactly what is going to happen.</p>

<p>But when you choose to focus on the best thing you can focus on and do it the best way you can do it, you have progress that’s far more than you can imagine and you eliminate a bunch of minimal tasks.</p>

<p>You only know what to do next when you have done the current task. So don’t plan everything, have a rough plan for the long term, but do your best in the current moment.</p>

<p>In software companies, if you can estimate and it went perfectly, you didn’t have exponential growth.</p>

<h2 id="lesson-4-therefore-you-cant-plan-exponential-growth-if-you-have-a-perfect-plan-its-linear-growth">Lesson 4: Therefore, you can’t plan exponential growth. If you have a perfect plan, it’s linear growth.</h2>

<p>If you plot the line of exponential vs linear, you’ll always find the exponential path to be higher ROI.</p>

<p>You can’t plan it perfectly. You know you’ll have a better growth trajectory. So, therefore, <strong>you can relax yourself and your mind</strong>. Focus on your best plan and do your best.</p>

<p>But you can assume your path, it’s better than linear.</p>

<h2 id="lesson-4-exponential-growth-comes-from-dealing-with-areas-you-havent-dealt-with">Lesson 4: Exponential growth comes from dealing with areas you haven’t dealt with.</h2>

<p>In the story of Knights going into the forest, everyone enters the point that seems scariest to them.</p>

<p>Why? Because if you haven’t visited an area, that’s where most of your growth is.</p>

<p>What’s most neglected is where the most growth is.</p>

<p>In software companies, it’s often engineering practices.</p>

<p>Maybe this section is another blog post that I’ll write soon.</p>

<h2 id="conclusion">Conclusion</h2>

<p>We should chase exponential growth.</p>

<p>You can’t plan exponential growth. You can only plan linear growth.</p>

<p>The way to get exponential growth is by picking the most important thing you can pick at the moment and doing them to their best.</p>

<p>When you do this, you eliminate a bunch of tasks and get the most growth.</p>

<p>Then you can pick other sets of tasks and so on.</p>

<hr />

<p>Thoughts: Compounding also leads to exponential growth in money, career and relationships.</p>]]></content><author><name></name></author><category term="planning" /><category term="systems" /><category term="clarity" /><category term="non-technical" /><summary type="html"><![CDATA[Mindsets and statergies to apply exponential progress to life, business and beyond.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/exponential-growth.jpg" /><media:content medium="image" url="https://www.ankushchoubey.com/images/exponential-growth.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How we implemented OData for MongoDB and use it in OpenAPI</title><link href="https://www.ankushchoubey.com/odata-mongo-transpiler/" rel="alternate" type="text/html" title="How we implemented OData for MongoDB and use it in OpenAPI" /><published>2023-07-11T00:00:00-05:00</published><updated>2023-07-11T15:42:15-05:00</updated><id>https://www.ankushchoubey.com/odata-mongo-transpiler</id><content type="html" xml:base="https://www.ankushchoubey.com/odata-mongo-transpiler/"><![CDATA[<p>I have written about how we created a MongoDB transpiler in the following article: <a href="/creating-an-excel-like-language">how we made our custom language that transpiles to MongoDB</a>. The same technique was used for OData. This article includes what’s different.</p>

<p>OData is used a lot in PowerBI, Tableau, and other reporting applications. Microsoft’s Graph API might be the biggest implementation of OData.</p>

<p><img src="/images/odata-mongo-transpiler.png" alt="" /></p>

<h2 id="understanding-odata">Understanding OData?</h2>

<p>For APIs, the most important thing is to be flexible enough to cater to clients’ needs. If the APIs are flexible, you’ll need less number of APIs in total. If APIs are not flexible, you need more numbers or APIs.</p>

<p>For example, suppose an API doesn’t allow the ability to get only a certain item. In this case, you’ll have to call the API and fetch 100s of items to just find one or two that you need. This increases the load on your API and also increases the load on the client.</p>

<p>But if we add the ability to filter in the same API, the client specifies what data it needs and will only receive that data. This would reduce the load on the client as well as the server.</p>

<p>To address this, we have REST expression languages. There are many expression languages. Microsoft made one called OData.</p>

<p>OData allows a client to filter, sort, compute fields, fetch linked resources, select specific fields, get the count of records, etc, all from one single URL.</p>

<p>For example, here is an OData URL:</p>

<p><code class="language-plaintext highlighter-rouge">/theater.svc/Movies?$filter=Name eq 'Iron Man' and Year gt 2010 and IsBlockbuster&amp;$compute=Revenue gt 1000000 as IsBlockbuster&amp;$expand=Actors($filter=Gender eq 'Male')</code></p>

<p>Translated to English, the URL means.</p>

<ol>
  <li>Get all Movies with the Name <code class="language-plaintext highlighter-rouge">Iron Man</code> and Year after <code class="language-plaintext highlighter-rouge">2010</code> that are Blockbusters.</li>
  <li>Blockbusters are movies that have Revenue of more than <code class="language-plaintext highlighter-rouge">1000000</code></li>
  <li>Also, bring the related <code class="language-plaintext highlighter-rouge">Male</code> Actors</li>
</ol>

<p>I’ll explain this particular URL later.</p>

<p>OData has different system parameters. Here are a few you should know.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">$filter</code>: filter data</li>
  <li><code class="language-plaintext highlighter-rouge">$orderby</code>: sorting fields</li>
  <li><code class="language-plaintext highlighter-rouge">$select</code>: select specific fields</li>
  <li><code class="language-plaintext highlighter-rouge">$expand</code>: bring linked resources</li>
  <li><code class="language-plaintext highlighter-rouge">$compute</code>: add new fields to the response</li>
  <li><code class="language-plaintext highlighter-rouge">$count</code>: return just a count</li>
  <li><code class="language-plaintext highlighter-rouge">$top</code>: return top n values only</li>
  <li><code class="language-plaintext highlighter-rouge">$skip</code>: skip top n values return the rest</li>
  <li>More is mentioned in <a href="https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html" title="‌">OData specifications</a></li>
</ul>

<p>These allow the client to specify what kind of data it should return.</p>

<h2 id="why-did-we-choose-to-implement-odata">Why did we choose to implement OData?</h2>

<p>We had built our own custom expression language, and it worked perfectly. It had all the features we needed.</p>

<p>The problem was how do we encourage other developers to use it. We realized OData is something Microsoft folks would understand. And having a specification to point to would be easy for documentation.</p>

<h2 id="how-implementing-odata-was-different">How implementing OData was different?</h2>

<h3 id="odata-is-different-from-openapi">OData is different from OpenAPI</h3>

<p>Our previous language and grammar included only <code class="language-plaintext highlighter-rouge">filtering</code>.</p>

<p>For example, suppose you wanted to search a list of movies and get movies that have the name “Iron”. You would write a filter like: <code class="language-plaintext highlighter-rouge">contains($name, 'Iron')</code>. The OpenAPI URL would be like this.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/movies?filter="contains($name, 'Iron')"
</code></pre></div></div>

<p>This could also include multiple and <code class="language-plaintext highlighter-rouge">&amp;</code> and or <code class="language-plaintext highlighter-rouge">|</code> conditions.</p>

<p>We would extract out the <code class="language-plaintext highlighter-rouge">filter</code> query param manually and only pass the value to the grammar. So, in the above case, only <code class="language-plaintext highlighter-rouge">contains($name, 'Iron')</code> would be passed.</p>

<p>OData was different. OData has a different URL Entirely. Here’s a sample OData URL from above.</p>

<p><code class="language-plaintext highlighter-rouge">/theater.svc/Movies?$filter=Name eq 'Iron Man' and Year gt 2010 and IsBlockbuster&amp;$compute=Revenue gt 1000000 as IsBlockbuster&amp;$expand=Actors($filter=Gender eq 'Male')</code></p>

<p>The technical description is as follows:
The above OData Url is for the resource <code class="language-plaintext highlighter-rouge">Movie</code>. It has 3 parameters: <code class="language-plaintext highlighter-rouge">$filter</code> and <code class="language-plaintext highlighter-rouge">$compute</code>.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">$filter</code> is used to filter out data that match a specific condition.</li>
  <li><code class="language-plaintext highlighter-rouge">$compute</code> is used to add an extra field, <code class="language-plaintext highlighter-rouge">IsBlockbuster</code>. The same field is also used in <code class="language-plaintext highlighter-rouge">$filter</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">$expand</code> is used to get foreign keyed data. In the above example, <code class="language-plaintext highlighter-rouge">Movies</code> resource includes a foreign key for <code class="language-plaintext highlighter-rouge">Actors</code>.</li>
</ul>

<p>Along with <code class="language-plaintext highlighter-rouge">$expand,</code> you can also see <code class="language-plaintext highlighter-rouge">$filter</code> within it.</p>

<p>To handle these use cases of embedded params (one param within another). We had to build our grammar in such a way that it took the entire URL rather than just one <code class="language-plaintext highlighter-rouge">filter</code> query param.</p>

<p>Luckily, we were able to find OData grammar on GitHub. We were able to modify it to implement only the cases we wanted to implement.</p>

<p><a href="https://github.com/luca-vercelli/odata-jpa-mini/blob/master/odata-jpa-mini/src/main/antlr4/odata/antlr/ODataLexer.g4" title="‌">OData Grammar Github</a></p>

<h3 id="odata-specifications">OData Specifications</h3>

<p>In our previous expression language, the syntax was similar to Excel and Google Sheets, but we didn’t have a specification. So, we almost built things on the fly.</p>

<p>With OData, we had a well-documented specification which we knew was perfected over time. We had to worry less about the design of the grammar.</p>

<p><a href="https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html" title="‌">Link to OData Documentation</a></p>

<h2 id="not-implementing-the-complete-spec">Not implementing the complete spec</h2>

<p>OData is vast, and we decided not to implement the complete spec. A complete implementation would take 2+ years, given a team of 5 devs.</p>

<p>Here are some features we chose to ignore because <strong>they didn’t fit our usage patterns</strong>:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">$expand</code></li>
  <li><code class="language-plaintext highlighter-rouge">$format</code></li>
  <li>Datatype checking. We have dynamic fields.</li>
  <li>parameters within parameters like <code class="language-plaintext highlighter-rouge">Movies/$expand=Actors($filter=Gender eq 'Male')</code></li>
</ul>

<h2 id="implementing-the-same-query-params-in-openapi">Implementing the same query params in OpenAPI</h2>

<p>We started building the OData transpiler with the hopes of using it in OpenAPI, which is the majority of our use case. To implement this, we did the following cheat.</p>

<p>Our open API endpoints looked like this.</p>

<p><code class="language-plaintext highlighter-rouge">/{resource}?filter={filter}</code></p>

<p>We decided to add all OData params but without <code class="language-plaintext highlighter-rouge">$</code></p>

<p>Here is the syntactic way of looking at the OpenAPI version: <code class="language-plaintext highlighter-rouge">/{resource}?filter={filter}&amp;compute={}&amp;top={}&amp;orderby={}</code></p>

<p>Our Grammar strictly worked with OData and <code class="language-plaintext highlighter-rouge">$</code>. We couldn’t just put the OpenAPI query in, as it would break the grammar.</p>

<p>To solve this problem, we used a cheat.</p>

<p>We got out all the query parameters from OpenAPI and constructed a fake OData url to pass the grammar.</p>

<p><code class="language-plaintext highlighter-rouge">/fakeResource?$filter={fitler}&amp;$compute={}&amp;$top={}&amp;$orderby={}</code></p>

<p>This way, we were able to use the same grammar and cater to OData and OpenAPI.</p>

<h2 id="critiques-of-odata">Critiques of OData</h2>

<p>While implementing OData, we came across a few critiques, and it’s mainly from this article. <a href="https://jeffhandley.com/2018-09-13/graphql-is-not-odata" title="‌">GraphQL is not OData</a></p>

<ul>
  <li>OData has too many things open by default.</li>
  <li>You need to restrict it. There are security problems, especially with OData being able to run functions. And operations like Sorting on a non-indexed field can bring down the whole system’s DoS.</li>
  <li>OData makes many endpoints harder for Backwards compatibility. And Microsoft tried to pump OData into all its APIs.</li>
  <li>GraphQL is good for sitting between RestAPIs and UI. It complements REST and doesn’t remove the need for it. In GraphQL, when API changes, there are changes to GraphQL Resolvers but rarely to UI, which is calling the GraphQL.</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://www.ankushchoubey.com/creating-an-excel-like-language/">How we created a query and evaluation language similar to Google Sheets and Excel formulas</a></li>
  <li><a href="https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html">OData Specification</a></li>
  <li><a href="https://jeffhandley.com/2018-09-13/graphql-is-not-odata">GraphQL is not OData</a></li>
</ul>]]></content><author><name></name></author><category term="clean-code" /><category term="dsl" /><category term="developer-diary" /><summary type="html"><![CDATA[Implementing OData, Utilizing Specifications, and Enhancing API Flexibility.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/odata-mongo-transpiler.png" /><media:content medium="image" url="https://www.ankushchoubey.com/images/odata-mongo-transpiler.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Keep your business logic in the backend. Not frontend.</title><link href="https://www.ankushchoubey.com/v1/business-logic-backend/" rel="alternate" type="text/html" title="Keep your business logic in the backend. Not frontend." /><published>2023-07-06T00:00:00-05:00</published><updated>2023-07-06T15:52:08-05:00</updated><id>https://www.ankushchoubey.com/v1/v1-business-logic-backend</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/business-logic-backend/"><![CDATA[<p>Your business logic should be at the backend, not the front end.</p>

<p>Here are some of the reasons why having business logic in the frontend is bad:</p>

<ol>
  <li><strong>Security</strong>: It exposes your business logic. It is making your application vulnerable.</li>
  <li><strong>Performance</strong>: It makes the front end heavy. It is making your front end slower.</li>
  <li><strong>Single Responsibility</strong>: It’s a violation of the single responsibility principle. It is making your code unmaintainable.</li>
</ol>

<h2 id="security-it-exposes-your-business-logic-making-your-application-vulnerable"><strong>Security</strong>: It exposes your business logic. Making your application vulnerable</h2>

<p>Having your business logic in the front end is bad for security since anyone can view javascript and change it.</p>

<p>Your backend is secure; no one can look into your backend (ideally).</p>

<p>This is especially important for applications exposed on the internet.</p>

<p>Your backend is more secure than your front end, and you don’t want to expose your business logic to the front end. It should reside at the backend only.</p>

<h3 id="example-1-exposing-a-paid-service">Example 1: Exposing a paid service</h3>

<p>For example, you connect to a paid service to fetch images. Fetching each image costs you $ 0.001. You have decided to limit fetching them to 10 at a time. This would cost $ 0.01. This way, you keep the cost low.</p>

<p>The developer who coded the feature decided that maybe I should add a parameter in the front end. If I want to fetch more images, I’ll just modify the front end and be able to fetch more. He/She adds the code in the frontend that specifies the number of images to be fetched.</p>

<p>Since the code was in javascript, any hacker could easily change the value of the parameter and fetch more images. Suppose a hacker opened the javascript and changed the value from 10 to 100,000. The cost changes from $0.001 to $100.</p>

<p>The solution would be for the developer to keep the code in the backend so that no one can change it.</p>

<h3 id="example-2-exposing-user-details">Example 2: Exposing user details</h3>

<p>Suppose you need data for the logged-in user instead of creating an API that just gets data of the logged-in user from the backend. Your backend API exposes a query param allowing the frontend to pass any userId.</p>

<p>For example,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/users?userId=123
</code></pre></div></div>

<p>This makes your application very vulnerable. First of all, you shouldn’t have exposed <code class="language-plaintext highlighter-rouge">/users</code> endpoint because this is highly sensitive data.</p>

<p>Second of all, being able to change the query param <code class="language-plaintext highlighter-rouge">userId</code> of a non-logged-in user would return the data of a non-logged-in user.</p>

<p>Again, the solution is to keep the logic in your backend. Check which user is logged in and return only its data.</p>

<h2 id="performance-it-makes-the-frontend-heavy-making-your-frontend-slower"><strong>Performance</strong>: It makes the frontend heavy. Making your frontend slower</h2>

<p>People leave a website if it doesn’t provide a response time of about 200ms. This is why your frontend should be as small as possible so that it loads faster and is extremely interactive. Therefore, your frontend should be as dumb as possible.</p>

<p>The more code your write to your frontend, the slower your frontend becomes.</p>

<p>The frontend should just get data from the backend and display it. Get inputs from the user and set it to the backend.</p>

<p>No fancy algorithms should be required at the frontend. Apart from input validation and a bit of list sorting, unless you are building a pure frontend application that doesn’t have a backend, you don’t need any fancy algorithm.</p>

<h2 id="single-responsibility-its-a-violation-of-the-single-responsibility-principle-making-your-code-unmaintainable"><strong>Single Responsibility</strong>: It’s a violation of the single responsibility principle. Making your code unmaintainable</h2>

<p>Having your business logic distributed half at frontend and half at the backend means that you don’t have a single place to manage your business logic. You can’t independently think about frontend and backend without thinking of others.</p>

<p>As discussed in the previous point on performance, for better use of interaction and UX, validations on frontend should be introduced. But they should replicate validations on the backend exactly.</p>

<h2 id="conclusion">Conclusion</h2>

<p>By having your business logic in your backend, you ensure your application is secure, that your frontend is faster, and that backend is the only place where you have the business logic, making it more maintainable.</p>

<p>Make your frontend as dumb as possible, and keep all your business logic in the backend.</p>]]></content><author><name></name></author><category term="web-development" /><category term="software-architecture" /><summary type="html"><![CDATA[Making your application secure, high performance and maintanable.]]></summary></entry><entry><title type="html">Efficient Standups - Achieving Clarity through Walk-The-Board Standups</title><link href="https://www.ankushchoubey.com/v1/walk-the-board/" rel="alternate" type="text/html" title="Efficient Standups - Achieving Clarity through Walk-The-Board Standups" /><published>2023-07-02T00:00:00-05:00</published><updated>2023-07-02T15:52:08-05:00</updated><id>https://www.ankushchoubey.com/v1/v1-walk-the-board</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/walk-the-board/"><![CDATA[<p><img src="/images/v1-walk-the-board.jpg" alt="" /></p>

<p>Photo by <a href="https://unsplash.com/@sebastien_bonneval?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Sebastien Bonneval</a> on <a href="https://unsplash.com/s/photos/kanban?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>

<p>I believe walking the board is an important step towards facilitating Continuous Delivery. The standup format facilitates perfection in updates, focused on one card at a time which is closer to completion and takes less time to complete.</p>

<p>I first learned about Walk-The-Board from a <a href="https://www.youtube.com/watch?v=316qdj10j9M">video posted by Development that Pays</a>.</p>

<p>In this blog post, I talk about the Walk-The-Board approach and what we learned from it.</p>

<h2 id="importance-of-daily-stand-up">Importance of Daily Stand up</h2>

<p>Daily Standup (also called Daily Scrum) is a 15-minute event with the Scrum framework where the team meets at the same time and place to discuss the progress of work.</p>

<p>Scrum events are for inspecting and adapting, and the daily standup is a chance to do that every day.</p>

<p>It keeps team members in sync and increases focus toward the sprint goal. Any impediments are discussed and resolved post the scrum.</p>

<h2 id="how-typically-daily-stand-up-is">How typically Daily Stand up is?</h2>

<p>A typical Daily Stand up involves each team member taking turns and answering 3 questions.</p>

<ol>
  <li>What did I do yesterday?</li>
  <li>What did I do today?</li>
  <li>Do I have any impediments or blockers?</li>
</ol>

<h3 id="problem-1-individual-update-rather-than-work-progress">Problem 1: Individual update rather than work progress.</h3>

<p>While good in its intent, typically, Daily Standup becomes an update on the person rather than the progress of the work that was decided.</p>

<p>For example, a team member may answer it like this;</p>

<ol>
  <li>Yesterday, I had a call with.. blah blah blah. And then I connected with blah blah blah. No impediments.</li>
  <li>Yesterday, I was on leave. Today, I’ll connect with the team to pick up a card.</li>
</ol>

<p>The Daily Stand-up update becomes an individual update rather than a work-related update.</p>

<p>It doesn’t matter if you were on leave yesterday. Or that you had the call with someone. If the work that we decided on was X, the progress should be about the work, not the individual.</p>

<p>While we can try to focus the team on focusing on work updates instead of individual updates, it’s really hard to do as the format of the daily standup requires everyone to speak something.</p>

<h3 id="problem-2-repeatation-the-same-things-over-and-over-again">Problem 2: Repeatation the same things over and over again.</h3>

<p>In Problem 1, we saw how the 3 questions led to individual updates rather than a team update.</p>

<p>When multiple people are working on the same card, you’ll hear the same people speaking the same things over and over again.
For example, Thor, Tony, and Steve worked on the same card, Defeating Thanos. All of them say the same updates.</p>

<ol>
  <li><strong>Thor</strong>: Yesterday, I worked on defeating Thanos. Today I’ll work on defeating Thanos. No impediments.</li>
  <li><strong>Tony</strong>: Yesterday, I worked on defeating Thanos. Today I’ll work on defeating Thanos. No impediments.</li>
  <li><strong>Steve</strong>: Yesterday, I worked on defeating Thanos. Today I’ll work on defeating Thanos. No impediments.</li>
</ol>

<p>Tony and Steve can also shorten their updates.
If <strong>Thor</strong> says,  yesterday, I worked on defeating Thanos. Today I’ll work on defeating Thanos. No impediments.</p>

<p>Tony and Steve could say, I have the same updates as Thor.</p>

<p>But still, this is a repetition. Ideally, one update by Thor would have been enough to judge the progress of work. Tony and Steve have nothing new to offer.</p>

<h3 id="problem-3-remembering-and-prepping-and-then-relaxing">Problem 3: Remembering. And prepping, and then relaxing.</h3>

<p>The 3 questions format is such that it requires extensive preparation and makes people relax after they have said their points.</p>

<h4 id="preparatory-thought-process">Preparatory Thought Process.</h4>

<blockquote>
  <p>What did I do yesterday? Hmm. I did some things… I remember a few points. Okay, it’s my turn next.</p>
</blockquote>

<p>(I say my script. Did this. Will do this. No impediments.)</p>

<h4 id="relaxation">Relaxation</h4>

<blockquote>
  <p>Now it’s someone else’s turn; I can relax since the boss knows what I did. I don’t have to listen to someone else.</p>
</blockquote>

<p>This is school. People are only attentive when they have to answer. After they have answered, they stop paying attention. Social slacking takes over.</p>

<h2 id="how-walk-the-board-approach-is-different-from-daily-stand-up">How Walk-The-Board approach is different from Daily Stand-up?</h2>

<p>The 3 problems described before are because of the design of the 3 questions approach to the daily standup.</p>

<p>The best way to do the standup is not to get better at an inefficient 3 questions approach but to adopt an alternative approach that’s efficient by design.
The walk-the-board approach of daily standup fixes all three problems that come with 3 questions approach.</p>

<ol>
  <li>It fixed problem 1 by turning individual updates into work update</li>
  <li>It does not repeat what has already been said</li>
  <li>It does not require any preparation or extensive remembering. And people keep people attentive throughout the standup.</li>
</ol>

<h3 id="whats-the-walk-the-board-approach">What’s the walk-the-board approach?</h3>

<p>In Walk the Board, instead of going through one person at a time, you start with the board and talk about the items on the board.</p>

<p>To discuss, you start with the rightmost card; the person who has an update about the rightmost card gives updates about that card and <strong>that card only</strong>.</p>

<p>Then the focus is on the next card, which is rightmost. And this way, you talk about all the items on the board.</p>

<p>This solves the following problems:</p>

<h4 id="solving-problem-1-individual-updates-get-replaced-by-work-updates">Solving Problem 1: Individual updates get replaced by work updates.</h4>

<p>Instead of talking about what the person did yesterday that may or may not be related to the work at all, in walk-the-board, you are focused on the work only.</p>

<h4 id="solving-problem-2-repetition-gets-removed-and-you-talk-about-the-update-only-once">Solving Problem 2: Repetition gets removed, and you talk about the update only once.</h4>

<p>The updates in Walk the Board are not jumbled; you only talk about and hear about one card at a time. Once that card has been discussed, someone else won’t likely come up and talk about the same card.</p>

<h4 id="solving-problem-3-remove-remembering-prepping-and-keeping-everyone-attentive">Solving Problem 3: Remove Remembering, prepping, and keeping everyone attentive.</h4>

<p>The order in which the work updates happen is not fixed since one day; you can have someone’s cards on the right. The other day you might have someone else’s card on the right.</p>

<p>Since it’s not a fixed order, everyone stays attentive!</p>

<h3 id="extra-benefits-of-walking-the-board">Extra benefits of walking the board</h3>

<h4 id="focusing-on-the-card-closest-to-done">Focusing on the card closest to done.</h4>

<p>If you deliver the task, your users will get to use the implemented feature faster.</p>

<p>If your users get value faster, they’ll give more money.</p>

<p>The card closest to done can be delivered faster since it’s close to do.</p>

<p>Walk the Board starts with the rightmost card. Therefore, the right-most case becomes. And if the card is not moved, it’ll be talked about every day first!</p>

<p>Tip: It’s helpful to enforce picking just one card and pulling it to completion.</p>

<h2 id="how-we-adopted-the-walk-the-board-approach">How we adopted the Walk-The-Board Approach?</h2>

<p>Walk the Board took a few weeks for us to adopt. We started by practicing Walk the Board one day before the standup.</p>

<p>We polished each update to be in the following format,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Regarding, {cardname}, {update}
</code></pre></div></div>

<p>This way, our updates were much sharper.</p>

<p>We restricted telling about our days and focused on talking about the work itself.</p>

<p>It took us around 4 weeks to perfect walk the board.</p>

<h2 id="what-was-the-impact-of-the-walk-the-board-approach">What was the impact of the Walk-The-Board approach?</h2>

<p>When I first saw the video of the Walk the Board method. I was instantly in love with it because it addressed the problem I always faced. Preparing to talk about what I am going to say next is overhead. I have to remember everything that I did yesterday, and there are fewer props.</p>

<p>Here are some other effects I observed:</p>

<h3 id="consolidated-updates">Consolidated Updates</h3>
<ul>
  <li>Each person might be working on different swim lanes (i.e., Different Parts of the value stream), and by default, we hear updates about all of them. While doing walk the board, we went swim-line by swim-lane.</li>
  <li>This meant all topics were discussed together in a swim lane regardless of how many different teams the members belonged to.</li>
</ul>

<h3 id="team-update">Team Update</h3>

<p>It felt like a team update rather than a status update. It doesn’t matter what you did the day before. What matters is how much progress you have made.</p>

<h3 id="shorter-time-for-updates">Shorter time for updates</h3>
<p>Updates with walk-the-board are much shorter than the traditional 3 question update. These updates were must shorter and on point.</p>

<h3 id="finishing-a-card">Finishing a card.</h3>
<p>We started focusing on getting cards done over picking up new cards. Though this also involved a lot of deliberate effort.</p>]]></content><author><name></name></author><category term="business" /><category term="agile" /><summary type="html"><![CDATA[I believe walking the board is an important step towards facilitating Continuous Delivery. The standup format facilitates perfection in updates, focused on one card at a time which is closer to completion and takes less time to complete.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/v1-walk-the-board.jpg" /><media:content medium="image" url="https://www.ankushchoubey.com/images/v1-walk-the-board.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">My Journey through the 75 Hard Challenge</title><link href="https://www.ankushchoubey.com/v1/75-hard" rel="alternate" type="text/html" title="My Journey through the 75 Hard Challenge" /><published>2023-07-01T00:00:00-05:00</published><updated>2023-07-01T15:52:08-05:00</updated><id>https://www.ankushchoubey.com/v1/v1-75-hard</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/75-hard"><![CDATA[<p>I have attached my progress pdf at the end of the post.</p>

<h2 id="what-is-the-75-hard-challenge">What is the 75 Hard Challenge?</h2>

<p><img src="/images/v1-75-hard/75-hard.png" alt="" /></p>

<p>75 Hard Challenge is a mental toughness challenge designed to toughen you up beyond the point you are now. It was created by Andy Frisella. And many people around the world participate in the challenge.</p>

<p>I have seen many Instagram Reels where people document their days of 75 Hard.</p>

<p>The Challenge has the following rules:</p>

<ul>
  <li>For 75 days,
    <ul>
      <li>Work out twice a day for 45 minutes.</li>
      <li>At least one workout outside (even if it’s rainy or sunny).</li>
      <li>Workouts cannot be back to back.</li>
      <li>Read 10 pages of a non-fiction self-help or entrepreneurial
 book.</li>
      <li>Diet</li>
      <li>No alcohol or cheat day</li>
      <li>Take a progress picture every day.</li>
      <li>Drink 1 Gallon (3.7 liters) of pure (no mixing anything) water.
If you fail any step, you have to reset your counter to zero and try again.</li>
    </ul>
  </li>
</ul>

<p>The challenge can be scaled and has some customizability. For example, you can do any diet as long as it is healthy, and you can do any workout as long as it’s a good workout.</p>

<p>The challenge is not supposed to be something you plan to do. It’s something you just do.</p>

<p>Many people confuse 75 Hard with a physical fitness challenge. But it is not a physical fitness challenge. It’s a mental toughness challenge that has some good physical side effects.</p>

<p>To learn more about the 75 Hard Challenge, I recommend listening to Andy Fresilla’s Podcast on it. I listened to it on the first few days of the morning walk. 75 Hard is part 1 of 4 part Live Hard challenge, which is for a year.</p>

<h2 id="why-did-i-pick-up-the-75-hard-challenge">Why did I pick up the 75 Hard Challenge?</h2>

<p>I had constant feelings of having no purpose in life. I felt like I was just living my life, and days were passing. The excitement for the future wasn’t there. Add to it, I wasn’t able to take steps towards moving on from a heartbreak. Combine this with stress-related IBS, which is painful every day.</p>

<p>After talking to a friend about all this, I asked him what I should do when I have no purpose. He suggested I become a Warrior in a Garden.</p>

<p>I have always felt like a warrior born at the wrong time. But the Warrior in a Garden fit the mental model I was looking for.</p>

<blockquote>
  <p>It’s better to be a warrior in a garden than to be a gardener in a war.</p>
</blockquote>

<p>Be prepared and ready and do your best always. Another quote that I relate to is</p>

<blockquote>
  <p>Those who know how to use a sword but keep them sheth will inherit the world.</p>
</blockquote>

<p>Both the conversation with my friend Akshay and the quote helped me towards the path of searching for which “heavy” load I could find.</p>

<p>I thought, “I am already depressed. Might as well push myself and see what I can do. It won’t be as worse anyways.”</p>

<p><img src="/images/v1-75-hard/more-burpees.JPG" alt="" /></p>

<p>Then I remembered 75 Hard and Project 50. I searched both up, and I thought 75 Hard was better. So, I learned about it and got the printout to track.</p>

<p>75 Hard wasn’t the first time I was pushing myself. I had pushed myself 2 years ago, too, when I used to work out every day and plan and get work done. I listened to Jocko, and he had a high impact on me. Before the 75 Hard Challenge, I was confident that I would be able to complete it.</p>

<p>Between the last time, I pushed myself and 75 Hard, I had always been good at setting up “systems.” I had read atomic habits and was good at making my environment such that it would help me towards the task I was aiming at. But my systems kept failing; I needed what was there two years ago—a driver of all the system. I needed Discipline.</p>

<p><img src="/images/v1-75-hard/super-saiy.gif" alt="" /></p>

<h2 id="how-i-adapted-to-the-principles-of-75-hard-and-made-it-a-habit">How I adapted to the principles of 75 Hard and made it a habit?</h2>

<h3 id="starting-out">Starting out</h3>

<p>I printed out the 75 Hard PDF. I did not mess with Apps because I wanted to rely less on my phone.
<a href="https://www.docdroid.net/50XW1Br/75-hard-tracker-pdf" title="smartCard-inline">https://www.docdroid.net/50XW1Br/75-hard-tracker-pdf</a></p>

<p>I declared to my family that I would be starting the challenge. I showed them the PDF. The diet was a big concern. I could not cook myself because I won’t have enough time. So, I opted for going for online Delivery instead.</p>

<p>My family had been very supportive. I had told the reason why I was doing the challenge. “I want to get out of depression.”</p>

<p>I had allocated “funds” from my salary, and I calculated that I would be spending 16,000 Rs per month. For many, 16,000 on food is a lot. I viewed it as an investment. If I invest 16,000 here, I’ll get a lot more back. It was a winning investment with low risk.</p>

<h3 id="modifying-a-rule">Modifying a rule</h3>

<p>I have been sober my entire life. So I modified the No alcohol rule to be no YouTube. I gave myself one day to set up all the blockers for not watching YouTube.</p>

<h3 id="diet">Diet</h3>

<p>Over the coming days, I ate the following, and these stuck through the 75 days.</p>

<ol>
  <li>Morning: Order Eggs and Omelet. Later I ordered Paneer Bhurji.</li>
</ol>

<figure>
  
    <img loading="lazy" class="docimage" src="/images/v1-75-hard/breakfast1.png" alt="" style="max-width: 400px" />
    
    
      <figcaption>Eggs</figcaption>
    
</figure>

<figure>
  
    <img loading="lazy" class="docimage" src="/images/v1-75-hard/breakfast2.png" alt="" style="max-width: 400px" />
    
    
      <figcaption>Paneer Bhurji</figcaption>
    
</figure>

<ol>
  <li>Afternoon: I ordered Chicken Salad.</li>
</ol>

<figure>
  
    <img loading="lazy" class="docimage" src="/images/v1-75-hard/lunch-1.png" alt="" style="max-width: 400px" />
    
    
      <figcaption>Lunch 1</figcaption>
    
</figure>

<figure>
  
    <img loading="lazy" class="docimage" src="/images/v1-75-hard/lunch-2.png" alt="" style="max-width: 400px" />
    
    
      <figcaption>Lunch 2</figcaption>
    
</figure>

<ol>
  <li>Evening:
    <ul>
      <li>I ordered Gym Packer Protein which was multiple high-protein items in one order.</li>
      <li>I combined this with Curd, which the doctor said would be good for my IBS.</li>
    </ul>
  </li>
</ol>

<p>Later in the challenge, around Day 40, I started to make Paneer Bhurji at home. It was fast, and I have now become good at making Paneer Bhurji.</p>

<figure>
  
    <img loading="lazy" class="docimage" src="/images/v1-75-hard/dinner-1.png" alt="" style="max-width: 500px" />
    
    
      <figcaption>A Palio Dinner I made by boiling.</figcaption>
    
</figure>

<p>If I could not eat or didn’t just feel like it, I would not eat at all.
If I was outside with my friends, I would either eat salad or not eat at all.</p>

<p>Fasting is good for health.</p>

<h3 id="drinking-1-gallon-of-water">Drinking 1 Gallon of Water</h3>

<ol>
  <li>I drank 1 liter when I woke up.</li>
  <li>2nd liter after coming from my morning walk, which was my morning workout.</li>
  <li>I drank 3rd liter of water while working out at the gym.</li>
  <li>And the 700 ml of water after the workout.</li>
</ol>

<p>If I missed drinking a few liters, I would chuck it before bed. This did mean I would wake up frequently at night, but it was part of the challenge, so it had to be done, and I didn’t regret it.</p>

<p>I also started setting reminders and wallpaper to remember to drink water.</p>

<p>Later, I started drinking more 3rd liters of water in the afternoon. So, during the workout, I would finish the last 700ml. This was because I reduced the need to chuck water at night.</p>

<h3 id="exercise">Exercise</h3>

<p><img src="/images/v1-75-hard/goku.JPG" alt="" /></p>

<p>I opted for a morning outdoor walk and evening Gym.</p>

<p>The morning walk was initially just a walk, but later I ran for many days. I didn’t face rain during the challenge, but I faced it after it. It’s fun to walk in the rain.</p>

<p>I would go for a walk at any time, after waking up or in the afternoon. It didn’t matter if it was hot outside or not. I would just go.</p>

<figure>
  
    <img loading="lazy" class="docimage" src="/images/v1-75-hard/walk.png" alt="" style="max-width: 500px" />
    
    
      <figcaption>A typical walking day.</figcaption>
    
</figure>

<p>Later, I work up earlier, at 7:30 AM, and start going. I would do my Daily Scrum stand-up while on the walk. But later, I felt it became stressful to walk while thinking about work, so I woke up even earlier at 6:30. To wake up early, I had to sleep early, but this time wasn’t fixed. If I couldn’t wake up early, I would still go for a walk at any time.</p>

<p>While on the walk, I would listen to podcasts. Initially, it was a podcast about 75 Hard, Jordan Peterson’s advice on becoming tougher, The Jocko Podcast, etc. This primed my mindset to the challenge more and more.</p>

<p>Many days when I was feeling overwhelmed, I did not listen to anything and just walked while “listening” to my mind.</p>

<video width="720" height="720" src="/images/v1-75-hard/pull-ups.mp4" controls=""></video>

<p>The evening gym was a group session at Cult.fit Fitness Center, which is near my home. I mostly did weights. I would do Yoga and Dance only if I wasn’t able to do weights.</p>

<p>I went mostly at 7 PM but later went at 6 PM.</p>

<p>On days when I had to travel, I would go for a walk early at 6 AM and go to the gym late at 7 PM or 8 PM. I had to only do once/twice because most of the time, I prioritized gym and the 75 Hard challenge over all other activities.</p>

<h3 id="reading">Reading</h3>

<p>I used to read for 20 minutes every day a few years ago. I always pick up non-fiction books that are related to areas that would help me. I read the following books.</p>

<ol>
  <li>Discipline Equals Freedom
    <ul>
      <li>Since I started 75 Hard, I thought this was the best book I could read.</li>
      <li>I learned a lot about the mindset and the thought process of being more disciplined.</li>
      <li>I used the lessons of the book throughout the challenge and still use them.</li>
    </ul>
  </li>
  <li>Ego is the Enemy
    <ul>
      <li>I was thinking between choosing the Dichotomy of Leadership and Ego is the Enemy, but I went with Ego is the Enemy because I thought I still had to improve before preaching to others.</li>
      <li>It’s a book that I thought was only about Ego. But it turned out to be about Humility and Discipline.</li>
      <li>This was a really good next book to Discipline Equals Freedom and Humility is what makes us pursue Discipline.</li>
    </ul>
  </li>
  <li>The Anxious Hearts Guide
    <ul>
      <li>I would not have read The Anxious Heart, but Ego is the Enemy had taught me about Humility.</li>
      <li>I was suffering from Anxious Attachment Style, and I still have anxious tendencies; I knew this was a big problem.</li>
      <li>The problem with reading and learning is that I open up Pandora’s box of pain. But it was, and for me, it still is something I wanted to deal with. So I started reading.</li>
      <li>I learned a lot about why I failed, why heartbreak happened, and what I can do to improve. And I’m grateful to the author who wrote the book.</li>
    </ul>
  </li>
  <li>The shortness of life
    <ul>
      <li>Made me more focused and aware.</li>
      <li>I am in love with chapter 3. The tranquility of the mind.</li>
    </ul>
  </li>
  <li>The Scrum Guide
    <ul>
      <li>I became the scrum master for our team for two weeks, and I thought I would have to coach the time.</li>
      <li>I also started implementing Scrum in my own life. So, reading the scrum guide would be perfect.</li>
      <li>It was just 10 pages, so I finished it in 1 day.</li>
    </ul>
  </li>
  <li>The Scrum Handbook.
    <ul>
      <li>I had 6 days left in the challenge, and I wanted to read technical books after the challenge.</li>
      <li>So, I found the Scrum Handbook PDF, which was 66 pages. 66/6 is equal to 6 days of reading.</li>
    </ul>
  </li>
</ol>

<p>The books I chose and the podcasts I listened to while walking were related to the challenges I was facing. So these kept me focused and learning and improving at what I was doing day to day. i.e., the lessons became practice as soon as I read them.</p>

<figure>
  
    <img loading="lazy" class="docimage" src="/images/v1-75-hard/ego-is-the-enemy.jpg" alt="" style="max-width: 400px" />
    
    
      <figcaption>From Ego is the Enemy. Become a student</figcaption>
    
</figure>

<h3 id="daily-photo">Daily Photo</h3>

<p>I used the EveryDay app for capturing a daily photo. The app allows for clicking one photo a day in the same position as the previous time, and you get a nice video/gif export of all the photos.</p>

<p>Clicking photos was the most boring part of the 75 Hard Challenge. I can see some progress, but not all.</p>

<p>I took photos shirtless, but my thighs are not captured. The size of my thighs is much smaller than they were before.</p>

<p>I missed taking a photo on Day 69 of the 75 Hard. That does mean I failed 75 Hard and should start again, but I’ll override. Photos are not something as imp as eating healthy, never eating junk, exercising twice a day, drinking 1 gallon every day, and reading 10 min. Hope that explanation should be enough.</p>

<video width="720" height="720" src="/images/v1-75-hard/progress.mp4" controls=""></video>

<h2 id="what-are-the-results-of-the-75-hard-challenge">What are the results of the 75 Hard Challenge?</h2>

<p>Before 75 Hard,</p>

<ul>
  <li>I was mentally disturbed.</li>
  <li>Freezing for ourselves in one place, overthinking, and being anxious.</li>
  <li>Had low work productivity.</li>
  <li>Had stress-related pain from IBS.</li>
  <li>Had low to no motivation.
During the 75 Hard,</li>
  <li>I pushed myself to a point that I was able to handle.</li>
  <li>I workout out every day. At the start of the challenge, I as picking 7KG and 10Kgs arms. By the end of the challenge, I was able to pick 25 Kg per arm.
    <ul>
      <li>My deadlift went from around 30-40 kgs to 92 Kgs.</li>
      <li>My weight dropped from around 83 KGs to 73 Kg. 10 Kg was reduced.</li>
    </ul>
  </li>
  <li>I was reading 0 books and spent all my time on YouTube.
    <ul>
      <li>I watched 0 hours of youtube on its website. I did watch YouTube video when it was put up on TV or when it was necessary on a separate site.</li>
      <li>I read 3 books and 2 PDFs and retained and applied many of their lessons</li>
    </ul>
  </li>
  <li>My productivity was boosted.
    <ul>
      <li>By the time I became scrum master on day 70. I was ultra-productive. I’ll talk about the productivity hacks in a separate post.</li>
    </ul>
  </li>
  <li>My IBS reduced and reduced beyond the point of recognition. This was thanks to the mostly palio-type food I was eating and lots of exercises I was doing.</li>
</ul>

<p>I have confidence restored and was now able to plan for the long term, which I wasn’t able to do while I was depressed.</p>

<p>Towards the end of the challenge, I started following Scrum in daily life, which increased my productivity and work ethic even further.</p>

<p>I would like to thank Andy Fresilla for creating the 75 Hard Challenge. The program helped me bounce back to my old self. Thank you, Sir!</p>

<h2 id="advice-for-people-considering-75-hard">Advice for people considering 75 Hard</h2>

<p>Here is my advice for those considering 75 Hard.</p>

<ul>
  <li><strong>Do it</strong>. It’s fun!</li>
  <li><strong>Create systems that many it easier for you to do it.</strong> You could read Discipline Equals Freedom and Atomic Habits during the challenge.</li>
  <li><strong>Do it for mental toughness</strong>. I was able to chuck water at midnight because I was doing the challenge for mental toughness. Even pushing myself at the gym was part of my mental toughness. If I was doing it to become healthy, I would have been satisfied with simple signs of progress. But I ignored those signs of progress because I wasn’t doing it for health. I was doing it for my mind.</li>
  <li>Learn from the guy himself. <strong>Listen to Andy Fresilla’s podcast on 75 Hard</strong>.</li>
  <li>Regarding exercise, <strong>you won’t feel tired at all if you are eating a high-protein diet</strong>.</li>
  <li>And <strong>if you fail, look for the silver lining of progress</strong> as long as you are improving, you will get better.</li>
  <li><strong>Get your family and friends on your side.</strong> Don’t be shy to open up and explain to them why you are doing this challenge and why it’s important to you. My family thought I would give up after a few weeks, but later in the challenge, they supported me and motivated me to complete the challenge.</li>
</ul>

<p>If you tried, completed, or failed the 75 Hard Challenge, ping me using the comment box below! I’ll respond.</p>

<h2 id="progress-pdf">Progress PDF</h2>

<div id="adobe-dc-view" style="width: 100%;"></div>
<script src="https://documentcloud.adobe.com/view-sdk/main.js"></script>

<script type="text/javascript">
	document.addEventListener("adobe_dc_view_sdk.ready", function(){ 
		var adobeDCView = new AdobeDC.View({clientId: "2514d5b218e34c40997b0d93db9e1f5b", divId: "adobe-dc-view"});
		adobeDCView.previewFile({
			content:{location: {url: "/images/v1-75-hard/75_Hard_Progress_Report_2023_June_22.pdf"}},
			metaData:{fileName: "Ankush - 2023 June 22 75 Hard.pdf"}
		}, {embedMode: "IN_LINE"});
	});
</script>

<style>
    .sdk-Branding-branding{ display: none !important; }
</style>

<p>images/v1-75-hard/75_Hard_Progress_Report_2023_June_22.pdf</p>]]></content><author><name></name></author><category term="non-technical" /><category term="responsibility" /><summary type="html"><![CDATA[75 hard is a mental toughness challenge which includes 2 times workouts a day, diet, 1 gallon of water and reading 10 pages of a book every day without compromise. I completed the challenge. In this post, I share my journey and tips.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/v1-75-hard/super-saiy.gif" /><media:content medium="image" url="https://www.ankushchoubey.com/images/v1-75-hard/super-saiy.gif" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How we created a query and evaluation language similar to Google Sheets and Excel formulas</title><link href="https://www.ankushchoubey.com/creating-an-excel-like-language/" rel="alternate" type="text/html" title="How we created a query and evaluation language similar to Google Sheets and Excel formulas" /><published>2023-06-15T00:00:00-05:00</published><updated>2020-05-25T15:42:15-05:00</updated><id>https://www.ankushchoubey.com/creating-an-excel-like-language</id><content type="html" xml:base="https://www.ankushchoubey.com/creating-an-excel-like-language/"><![CDATA[<p>I had the opportunity to be part of a team that created a programming language. Building a programming language includes too many steps and it’ll be unfair of me to say I know all of it. Therefore, I have added many resources that I used at the end of this article.</p>

<p>We used a tool called Antlr that helped us skip some hard stages.</p>

<p>The following article describes;</p>

<ol>
  <li>What was built?</li>
  <li>How to build an expression language? What decisions did we take?</li>
  <li>Make it like Google Sheets Building Evaluation</li>
</ol>

<h2 id="what-was-built">What was built?</h2>

<p>My team recently created an expression language for rest APIs. The expression language would work like this.</p>

<p>If someone calls a REST API, they can send a query like this</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/rest/v1/users?query=“$name==‘Ankush’ &amp; $age &gt;= 25”
</code></pre></div></div>

<p>Then they only would receive that particular data.</p>

<p>This same can be used for building formulas that can be used for excel like functionality.</p>

<p>For example, suppose your data model is called User and it consists of the following record</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
</span><span class="err">“firstName”:</span><span class="w"> </span><span class="err">“Ankush”</span><span class="p">,</span><span class="w">
</span><span class="err">“lastName”:</span><span class="w"> </span><span class="err">“Choubey”</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>You can write an expression in a map form like</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="err">“fullName”:</span><span class="w"> </span><span class="err">“concat($firstName</span><span class="p">,</span><span class="w"> </span><span class="err">‘</span><span class="w"> </span><span class="err">‘</span><span class="p">,</span><span class="w"> </span><span class="err">$lastName)”</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The result would be adding an additional field resulting in</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
</span><span class="err">“firstName”:</span><span class="w"> </span><span class="err">“Ankush”</span><span class="p">,</span><span class="w">
</span><span class="err">“lastName”:</span><span class="w"> </span><span class="err">“Choubey”</span><span class="p">,</span><span class="w">
</span><span class="err">“fullName”:</span><span class="w"> </span><span class="err">“Ankush</span><span class="w"> </span><span class="err">Choubey”</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The expression language supports arithmetic operators, logical operators, functions, etc.</p>

<p>This article explains how we build the expression language.</p>

<h2 id="how-to-build-an-expression-language-what-decisions-did-we-take">How to build an expression language? What decisions did we take?</h2>

<p>Building your own programming language involves 5 steps.</p>

<ol>
  <li>Tokenisation</li>
  <li>Lexical Analysis</li>
  <li>Semantic Analysis</li>
  <li>Compiling</li>
  <li>Execution</li>
</ol>

<p>Each language is made up of distinct items. For example, this could be keywords like if, else, for, functions, numbers, strings, etc. these are all tokens.</p>

<p>The Lexical analysis is a step that converts the stream of tokens into a parse tree.</p>

<p><img src="https://tomassetti.me/wp-content/uploads/2017/01/antlr4_parse_tree.png" alt="" /></p>

<p>Semantic analysis means understanding what each node means.</p>

<p>For example, if someone is performing equals on an unequal datatype, it should fail, $firstName == 1 should result in an error because firstName is a string field.</p>

<p>Compiling is generating the machine-executable code.</p>

<p>We went for building a transpiler. A transpiler is a piece of code that converts one language to another language.</p>

<p>We went for a transpiler from our expression language to MongoDB Queries.</p>

<h2 id="how-we-built-it">How we built it?</h2>

<p>The compiler world has become pretty mature. There are many tools available that help you get more than halfway through without effort.</p>

<p>We settled on a tool called Antlr.</p>

<p>In Antlr, we can describe the grammar of our programming language and it would generate code that would automatically do the first two stages, tokenization and lexical analysis.</p>

<p>Antlr would also generate Abstract Classes and Interfaces that we can extend. So, we extended those Interfaces and built our transpiler.</p>

<p>For example, suppose you want to compare two strings.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'string one' == 'string two'
</code></pre></div></div>

<p>You would write an Antlr grammar like the following</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>equality: value == value; #equality
value: [a-zA-z]+ #value
</code></pre></div></div>

<p>Antlr would generate a Visitor interface and implementation which would be something like this</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>type visitEquality(Expression.EqualityContext ctx);

type visitValue(Expression.ValueContext ctx);
</code></pre></div></div>

<p>We can then create a concrete implementation which would be something like this</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>String visitEquality(Expression.EqualityContext ctx){
  String left = visit(ctx.children().get(0))
  String right = visit(ctx.children().get(0))
  return
}

String visitValue(Expression.ValueContext ctx){
  return ctx.getText();
}
</code></pre></div></div>

<p>Antlr provided tokenizer and we would parse that and send it to Visitors. The visitors would generate MongoDB Queries.</p>

<h2 id="making-it-like-excel-and-google-sheets-ie-building-evaluation">Making it like Excel and Google Sheets i.e. Building Evaluation</h2>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/e/e2/Spreadsheet.png" alt="" /></p>

<p>Building evaluation was also easy. There were some edge cases that we took care of:</p>

<ol>
  <li>Google Sheets allows for the conversion of data types</li>
  <li>One cell with a formula can refer to another cell</li>
</ol>

<h3 id="google-sheets-allows-for-the-conversion-of-data-types">Google Sheets allows for the conversion of data types</h3>

<p>In Google Sheets, if you have a string + number, the evaluation is as follows:</p>

<ol>
  <li>If the string can be converted to a number then it would be converted to a number, <code class="language-plaintext highlighter-rouge">'1'+1</code> is equal to <code class="language-plaintext highlighter-rouge">2</code></li>
  <li>If we have two strings still it would get converted to the number <code class="language-plaintext highlighter-rouge">'1' + '1'</code> = <code class="language-plaintext highlighter-rouge">2</code></li>
  <li>If any number cannot be converted to a string, we’ll throw an error.</li>
</ol>

<p>To achieve this functionality we converted all values passed to the <code class="language-plaintext highlighter-rouge">+</code> operator to numbers using MongoDB’s <code class="language-plaintext highlighter-rouge">toDouble</code> method. For example,</p>

<p><code class="language-plaintext highlighter-rouge">'1' + '2'</code> would become <code class="language-plaintext highlighter-rouge">{$add: [toInt('1'), toInt('2')]}</code></p>

<p>We did similar to other functions we had, for example for concat we converted everything to String using MongoDB’s <code class="language-plaintext highlighter-rouge">toString</code> method.</p>

<h3 id="one-cell-with-a-formula-can-refer-to-another-cell">One cell with a formula can refer to another cell</h3>

<p>Suppose we received multiple formulas where one formula refers to another, for example</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "formulaOne": "$field1 + 20",
  "formulaTwo": "$formulaOne + 40",
}
</code></pre></div></div>

<p>Suppose in the database, the value of field <code class="language-plaintext highlighter-rouge">$field1</code> is <code class="language-plaintext highlighter-rouge">20</code>, then the evaluation output should be</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "field1": 20
  "formulaOne": 40,
  "formulaTwo": 80,
}
</code></pre></div></div>

<p>We also don’t want a race condition in formula. For example, if <code class="language-plaintext highlighter-rouge">field1</code> refers to <code class="language-plaintext highlighter-rouge">field2</code>, <code class="language-plaintext highlighter-rouge">field2</code> should not refer <code class="language-plaintext highlighter-rouge">field1</code>.</p>

<p>So the following case is invalid</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "someFormula1": "$someFormula2 + 1",
  "someFormula2": "$someFormula1 + 2",
}
</code></pre></div></div>

<p>To achieve both these, we did a tree walk.</p>

<p>We know what formula names are: <code class="language-plaintext highlighter-rouge">["formulaOne", "formulaTwo"]</code> let’s set this to a variable</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">formulaFieldNames</span> <span class="o">=</span> <span class="n">formulasMap</span><span class="o">.</span><span class="na">getKeys</span><span class="o">();</span>
</code></pre></div></div>

<p>Now we can do a DFS and resolve each formula, if the formula has another formula, we’ll substitute that formula.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">void</span><span class="w"> </span><span class="err">dfsResolveFormulas(String</span><span class="w"> </span><span class="err">currentFormulaField,</span><span class="w"> </span><span class="err">String</span><span class="w"> </span><span class="err">currentFormulaValue,</span><span class="w"> </span><span class="err">List&lt;String&gt;</span><span class="w"> </span><span class="err">formulas,</span><span class="w"> </span><span class="err">Map&lt;String,String&gt;</span><span class="w"> </span><span class="err">originalMap,</span><span class="w"> </span><span class="err">Map&lt;String,String&gt;</span><span class="w"> </span><span class="err">resolvedMap,</span><span class="w"> </span><span class="err">List&lt;String&gt;</span><span class="w"> </span><span class="err">path)</span><span class="p">{</span><span class="w">

  </span><span class="err">if(path.contains(currentFormulaField))</span><span class="p">{</span><span class="w">
    </span><span class="err">//INFO:</span><span class="w"> </span><span class="err">path</span><span class="w"> </span><span class="err">list</span><span class="w"> </span><span class="err">keeps</span><span class="w"> </span><span class="err">track</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">race</span><span class="w"> </span><span class="err">conditions</span><span class="w"> </span><span class="err">in</span><span class="w"> </span><span class="err">formula</span><span class="w">
    </span><span class="err">throw</span><span class="w"> </span><span class="err">RaceAroundCondition(</span><span class="s2">"There is race around condition in formula"</span><span class="err">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="err">if(resolvedMap.contains(currentFormulaField))</span><span class="p">{</span><span class="w">
    </span><span class="err">return;</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="err">path.add(currentFormulaField);</span><span class="w">
  </span><span class="err">for(String</span><span class="w"> </span><span class="err">formula:</span><span class="w"> </span><span class="err">formulas)</span><span class="p">{</span><span class="w">
    </span><span class="err">if(currentFormulaValue.contains(formula))</span><span class="p">{</span><span class="w">
      </span><span class="err">dfsResolveFormulas(formula</span><span class="p">,</span><span class="w"> </span><span class="err">originalMap.get(formula)</span><span class="p">,</span><span class="w"> </span><span class="err">formulas</span><span class="p">,</span><span class="w"> </span><span class="err">originalMap</span><span class="p">,</span><span class="w"> </span><span class="err">resolvedMap);</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="err">currentFormulaValue=</span><span class="w"> </span><span class="err">currentFormulaValue.replace(formula</span><span class="p">,</span><span class="w"> </span><span class="err">resolvedMap())</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="err">resolvedMap.put(currentFormulaField</span><span class="p">,</span><span class="w"> </span><span class="err">currentFormulaValue)</span><span class="w">
  </span><span class="err">path.remove(currentFormulaField);</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The following code achieves the following</p>

<p>Given these formulas</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "formulaOne": "$field1 + 20",
  "formulaTwo": "$formulaOne + 40",
}
</code></pre></div></div>

<p>It would resolve them to</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "formulaOne": "$field1 + 20",
  "formulaTwo": "$field1 + 20 + 40",
}
</code></pre></div></div>

<p>Now no formulas depend on each other.</p>

<p>And in the case of race conditions, when we try to walk the tree, in the following example</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "someFormula1": "$someFormula2 + 1",
  "someFormula2": "$someFormula1 + 2",
}
</code></pre></div></div>

<ol>
  <li>During the first walk, we would have <code class="language-plaintext highlighter-rouge">someFormula1</code>. The path variable would be <code class="language-plaintext highlighter-rouge">["someFormula1"]</code>.</li>
  <li>During the second walk, we would have <code class="language-plaintext highlighter-rouge">someFormula2</code> added. The path variable would become <code class="language-plaintext highlighter-rouge">["someFormula1", "someFormula2"]</code>.</li>
  <li>Now again we would try to walk <code class="language-plaintext highlighter-rouge">someFormula1</code>. But as we see the path variable already contains <code class="language-plaintext highlighter-rouge">someFormula1</code> so we’ll throw an error.</li>
</ol>

<h2 id="lessons">Lessons</h2>

<p>Building a programming language was easier than we initially thought. And it was a lot of fun. It was a developer checklist item that I needed because it boosted my confidence.</p>

<p>The compiler world is better difficult but for simpler use cases like ours, it was set with Open Source tools such as Antr.</p>

<h2 id="resources">Resources</h2>

<p><a href="https://www.freecodecamp.org/news/the-programming-language-pipeline-91d3f449c919/" title="‌">I wrote a programming language. Here’s how you can, too.</a></p>

<p><a href="https://tomassetti.me/domain-specific-languages/" title="‌">Complete Guide to Domain-Specific Languages</a></p>]]></content><author><name></name></author><category term="clean-code" /><category term="dsl" /><category term="developer-diary" /><summary type="html"><![CDATA[Using the best current programming language creation-tool.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://upload.wikimedia.org/wikipedia/commons/e/e2/Spreadsheet.png" /><media:content medium="image" url="https://upload.wikimedia.org/wikipedia/commons/e/e2/Spreadsheet.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Make yourself do it</title><link href="https://www.ankushchoubey.com/v1/make-yourself-do-it/" rel="alternate" type="text/html" title="Make yourself do it" /><published>2023-06-06T00:00:00-05:00</published><updated>2023-06-06T15:52:08-05:00</updated><id>https://www.ankushchoubey.com/v1/v1-make-yourself-do-it</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/make-yourself-do-it/"><![CDATA[<p>All of our problems are emotional problems. Logical problems are solved easily. The emotional problem is how we feel.</p>

<p>We seek books that tell us the same thing in a different way that eases how we feel. i.e. how we feel impacts us.</p>

<p><strong>We need a strong why to do things</strong>. And here may be some ways to ease your emotions to do it.</p>

<p>Below are a few mental patterns that can be used to “Make yourself Do it”. Treat these as thought experiments.</p>

<h2 id="thought-experiments">Thought Experiments</h2>

<h3 id="turn-off-your-brain-and-do-it">Turn off your brain. And do it</h3>

<p>Don’t think. Don’t rationalize. You know what the activity is, just do it.</p>

<h3 id="imagine-how-youd-feel-once-you-have-accomplished-this-small-task">Imagine how you’d feel once you have accomplished this small task</h3>

<ol>
  <li>The feeling of accomplishment.</li>
  <li>Not having anything over your head.</li>
  <li>Free to do other things.</li>
</ol>

<h3 id="be-mindful-of-how-you-are-feeling-and-then-continue-feeling-it-while-you-do-the-item">Be mindful of how you are feeling and then continue feeling it while you do the item</h3>

<h3 id="just-get-started-and-wait-for-20-min">Just get started and wait for 20 min</h3>

<h3 id="if-you-get-this-task-done-you-dont-have-to-think-about-it-again">If you get this task done, you don’t have to think about it again</h3>

<p>You won’t have anything hanging over your head.</p>

<h3 id="how-will-you-reward-yourself-after-doing-this-task-or-what-will-you-do-during-the-break">How will you reward yourself after doing this task? Or what will you do during the break?</h3>

<h3 id="what-would-this-look-like-if-this-were-easy">What would this look like if this were easy?</h3>

<h3 id="winners-do-it-regardless-of-how-they-feel">Winners do it regardless of how they feel</h3>

<h3 id="make-things-compelling">Make things compelling</h3>

<ol>
  <li>What you do</li>
  <li>Why you do</li>
  <li>How you do</li>
  <li>Where you do</li>
  <li>With whom you do</li>
</ol>

<h3 id="fit-that-image-of-a-brighter-future-in-your-mind">Fit that image of a brighter future in your mind</h3>

<h3 id="if-you-cant-fit-an-image-of-a-brighter-future-imagine-exercising-your-discipline">If you can’t fit an image of a brighter future, imagine exercising your discipline</h3>

<h2 id="conclusion">Conclusion</h2>

<p>Humans are stronger than we things. We need to exercise our wills. The most useful advice I have found is just make yourself do it. Eventually, the reward is so large and obvious that you’ll do it anyways.</p>

<p><img src="/images/v1-make-yourself-do-it.jpg" alt="" /></p>

<p>Photo by <a href="https://unsplash.com/@thelowedown?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Dave Lowe</a> on <a href="https://unsplash.com/s/photos/discipline?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>]]></content><author><name></name></author><category term="philosophical" /><category term="non-technical" /><category term="discipline" /><summary type="html"><![CDATA[How do you exercise discipline? What stops it? It's emotions. How do you overcome your emotions and short-term impulses?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/v1-make-yourself-do-it.jpg" /><media:content medium="image" url="https://www.ankushchoubey.com/images/v1-make-yourself-do-it.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">You can’t logic your way out of depression.</title><link href="https://www.ankushchoubey.com/v1/can-not-logic-your-way-out-of-depression" rel="alternate" type="text/html" title="You can’t logic your way out of depression." /><published>2023-05-31T00:00:00-05:00</published><updated>2023-05-06T15:52:08-05:00</updated><id>https://www.ankushchoubey.com/v1/v1-cannot-logic-your-way-out-of-depression</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/can-not-logic-your-way-out-of-depression"><![CDATA[<p><img src="/images/v1-can-not-logic-your-way-out-of-depression.jpg" alt="" /></p>

<p>Photo by <a href="https://unsplash.com/@yosipri?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Yosi Prihantoro</a> on <a href="https://unsplash.com/s/photos/depression?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>

<p>I’ll share something personal and long. I learned it from HealthyGamerGG.</p>

<p>You can’t logic your way out of depression.</p>

<h2 id="logical-people-get-depressed-more-and-more-strongly-than-rest">Logical people get depressed more and more strongly than rest</h2>

<p>In normal people depression in 9% of people. If you go to the top 2 percent of high IQ people, it is 36%.</p>

<p>Depression is like auto-immune dysfunction of the mind. It’s your brain turning against itself. The stronger your brain is, the worst it does when it turns against itself.</p>

<p>The more logical someone is, the more they rely on logic to get through. So they have underdevelopment emotional intelligence and awareness.</p>

<p>If you ask them, they’ll describe very logical events. And all those logical events will be true. And since they are true, that makes it more of a reason for them to be depressed. But they won’t describe emotion. Cuz they aren’t in touch with it.</p>

<p>And when someone is emotional, it highjacks their logic. They can be logical and say they are logical. But their assumptions before logic can take place is itself hijacked. So, logic doesn’t work.</p>

<p>For example, a depressed person will more likely see the negatives than the positives.</p>

<p>Plus, smart depressed people have the habit of saying to themselves, “I should have had this figured out. But I haven’t had it figured out.” This creates shame.</p>

<h2 id="the-way-out-is-to-develop-emotional-awareness">The way out is to develop emotional awareness</h2>

<p>The way out of this is for the logical person to develop emotional awareness. To recognize what they are feeling and process the feeling independently of logic. To develop perspective.</p>

<p>It’s after they have processed their emotions independent of logic, that they feel a bit better and then they can use their logical brains i.e. when emotional one shouldn’t use their logic.</p>

<p>He also said that the processing of emotions can be crying too. After that, you can use logic. Or talking. Or meditation or journaling.</p>

<p>He recommends meditation (focusing on the breath) for logical people. That’s the only way to clean the perceptions.</p>

<p><a href="https://www.youtube.com/watch?v=PmGIwRvcIrg">Source: HealthyGamerGG</a></p>

<hr />

<p>This problem is also something I learned about people with high conscientiousness.  They tend to tear themselves apart psychologically trying to find what caused the problem so that it won’t repeat. And it’s hard on them</p>]]></content><author><name></name></author><category term="peace" /><category term="non-technical" /><summary type="html"><![CDATA[Notes from HealthyGamerGG podcast. Use emotions to solve emotional problems first only then apply logic. (Pathos first; Logos later).]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/v1-can-not-logic-your-way-out-of-depression.jpg" /><media:content medium="image" url="https://www.ankushchoubey.com/images/v1-can-not-logic-your-way-out-of-depression.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>