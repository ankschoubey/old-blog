<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="www.ankushchoubey.com/feed.xml" rel="self" type="application/atom+xml" /><link href="www.ankushchoubey.com/" rel="alternate" type="text/html" /><updated>2022-08-07T08:04:50-05:00</updated><id>www.ankushchoubey.com/feed.xml</id><title type="html">Ankush</title><subtitle>Random Thoughts</subtitle><entry><title type="html">PREFER UPDATING A BLOG OVER WRITING NEW ONES</title><link href="www.ankushchoubey.com/post-format/" rel="alternate" type="text/html" title="PREFER UPDATING A BLOG OVER WRITING NEW ONES" /><published>2050-09-26T00:00:00-05:00</published><updated>2022-09-23T15:52:08-05:00</updated><id>www.ankushchoubey.com/post-format</id><content type="html" xml:base="www.ankushchoubey.com/post-format/">&lt;p&gt;&lt;img src=&quot;/images/switch-jobs.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;prefer-updating-a-blog-over-writing-new-ones&quot;&gt;PREFER UPDATING A BLOG OVER WRITING NEW ONES&lt;/h1&gt;

&lt;h2 id=&quot;writing-steps&quot;&gt;Writing Steps&lt;/h2&gt;

&lt;p&gt;If I write from POV that how I got the this idea and how I thought about it, readers will know thinking behing an idea and not just the preachiness. Plus, I’ll always have the right words to write.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Task&lt;/th&gt;
      &lt;th&gt;Done&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Structure Done&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thoughts Written&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thoughts Edited&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Grammar Check Done&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Perfect Grammarly Score:&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Image Added  https://www.canva.com/&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Links to Other Posts if Any&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tags Added&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Released Publically&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="www.ankushchoubey.com/images/n-plus-one.svg" /><media:content medium="image" url="www.ankushchoubey.com/images/n-plus-one.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Mutation Testing</title><link href="www.ankushchoubey.com/mutation-testing/" rel="alternate" type="text/html" title="Mutation Testing" /><published>2022-08-07T00:00:00-05:00</published><updated>2022-08-07T15:52:08-05:00</updated><id>www.ankushchoubey.com/mutation-testing</id><content type="html" xml:base="www.ankushchoubey.com/mutation-testing/">&lt;p&gt;I am looking for ways to improve my tests and code quality. On this search, I came across Test Driven Development. With TDD, our test and code quality are too damn high. But still, while we do TDD, there are times when we still can’t predict real-world scenarios.&lt;/p&gt;

&lt;p&gt;For example: If we have a String coming from the external system, it can be null.&lt;/p&gt;

&lt;p&gt;We can have a repository of known issues and remember them. A form of threat-modelling/chaos engineering for logic. It’s also helpful to offload such a task to an automated test. That test is mutation testing.&lt;/p&gt;

&lt;h1 id=&quot;what-is-mutation-testing&quot;&gt;What is mutation testing?&lt;/h1&gt;

&lt;p&gt;Assuming you wrote a test for a piece of code passes. If there are changes to the code, the test should fail.&lt;/p&gt;

&lt;p&gt;That is what mutation testing does. Mutation testing mutates (modifies) the code and checks if tests fail. If the test passes, then we know the test isn’t accurate.&lt;/p&gt;

&lt;p&gt;Tests not being accurate can mean two things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Either the scenario isn’t covered.&lt;/li&gt;
  &lt;li&gt;Or assertion isn’t accurate enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In both cases, once we have uncovered a mutant, we can update our test and code to handle the situation.&lt;/p&gt;

&lt;p&gt;Mutation testing improves both code and tests.&lt;/p&gt;

&lt;h1 id=&quot;how-accurate-is-mutation-testing&quot;&gt;How accurate is mutation testing?&lt;/h1&gt;

&lt;p&gt;Sometimes mutation testing produces garbage responses. Like when a mutant removes a log line.&lt;/p&gt;

&lt;p&gt;Similarly, for specific autogenerated codes, we don’t need mutations.&lt;/p&gt;

&lt;p&gt;Sometimes it’s just garbage. But sometimes, it does uncover accurate details.&lt;/p&gt;

&lt;p&gt;The accuracy of mutation testing depends on the application, selected mutants, and current test quality.&lt;/p&gt;

&lt;p&gt;If the application is simple like CRUD, mutation tests might not uncover anything.&lt;/p&gt;

&lt;p&gt;If the types of mutants selected don’t fit your particular application, then mutations might not uncover anything.&lt;/p&gt;

&lt;p&gt;Mutation tests may not discover anything useful if your test quality is already high. But that’s the point. Right? A fallback safety might discover things early in the SDLC process.&lt;/p&gt;

&lt;h1 id=&quot;comparing-mutation-coverage-with-code-coverage-what-should-mutation-coverage-be&quot;&gt;Comparing mutation coverage with code coverage. What should mutation coverage be?&lt;/h1&gt;

&lt;p&gt;During a test, a piece of code can be executed. But unless a specific assertion is applied, it isn’t tested.&lt;/p&gt;

&lt;p&gt;Code coverage can be high even without any assertion. Mutation coverage cannot be high if there are no assertions.&lt;/p&gt;

&lt;p&gt;Mutation coverage depends on code coverage. If a code isn’t reachable, mutating that code will not affect the test.&lt;/p&gt;

&lt;p&gt;So aim for high code coverage.&lt;/p&gt;

&lt;p&gt;For mutation coverage, my current answer is that sometimes mutation results aren’t good enough.&lt;/p&gt;

&lt;h1 id=&quot;how-to-speed-up-mutation-testing&quot;&gt;How to speed up mutation testing?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Make sure your tests without mutation testing is already fast.&lt;/li&gt;
  &lt;li&gt;Exclude POJO classes.&lt;/li&gt;
  &lt;li&gt;Select the right mutators. Read &lt;a href=&quot;https://blog.pitest.org/less-is-more/&quot;&gt;“Less is More”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Use history so that tests don’t repeat.&lt;/li&gt;
  &lt;li&gt;Multiple threads&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;resource&quot;&gt;Resource&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pitest.org/quickstart/mutators/&quot;&gt;PIT - Mutation Testing Library for Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="testing" /><category term="clean-code" /><summary type="html">I am looking for ways to improve my tests and code quality. On this search, I came across Test Driven Development. With TDD, our test and code quality are too damn high. But still, while we do TDD, there are times when we still can’t predict real-world scenarios.</summary></entry><entry><title type="html">Pre-save Data Validation</title><link href="www.ankushchoubey.com/pre-save-data-validation/" rel="alternate" type="text/html" title="Pre-save Data Validation" /><published>2022-08-06T00:00:00-05:00</published><updated>2022-08-06T15:52:08-05:00</updated><id>www.ankushchoubey.com/pre-save-data-validation</id><content type="html" xml:base="www.ankushchoubey.com/pre-save-data-validation/">&lt;p&gt;It’s imperative to have good data validations in place. Because often, data leads to more bugs even when logic works correctly.&lt;/p&gt;

&lt;p&gt;Data errors can be:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;null values in the database or from an external system&lt;/li&gt;
  &lt;li&gt;expecting values to be positive by getting negative ones.&lt;/li&gt;
  &lt;li&gt;expecting a field to have a specific format but getting something else&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The only solution to a data error is running data migrations which is an unnecessary overhead.&lt;/p&gt;

&lt;p&gt;Therefore, we should ensure that data is validated before it reaches DB.&lt;/p&gt;

&lt;h1 id=&quot;only-allows-certain-data&quot;&gt;Only allows certain data&lt;/h1&gt;

&lt;p&gt;You minimize data problems by only allowing it for specific fields.&lt;/p&gt;

&lt;p&gt;On a UI, it could be dropdowns, date fields with range, and auto-completion options.&lt;/p&gt;

&lt;h1 id=&quot;validate-on-frontend&quot;&gt;Validate on frontend&lt;/h1&gt;

&lt;p&gt;Libraries like &lt;a href=&quot;https://formik.org/&quot;&gt;formik&lt;/a&gt; and &lt;a href=&quot;https://github.com/jquense/yup&quot;&gt;yup&lt;/a&gt; can help perform object and user input validation.&lt;/p&gt;

&lt;p&gt;Typescript is only helpful in knowing the exact names of the variable, its type or keys within an object. Since it gets converted to javascript, typescript can’t be used to validate data types.&lt;/p&gt;

&lt;h1 id=&quot;validate-on-the-backend&quot;&gt;Validate on the backend&lt;/h1&gt;

&lt;p&gt;In Java specifically, you have JSR Validators.&lt;/p&gt;

&lt;p&gt;Use in all POJOs, especially for incoming request objects and entity objects.&lt;/p&gt;

&lt;p&gt;You can also &lt;a href=&quot;https://www.baeldung.com/spring-mvc-custom-validator&quot;&gt;create custom validators&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using enums is also an option.&lt;/p&gt;</content><author><name></name></author><category term="data" /><category term="clean-code" /><summary type="html">It’s imperative to have good data validations in place. Because often, data leads to more bugs even when logic works correctly.</summary></entry><entry><title type="html">Tips on fixing and upgrading Maven Dependencies</title><link href="www.ankushchoubey.com/maven-dependency-upgrade/" rel="alternate" type="text/html" title="Tips on fixing and upgrading Maven Dependencies" /><published>2022-07-29T00:00:00-05:00</published><updated>2022-07-24T15:52:08-05:00</updated><id>www.ankushchoubey.com/maven-updation</id><content type="html" xml:base="www.ankushchoubey.com/maven-dependency-upgrade/">&lt;p&gt;&lt;img src=&quot;/images/maven-dependency-upgrade/header.svg&quot; alt=&quot;Maven Logo From Wikipedia&quot; /&gt;&lt;/p&gt;

&lt;p&gt;{$ include note.html content=”&lt;strong&gt;For beginners&lt;/strong&gt;: Instead of writing your code, you can include code written by other people. This is done by setting up dependencies. Maven is a java build tool that helps streamline and automate dependency management so that you don’t have to manually configure things within each machine. Apart from this, maven also helps in testing, and release and has a plugin ecosystem to automate many tasks.” $}&lt;/p&gt;

&lt;p&gt;Updating dependencies is important. Reasons could be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;your SAST scan found a list of vulnerable dependancies&lt;/li&gt;
  &lt;li&gt;you want to keep up with the latest.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are few things that could make the process easier.&lt;/p&gt;

&lt;h1 id=&quot;update-dependencies-in-parent&quot;&gt;Update dependencies in parent&lt;/h1&gt;

&lt;p&gt;If dependencies in the parent can’t be updated exclude and update the child.&lt;/p&gt;

&lt;p&gt;If you are excluding do write a comment mentioning why you are excluding and if/when to remove the exlusion.&lt;/p&gt;

&lt;p&gt;If dependency cannot be upgraded, find a different package specially if it’s a security problem.&lt;/p&gt;

&lt;h1 id=&quot;find-child-dependies-easier-with-maven-helper-plugin-for-intellij&quot;&gt;Find child dependies easier with Maven Helper plugin for IntelliJ&lt;/h1&gt;

&lt;p&gt;It can be hard to know the subdependiencies of a dependency. &lt;a href=&quot;https://plugins.jetbrains.com/plugin/7179-maven-helper&quot;&gt;Maven Helper&lt;/a&gt; plugin creates a tree that can help.&lt;/p&gt;

&lt;p&gt;It has options to exclude dependies too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/maven-dependency-upgrade/maven_helper.png&quot; alt=&quot;Maven Helper IntelliJ Plugin&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;run-automated-tests-after-updation&quot;&gt;Run automated tests after updation&lt;/h1&gt;

&lt;p&gt;Having a good automated test suit helps elevate the risks involves with updation of any kind.&lt;/p&gt;

&lt;p&gt;Run all your automated tests to verify if change to dependies is making the code break.&lt;/p&gt;

&lt;h1 id=&quot;automate-updation&quot;&gt;Automate updation&lt;/h1&gt;

&lt;p&gt;This can be automated by using a maven plugin like &lt;a href=&quot;https://www.baeldung.com/maven-dependency-latest-version&quot;&gt;Versions Maven Plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A pipeline job can be run where version is auto-updated and merged to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt; branch if tests are passed. :)&lt;/p&gt;</content><author><name></name></author><category term="maven" /><category term="build-tool" /><category term="automation" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="www.ankushchoubey.com/images/maven-dependency-upgrade/header.svg" /><media:content medium="image" url="www.ankushchoubey.com/images/maven-dependency-upgrade/header.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">When doing reactive programming, ‘aim’ to have streaming end-to-end</title><link href="www.ankushchoubey.com/reactive-streaming/" rel="alternate" type="text/html" title="When doing reactive programming, ‘aim’ to have streaming end-to-end" /><published>2022-07-24T00:00:00-05:00</published><updated>2022-07-24T15:52:08-05:00</updated><id>www.ankushchoubey.com/reactive-streaming</id><content type="html" xml:base="www.ankushchoubey.com/reactive-streaming/">&lt;p&gt;A streaming microservice works on streams of data rather than waiting for entire data to load before performing operations.&lt;/p&gt;

&lt;p&gt;This means by definition streaming is much high performance and therefore a good aim to have.&lt;/p&gt;

&lt;h1 id=&quot;example-of-streaming-and-non-streaming-reactive-implementation&quot;&gt;Example of Streaming and Non-Streaming Reactive Implementation&lt;/h1&gt;

&lt;p&gt;Suppose you have an application that shows a list of movies to users. The application comprises a frontend user view and a backend that talks to a database.&lt;/p&gt;

&lt;p&gt;You have chosen Spring Webflux for the backend and Angular for the frontend since both provide reactive programming support. Webflux provides it with Project Reactor. Angular provides it with RxJs.&lt;/p&gt;

&lt;p&gt;A non-reactive non-streaming way would have been something like this&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an API endpoint that fetches all movies from the database to the backend service.
2 Once all the data is fetched, then create a payload to send to the browser. (Backend has to wait for fetching to be complete)&lt;/li&gt;
  &lt;li&gt;Once the complete payload is received by the browser, it will start rendering the details. (Browser has to wait for fetching to be complete)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Spring Webflux backend&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moviesRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collectList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this makes it non-streaming&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServerResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bodyValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Angular Frontend&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Typescript:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/movies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this line makes it non-streaming&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;HTML:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;*ngFor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;let movie of movies&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    \{\{ movie.name }}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A reactive streaming implementation would be like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start fetching movies from the database to the backend.&lt;/li&gt;
  &lt;li&gt;As movies are being fetched, start creating the payload and send that payload to the browser without waiting for other movies. (Backend does not wait for fetching to be complete)&lt;/li&gt;
  &lt;li&gt;Browser will receive a record and display it. When it receives another record, it will display that as well. (Browser does not have to wait for fetching to be complete).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This means that both your backend and your frontend have to be reactive-streaming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Webflux backend&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServerResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moviesRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Angular Frontend&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Typescript:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/movies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HTML:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;*ngFor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;let movie of movies | async; index as i&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    \{\{ movie.name }}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;when-is-streaming-not-efficient&quot;&gt;When is streaming not-efficient&lt;/h1&gt;

&lt;p&gt;There are some cases where streaming isn’t effective or can be used like:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Amount of data is too small.&lt;/li&gt;
  &lt;li&gt;Certain operations/transformations that require the entire data to be loaded. For example, HAL Format isn’t possible with streaming.&lt;/li&gt;
  &lt;li&gt;Sometimes batch operations are more effective than streaming.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, while fetching movies, you have to also fetch data about movie stars from a separate table. Since many movies might have the same movie star, it may be more effective to fetch them once in bulk rather than in a streaming fashion for each movie.&lt;/p&gt;

&lt;p&gt;These nuances depend on what you are trying to build. Therefore it is a good “aim” to have streaming end-to-end for true reactivity. But it isn’t always applicable.&lt;/p&gt;</content><author><name></name></author><category term="clean-code" /><category term="reactive" /><summary type="html">A streaming microservice works on streams of data rather than waiting for entire data to load before performing operations.</summary></entry><entry><title type="html">Writing better commits with Atomic Commits</title><link href="www.ankushchoubey.com/atomic-commits/" rel="alternate" type="text/html" title="Writing better commits with Atomic Commits" /><published>2022-07-14T00:00:00-05:00</published><updated>2022-07-14T15:52:08-05:00</updated><id>www.ankushchoubey.com/atomic-commits</id><content type="html" xml:base="www.ankushchoubey.com/atomic-commits/">&lt;h1 id=&quot;what-is-the-problem-with-larger-commits&quot;&gt;What is the problem with larger commits?&lt;/h1&gt;

&lt;p&gt;Many developers complete all their features before committing and merging. When they commit and merge,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;their commit is often bulky i.e it is too big&lt;/li&gt;
  &lt;li&gt;since it is too big, it often causes merge conflicts&lt;/li&gt;
  &lt;li&gt;since it is too big, the commit message is often not the best indicator of what the code does.&lt;/li&gt;
  &lt;li&gt;since it is too big, there were too many changes, and the confidence to merge and expect everything to work fine reduces.&lt;/li&gt;
  &lt;li&gt;since it took so long to merge, other developers might have built the same features again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Often the reason is, that we are afraid to merge and want to get everything perfect the first time. But this is counterintuitive.&lt;/p&gt;

&lt;h1 id=&quot;why-we-should-do-atomic-commits&quot;&gt;Why we should do atomic commits?&lt;/h1&gt;

&lt;p&gt;Atomic commits are frequent commits.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Allows for easily reversing changes&lt;/li&gt;
  &lt;li&gt;Leads to a more accurate commit history that can be easily understood by developers.
    &lt;ul&gt;
      &lt;li&gt;and therefore is easier to review.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Small changes are easier to revert than bulky changes.&lt;/li&gt;
  &lt;li&gt;Developers are much more in sync when small commits are merged non-stop.&lt;/li&gt;
  &lt;li&gt;Small commits lead to a better sense of progress.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Suppose you are working on two features related to upload and download of files to and from AWS S3. Instead of a single commit for both, you can break it down into multiple commits.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-conventional-commits&quot;&gt;// bad
added support for file upload and download

// better 
feat(s3-service): configuration for AWS S3
feat(s3-service): add streaming upload file to S3
feat(api): add endpoint for streaming upload /uploads 
feat(53-service): streaming download from s3
feat(api): add endpoint for streaming download /downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;how-to-implement-atomic-commits-in-practice&quot;&gt;How to implement atomic commits in practice?&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Commit and push to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt; after every completing method/feature.&lt;/li&gt;
  &lt;li&gt;This push should involve both test and code.&lt;/li&gt;
  &lt;li&gt;The commit message should be accurate.
    &lt;ul&gt;
      &lt;li&gt;Each commit should only include a small number of changes.&lt;/li&gt;
      &lt;li&gt;Use a commit format like &lt;a href=&quot;/conventional-commits&quot;&gt;conventional commits&lt;/a&gt; that separates different types of commits:&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feat&lt;/code&gt;: feature&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refactor&lt;/code&gt;: refactoring&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fix&lt;/code&gt;: bug fix&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doc&lt;/code&gt;: documentation&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ci&lt;/code&gt;: continuous integration changes&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt;: related to build&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In practice, you can assume committing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feat&lt;/code&gt; at least once per hour. Other commit types especially &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refactor&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fix&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doc&lt;/code&gt; might be even more frequent.&lt;/p&gt;</content><author><name></name></author><category term="clean-code" /><category term="continuous-integration" /><category term="commits" /><category term="code-review" /><summary type="html">What is the problem with larger commits?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="www.ankushchoubey.com/images/atomic-commits.svg" /><media:content medium="image" url="www.ankushchoubey.com/images/atomic-commits.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Always choose Reactive Programming</title><link href="www.ankushchoubey.com/reactive-programming/" rel="alternate" type="text/html" title="Always choose Reactive Programming" /><published>2022-07-11T00:00:00-05:00</published><updated>2022-07-11T15:52:08-05:00</updated><id>www.ankushchoubey.com/reactive</id><content type="html" xml:base="www.ankushchoubey.com/reactive-programming/">&lt;h1 id=&quot;what-is-reactive-programming&quot;&gt;What is reactive programming?&lt;/h1&gt;

&lt;p&gt;Reactive programming is not a straight paradigm like empirical or functional. Reactive means that code that is written is non-blocking and asynchronous.&lt;/p&gt;

&lt;p&gt;Typically, whenever we have an IO operation, the thread waits for the IO operation to complete before proceeding to the following line. This consumes CPU time while the CPU is ideal.&lt;/p&gt;

&lt;p&gt;In reactive programming, during IO operations, the thread is auto-switched. Therefore, the CPU is never ideal.&lt;/p&gt;

&lt;p&gt;This means that reactive code has a higher throughput overall depending on the number of IO operations. Reactive code is typically several magnitudes faster and consumes fewer resources overall.&lt;/p&gt;

&lt;p&gt;Also, traditional code doesn’t work on streaming data. If you fetch a list of records from a database, the entire list has to be loaded before you can act on it.&lt;/p&gt;

&lt;p&gt;In reactive, however, you can work with streams of data. So, you can start performing operations on data you have received till now without waiting for the rest of the data.&lt;/p&gt;

&lt;p&gt;Similarly, suppose you have a client-server application that needs to display a list. If you code it to be reactive, the list items can be received as a stream. Each item can be displayed one at a time. No need to wait for the entire list to load. This would significantly reduce initial load time.&lt;/p&gt;

&lt;h1 id=&quot;why-choose-reactive-programming-for-every-project&quot;&gt;Why choose reactive programming for every project?&lt;/h1&gt;

&lt;p&gt;Often a con of reactive programming is said to be the initial learning curve. In my experience, the initial learning curve is much less relevant than the return on investment it provides.&lt;/p&gt;

&lt;p&gt;Cloud applications need to consume less memory and higher throughput. Before going for vertical or horizontal scaling, the best thing to do is optimize code. Reactive code is one of the directions to look for.&lt;/p&gt;

&lt;p&gt;Reactive libraries are available in many programming languages. Especially the flavors of reactivex (RxJs, Rx Java, etc). Spring Webflux is a variant of Spring Boot that supports building reactive backends.&lt;/p&gt;

&lt;h1 id=&quot;when-should-you-not-use-reactive-programming&quot;&gt;When should you not use reactive programming?&lt;/h1&gt;

&lt;p&gt;The only place not to use reactive programming is when everything can be done in memory itself i.e there is no IO operation.&lt;/p&gt;

&lt;h1 id=&quot;my-experience-with-reactice&quot;&gt;My experience with reactice&lt;/h1&gt;

&lt;p&gt;I have used Project Reactor Spring Webflux and RxJS in Angular with both the experience has been this.&lt;/p&gt;

&lt;p&gt;A much cleaner coding experience&lt;/p&gt;

&lt;p&gt;One of the reason is it seems all reactive libraries are a sort of functional pipeline. One stage with another.&lt;/p&gt;

&lt;p&gt;Each stage is a pure function and ideally doesn’t have any side effects.&lt;/p&gt;

&lt;p&gt;You can think of it like a scope.&lt;/p&gt;

&lt;p&gt;I very much agree with this video I found on Youtube. With project reactor, everything is just a Flux from start to end. No need to wrap things into different convertor classes. Everything is just Publisher.&lt;/p&gt;

&lt;p&gt;Multithreading programming has never been easier.&lt;/p&gt;</content><author><name></name></author><category term="microservices" /><category term="experience" /><category term="webflux" /><summary type="html">What is reactive programming?</summary></entry><entry><title type="html">On Building Trust</title><link href="www.ankushchoubey.com/trust/" rel="alternate" type="text/html" title="On Building Trust" /><published>2022-07-01T00:00:00-05:00</published><updated>2022-07-01T15:52:08-05:00</updated><id>www.ankushchoubey.com/trust</id><content type="html" xml:base="www.ankushchoubey.com/trust/">&lt;p&gt;Remember word is bond.&lt;/p&gt;

&lt;h1 id=&quot;create-good-environment-for-people-to-trust&quot;&gt;Create good environment for people to trust&lt;/h1&gt;

&lt;p&gt;Don’t point out things that make them feel awkward of uncomfortable.&lt;/p&gt;</content><author><name></name></author><category term="core-values" /><category term="calm" /><category term="non-professional" /><summary type="html">Remember word is bond.</summary></entry><entry><title type="html">Writing cleaner logs by Disabling Stack Trace for Expected Response Exceptions</title><link href="www.ankushchoubey.com/disable-stacktrace/" rel="alternate" type="text/html" title="Writing cleaner logs by Disabling Stack Trace for Expected Response Exceptions" /><published>2022-06-28T00:00:00-05:00</published><updated>2022-06-28T15:52:08-05:00</updated><id>www.ankushchoubey.com/disable-stacktrace</id><content type="html" xml:base="www.ankushchoubey.com/disable-stacktrace/">&lt;p&gt;In spring boot, you can add @ResponseStatus annotation to an exception. By adding it, whenever the exception is thrown, the response will be according to the annotation properties.&lt;/p&gt;

&lt;p&gt;For example: Whevener &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UserNotFoundException&lt;/code&gt; is thrown, the return value is 404 not found.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NOT_FOUND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reason&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user could not be found&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserNotFoundException&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;UserNotFoundException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We often create many such exception classes to make code cleaner. Throwing an exception is cleaner than multiple try-catch blocks.&lt;/p&gt;

&lt;p&gt;The problem here is logs. Whenever exception is thrown, the log contains entire stack trace.&lt;/p&gt;

&lt;p&gt;But these kind of exceptions are expected exceptions, in some sense they aren’t exceptions at all.&lt;/p&gt;

&lt;p&gt;So, we can instead disable stack trace by adding the following to our exception class &lt;a href=&quot;https://stackoverflow.com/questions/2317983/how-to-disable-stack-trace-generation-in-a-java-program&quot;&gt;Source: StackOverflow&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fillInStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To make things better, we can create a custom exception class as follows&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExpectedResponseException&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fillInStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;   
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="logging" /><category term="spring-boot" /><category term="clean-code" /><summary type="html">In spring boot, you can add @ResponseStatus annotation to an exception. By adding it, whenever the exception is thrown, the response will be according to the annotation properties.</summary></entry><entry><title type="html">Strategies to be Calmer</title><link href="www.ankushchoubey.com/calmer/" rel="alternate" type="text/html" title="Strategies to be Calmer" /><published>2022-06-28T00:00:00-05:00</published><updated>2022-06-28T15:52:08-05:00</updated><id>www.ankushchoubey.com/calmer</id><content type="html" xml:base="www.ankushchoubey.com/calmer/">&lt;h1 id=&quot;learn-to-be-calmer-and-neutral&quot;&gt;Learn to be calmer and neutral&lt;/h1&gt;

&lt;p&gt;As soon as you catch yourself getting overly emotional. Go neutral.&lt;/p&gt;

&lt;p&gt;Aim for no high no low. For moments at a time.&lt;/p&gt;

&lt;p&gt;Once you become neutral, you are in 50% better state to make a good decision.&lt;/p&gt;

&lt;p&gt;Think about what made you particularly high or low:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Was it because someone allows you to cry and listen to your sad life where you avoided responsibility?&lt;/li&gt;
  &lt;li&gt;Was it impression of someone?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go neutral in thise situations.&lt;/p&gt;

&lt;h1 id=&quot;choose-your-battles-wisely&quot;&gt;Choose your battles wisely&lt;/h1&gt;

&lt;p&gt;Recognize what you are giving a fuck about. Is it really worth giving a fuck about?&lt;/p&gt;

&lt;p&gt;Is it a good value? is it something external?&lt;/p&gt;

&lt;p&gt;Does it even align with your values?&lt;/p&gt;

&lt;h1 id=&quot;slow-down&quot;&gt;Slow down&lt;/h1&gt;

&lt;p&gt;You aren’t running a race. Take things slow and steady.&lt;/p&gt;

&lt;p&gt;This is easier to remember that to actually do it in practice. Slow down.&lt;/p&gt;

&lt;p&gt;Go very slow. Remember, slow is smooth. And smooth is fast.&lt;/p&gt;

&lt;p&gt;Don’t rush from one thing to the next to the next. Take pauses.&lt;/p&gt;

&lt;p&gt;Habit of rushing is a dirty high.&lt;/p&gt;

&lt;h1 id=&quot;learning-to-let-things-wait&quot;&gt;Learning to let things wait&lt;/h1&gt;

&lt;p&gt;You don’t have to answer notification right there.&lt;/p&gt;

&lt;h1 id=&quot;reflect&quot;&gt;Reflect&lt;/h1&gt;

&lt;p&gt;Reflect on moments you got worked up or where someone else got worked up. Was it worth the fight.&lt;/p&gt;

&lt;h1 id=&quot;calm-down&quot;&gt;Calm down&lt;/h1&gt;

&lt;p&gt;If you don’t know what to say. Calm down. Maybe take a break. And then tell the truth truthfully and in a good way.&lt;/p&gt;

&lt;p&gt;Become neutral. Aim to be non-reactive to threats on any kind be it people, events, realizations or situations.&lt;/p&gt;

&lt;p&gt;Calm down and thing.&lt;/p&gt;

&lt;h1 id=&quot;explore-and-eliminate-insecurities&quot;&gt;Explore and eliminate insecurities&lt;/h1&gt;

&lt;p&gt;Insecurity is chasing the impossible.&lt;/p&gt;

&lt;p&gt;Insecurities come from unrealistic expectations. If you are someone productive, you can’t expect to be good at 20 other things. specially if 15 of those things are stupid.&lt;/p&gt;

&lt;p&gt;Ask yourself, are you insecure or someone made you insecure? Was it a person, advertisement, advice, etc.&lt;/p&gt;

&lt;p&gt;Remember: Insecurity = Someone is trying to sell you something.&lt;/p&gt;

&lt;p&gt;A practice to do is, question every ad.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Does it make sense.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You become more secure when no one can sell you anything.&lt;/p&gt;

&lt;p&gt;Asking logical questions is a good way to eliminate insecurities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt; Living in a different city: If you are being told to get out of your city to live in some other place? you can view this two ways, why are you asked to get out of city? Is it because other people feel they are making a better choice? Does there choice align with your values or are they having a better value? Are they actually making a better choice? Can this be tested someway?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt; Rejected: You got rejected. Now you feel you suck. You lack something that everyone has. Why? Because it seems that everyone is doing something, getting married, talking to someone, traveling, etc. And here you are alone and lonely. How many people do you know who are normal and single? What was the reason you were rejected? How common is rejection? Did Mark Manson or someone you look up to get rejected? Aren’t use in a community of normal, very normal people that got rejected? Can you be rejected for the wrong reasons? If Mark Manson or someone else got rejected, how much do they suck? Isn’t rejection a normal part of life?&lt;/p&gt;

&lt;h1 id=&quot;panic-mode&quot;&gt;Panic Mode&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Aim to calm down and go neutral&lt;/li&gt;
  &lt;li&gt;Recognize your blessings&lt;/li&gt;
  &lt;li&gt;Breathe.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;meditate&quot;&gt;Meditate&lt;/h1&gt;

&lt;p&gt;Meditate regularly. 3 times a week minimum.&lt;/p&gt;

&lt;h1 id=&quot;break-things-down-with-logic&quot;&gt;Break things down with logic&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Is it really that bad?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Start noticing what happened. Does it feel the same after an hour. Or after a day. Etc.&lt;/p&gt;

&lt;p&gt;If it starts feeling different, your calibration is off.&lt;/p&gt;</content><author><name></name></author><category term="core-values" /><category term="calm" /><category term="non-professional" /><summary type="html">Learn to be calmer and neutral</summary></entry></feed>