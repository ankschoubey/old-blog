<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://www.ankushchoubey.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.ankushchoubey.com/" rel="alternate" type="text/html" /><updated>2023-01-08T01:54:59-06:00</updated><id>https://www.ankushchoubey.com/feed.xml</id><title type="html">Ankush Choubey</title><subtitle>Full Stack Developer - Cloud/Microservices</subtitle><entry><title type="html">Continuous Delivery - How Zero-To-One is relevant in software development and why you should make Deployment&amp;amp;Delivery Pipeline first.</title><link href="https://www.ankushchoubey.com/v1/continuous-delivery" rel="alternate" type="text/html" title="Continuous Delivery - How Zero-To-One is relevant in software development and why you should make Deployment&amp;amp;Delivery Pipeline first." /><published>2023-01-08T00:00:00-06:00</published><updated>2023-01-08T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/v1-continous-delivery</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/continuous-delivery">&lt;p&gt;&lt;img src=&quot;/images/continuous-delivery.png&quot; alt=&quot;Continuous Delivery&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Original Photo by &lt;a href=&quot;https://unsplash.com/@ilumire?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Jelleke Vanooteghem&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/chuzevDl4qM?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;software-delivery-early-vs-late&quot;&gt;&lt;strong&gt;Software Delivery&lt;/strong&gt;: Early vs Late&lt;/h2&gt;

&lt;p&gt;The most important thing for a project is delivery. Delivering a software early means it’s impact is early. Money now is better than money tomorrow.&lt;/p&gt;

&lt;p&gt;This gist is one of the core principles of The Agile Manifesto:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We often wait a long time before delivering a software. This include making sure all the features are developed and test. But the only step we actually need to deliver something is to put it on PROD. Most features aren’t related to deployment.&lt;/p&gt;

&lt;h2 id=&quot;zero-to-one-and-one-to-n-of-software&quot;&gt;Zero-To-One and One-To-N of Software&lt;/h2&gt;

&lt;p&gt;Software development can be divided into to phrases:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Zero-To-One Phase&lt;/strong&gt;: This is where you create something new.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;One-To-N Phase&lt;/strong&gt;: This is where you work on top of what you created to enhance it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Zero-To-One phase is the delivers the gist of the project: The MVP. It solves the core problem customer faces.&lt;/p&gt;

&lt;p&gt;Zero-To-One is the start of the project. It’s important to create a stable foundation here to ensure a high quality base. In terms of team allocation, you want to have your best developers working during this phase. (I’ll be writing more on team allocation later)&lt;/p&gt;

&lt;p&gt;The One-to-N part is easier. You have something that works and you want to add a bunch of additional enhancements to it. If you had a good Zero-To-One phase, you have a stable base to build on. So for team allocation, you can have many begineer developers paired with a experienced developer.&lt;/p&gt;

&lt;h2 id=&quot;why-you-should-build-a-deployment-pipeline-first&quot;&gt;Why you should build a deployment pipeline first?&lt;/h2&gt;

&lt;p&gt;Delivering a working software that solves customers problem is the most important task. You have to have infrastructure (server, DB, configuration, etc) ready and perfectly aligned. And there should be no issues between them. Many times this involves making code changes to adapt to the infrastructure.&lt;/p&gt;

&lt;p&gt;Why not solve the most important task early?&lt;/p&gt;

&lt;p&gt;Early on, during the zero-to-one phase, the amount of code to manage is less. Therefore, you can make code adjust easily compared to later.&lt;/p&gt;

&lt;p&gt;The nature of early project phase is largely learning and research. Therefore, there is enough time at hand.&lt;/p&gt;

&lt;p&gt;By having deployment solved. Whatever you code &amp;amp; commit next, can reach in the hands of customers the fastest.&lt;/p&gt;

&lt;p&gt;#eatThatFrog&lt;/p&gt;

&lt;p&gt;Therefore, develop your delivery pipeline as soon as you scafforld (create the base) of your project. Step 2. Start using it. In most cases, once you only create this pipeline once and then update the pipeline as time goes on.&lt;/p&gt;

&lt;h2 id=&quot;addressing-the-misnomer-of-deploying-this-early-to-prod-without-proper-testing-will-lead-to-low-quality&quot;&gt;Addressing the misnomer of “deploying this early to prod without ‘proper’ testing will lead to low quality”.&lt;/h2&gt;

&lt;p&gt;A common misnomer is that deploying to prod early will lead to low quality.&lt;/p&gt;

&lt;p&gt;The result is the opposite: Having to deploy early and often means you are forced to improve your engineering process.&lt;/p&gt;

&lt;p&gt;This means, developers are forced to be more intentional about what they work on, in what order and ensure highest quality.&lt;/p&gt;

&lt;p&gt;There is a learning period in everything new we do. We can’t expect us or others to do something perfectly on the first try. But as we make mistakes, we create systems and processes that ensure the mistakes doesn’t happen again.&lt;/p&gt;

&lt;p&gt;Continous delivery pipeline is comparable to TPS: Toyota Production System. Any mistake that is made is rectified by improving the pipeline.&lt;/p&gt;

&lt;p&gt;For example, let’s say a team adopts continous delivery.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;On their first day, a developer commits and his code reaches from dev, qa, uat to PROD and users start using it. It so happened that their was a logical bug in the code deployed.&lt;/li&gt;
  &lt;li&gt;Rather than scraping the continous delivery pipeline, the team decides to find why the problem was caused and improve the pipeline. They find that the code quality itself was low and their were logical bugs.&lt;/li&gt;
  &lt;li&gt;To fix this issue from happening in the future, the team adopted better engineering practices. 
 a. They add Sonar lint, a popular linter to quicky check and ensure code meets standard. 
 b. They also adopt TDD and enforced a rule that build passes only when the test coverage is 80%. 
 c. Now, the problem for fixed for life.&lt;/li&gt;
  &lt;li&gt;Sonar Lint became a step in the delivery pipeline. And TDD became a habit.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The next time a developer comes and commits something, the stages in the delivery pipeline ensures that the code is deliverable.&lt;/p&gt;

&lt;p&gt;Any problem we face should be solved via the delivery pipeline. Ideally, without any human intervention.&lt;/p&gt;

&lt;p&gt;There are many things that can be the part of delivery pipeline. I’ll be adding more posts on this soon.&lt;/p&gt;

&lt;p&gt;There are several practices that support a continuous delivery. Some include,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/atomic-commits&quot;&gt;atomic commits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/tdd&quot;&gt;TDD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/implementing-kanban&quot;&gt;the kanban&lt;/a&gt; pull system and walk-the-board-from-right strategy,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/feature-flagging&quot;&gt;feature-flagging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;#morePostsSoon&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;optional--why-not-having-a-delivery-pipeline-is-risky&quot;&gt;&lt;strong&gt;Optional&lt;/strong&gt;:  Why not-having a delivery pipeline is risky?&lt;/h2&gt;

&lt;p&gt;In previous section we covered how quality improves with a continous delivery pipeline. Here are reason why the amount of risk of not having a continuous delivery pipeline is higher.&lt;/p&gt;

&lt;p&gt;Only PROD is the place where we can deliver and know what the real status of the deliver is. Not having something used by the users means you don’t know what the real impact of your software is.&lt;/p&gt;

&lt;p&gt;Making enhancements on something that is not-delivered is largely futile. Discussion over thing that hasn’t been made isn’t the same as having discussion over something that is made.&lt;/p&gt;

&lt;p&gt;If the project is de-prioritized, then all work is lost.&lt;/p&gt;

&lt;p&gt;And lastly for the joy of coding &amp;amp; committing something is only complete when having it reach prod as fast as possible.&lt;/p&gt;

&lt;h2 id=&quot;still-not-convinced-here-are-the-stats&quot;&gt;Still not convinced? Here are the stats&lt;/h2&gt;

&lt;p&gt;Teams that follow continuous delivery have&lt;/p&gt;
&lt;h2 id=&quot;optional-how-to-spot-fake-continuous-delivery&quot;&gt;Optional: How to spot fake continuous delivery?&lt;/h2&gt;

&lt;p&gt;Continous Delivery means software is always in a releasable state to PROD.
This mean a each new commit is of highest quality and is releasable.&lt;/p&gt;

&lt;p&gt;Many companies and teams I have talked to say they do continuous delivery but they don’t. Their defination is this: We deploy to our dev environment.&lt;/p&gt;

&lt;p&gt;Dev is not prod. #PRODisPROD Prod is where real users are. Prod is where value is.&lt;/p&gt;

&lt;h2 id=&quot;what-your-first-delivery-would-be&quot;&gt;What your first delivery would be?&lt;/h2&gt;
&lt;p&gt;Your first delivery would be likely something very small and unusable. &lt;a href=&quot;/atomic-commits&quot;&gt;An atomic commit&lt;/a&gt;. A un-responsive login page perhaps.&lt;/p&gt;

&lt;p&gt;Having something delivered to PROD, doesn’t mean it has to be available to general public to use. At this stage, you need &lt;a href=&quot;/feature-flagging&quot;&gt;feature flagging&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One your software crosses the MVP mark, you can release the flag.&lt;/p&gt;

&lt;h2 id=&quot;optional-what-should-you-learn-to-make-a-delivery-pipeline&quot;&gt;&lt;strong&gt;Optional&lt;/strong&gt;: What should you learn to make a delivery pipeline?&lt;/h2&gt;

&lt;p&gt;Connect with a DevOps person and collaborate to build the CI/CD pipeline. Try to learn from them how to make one.&lt;/p&gt;

&lt;p&gt;If that’s not possible, learn a CI/CD tool. Jenkins is a common one. Other popular ones include Gitlab CI and GitHub Actions.&lt;/p&gt;

&lt;p&gt;If time is in a crunch, make simple bash scripts.&lt;/p&gt;

&lt;p&gt;For example, this was the sort of script I created because I didn’t understand how to do something in Jenkins. The files below are not real, they are illustrations of what I made.&lt;/p&gt;

&lt;p&gt;script-create-env.sh&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; “Enter ENV name”

&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;end

&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;destinationTool&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; init “APPNAME-&lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;”

// other commands on &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;destinationTool&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

npm run build

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;script-deploy.sh&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; “Enecho “Enter ENV name”
&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;end
npm run push &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;A continuous deployment pipeline helps improve value delivery and deployment frequency without reducing quality, rather it enforces quality. The team following continuous delivery is forced to be intentional.&lt;/p&gt;

&lt;p&gt;The real continuous delivery is delivery to PROD. All else is fake.&lt;/p&gt;

&lt;p&gt;Practices like the following support continuous delivery:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/atomic-commits&quot;&gt;atomic commits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/tdd&quot;&gt;TDD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/implementing-kanban&quot;&gt;the kanban&lt;/a&gt; pull system and walk-the-board-from-right strategy,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/feature-flagging&quot;&gt;feature-flagging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="devops" /><category term="continuous-delivery" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.ankushchoubey.com/images/continuous-delivery.png" /><media:content medium="image" url="https://www.ankushchoubey.com/images/continuous-delivery.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Template for Gherkin Specs</title><link href="https://www.ankushchoubey.com/v1/template-for-gherkin-specs" rel="alternate" type="text/html" title="Template for Gherkin Specs" /><published>2023-01-07T00:00:00-06:00</published><updated>2023-01-07T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/v1-template-for-gherkin-specs</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/template-for-gherkin-specs">&lt;pre&gt;&lt;code class=&quot;language-feature&quot;&gt;@tagPlaceholder1 @tagPlaceholder2
Feature: A new feature
  Author - Ankush #this is the main person who write is specs
  Dislaimer - This spec is complete, to the best of my knowledge, but if I forgot something, please tell me.

  Amigos -
      Developers - Team Name (Members participating)
              QA -
         Product -
        Designer -

  Estimated Release Date - 12/3

  Open Issues -
  Side Note -

  Personas (if needed) - 
    - User 
        Age -
        Background - 

  Scenario: 
    Mock UI - NA
    Card Number - NA
    
    Technical Note -  NA
      Testing Note - NA
    Marketing Note - NA
     Doc Team Note - NA

    Given {past tense}
     When {present tense}
     Then {future tense}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;more-resources-to-check-out-to-update-this-article&quot;&gt;More Resources to check out to update this article:&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.blog/2020/04/06/a-practical-guide-to-writing-technical-specs/&quot;&gt;A practical guide to writing technical specs - Stack Overflow Blog&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="bdd" /><summary type="html">```feature @tagPlaceholder1 @tagPlaceholder2 Feature: A new feature Author - Ankush #this is the main person who write is specs Dislaimer - This spec is complete, to the best of my knowledge, but if I forgot something, please tell me.</summary></entry><entry><title type="html">Separating_request,_entity_and_response</title><link href="https://www.ankushchoubey.com/2023/01/07/Separating_Request,_Entity_and_Response.html" rel="alternate" type="text/html" title="Separating_request,_entity_and_response" /><published>2023-01-07T00:00:00-06:00</published><updated>2023-01-08T01:54:45-06:00</updated><id>https://www.ankushchoubey.com/2023/01/07/Separating_Request,_Entity_and_Response</id><content type="html" xml:base="https://www.ankushchoubey.com/2023/01/07/Separating_Request,_Entity_and_Response.html">&lt;p&gt;&lt;a href=&quot;https://drive.google.com/drive/folders/1tsu2S_EnDds8oIRiiip4rwl2qhXEq-Se?usp=sharing&quot;&gt;&lt;span class=&quot;underline&quot;&gt;https://drive.google.com/drive/folders/1tsu2S_EnDds8oIRiiip4rwl2qhXEq-Se?usp=sharing&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Security is a major concern for web applications. One of the ways to achieve this is by using the least access principle. This means only exposing things that are necessary and hiding the rest.&lt;/p&gt;

&lt;p&gt;In a typical web application, we perform CRUD operations on entities.&lt;/p&gt;

&lt;p&gt;It’s quite common to have the same entity object be requested, saving to DB and response.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here are the roles of classes mentioned above,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;API endpoints: deals with input objects. In this case, a single one entity.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Service and Repository: deal with manipulating and saving entities to the database. And sending the same entity as response.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Entity: Has 3 roles. Input Object, Output Object and being object stored in database.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Code Sample:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Entity&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Repository&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt;:&lt;br /&gt;
&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This way is problematic since it,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Many fields used for one role (like input) won’t be used for other role (like storing to DB)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Internal details are exposed in output&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Validations are harder for inputs&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many linters recommend having a separate DTO object for this task. This is a step up over the usual entity but isn’t sufficient as most of the time the entity and DTO are exact replicas of each other.&lt;/p&gt;

&lt;p&gt;There is a better alternative to this, which is to separate inputs, output and entity classes entirely..&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Code Sample:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Request Object:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Empty Body Response:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Response With Body:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Response Assembler:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controller:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ankushchoubey.com/assets/img/2023-01-07-Separating_Request,_Entity_and_Response/media/image10.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
As you can see from the example above, there are many request objects and a single response object. Each of these requests and responses can have different fields.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API endpoint&lt;/strong&gt;: deals with getting different formats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Service &amp;amp; Repository&lt;/strong&gt;: only deal with manipulating entity files based on the type of request. It then either sends a response directly if there is no body or offloads it’s work to a response assembler.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Response Assembler&lt;/strong&gt;: job is to create a response. There may be multiple types of responses which response assembler may assemble&lt;/p&gt;

&lt;p&gt;There can also be requests and responses that have no body at all.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Request params maybe enough for GET and DELETE request&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Similarly, HTTP status code and response header maybe enough for responses&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;If an object is created, then 201 CREATED with response headers like location without a body may be enough.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP suggests but does not enforce any kind of rules over requests and responses. But by following them as closely as possible, we can ensure communicating intent without transfer of bulky.&lt;/p&gt;

&lt;p&gt;The benefits of this approach is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Request, Response and Entity classes have a clear separation of concern. Each deal with their own specific usage.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Therefore, no extra fields are added to each. If new fields are to be added to one part, they may or may not concern other parts.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Securing the application becomes easier as less internal details are leaked.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;PS: Tip: In most cases, the response object requires some fields from the entity. Commonly DTOs are created and data from entities is copied to response using some sort of mapper. There is a better alternative which is to use the Delegate pattern. The getters of response class can delegate to getters of entity class. In Java specifically, this can be made easier by using Lombok’s @Delegate annotation.&lt;/p&gt;</content><author><name></name></author><summary type="html">https://drive.google.com/drive/folders/1tsu2S_EnDds8oIRiiip4rwl2qhXEq-Se?usp=sharing</summary></entry><entry><title type="html">Observability For Developers</title><link href="https://www.ankushchoubey.com/v1/observability-for-developers" rel="alternate" type="text/html" title="Observability For Developers" /><published>2023-01-01T00:00:00-06:00</published><updated>2023-01-01T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/v1-observability-for-developers</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/observability-for-developers">&lt;h1 id=&quot;what-is-observability-and-why-is-it-needed&quot;&gt;What is observability, and why is it needed?&lt;/h1&gt;

&lt;p&gt;Observability are tools that help understand how an application is running.&lt;/p&gt;

&lt;p&gt;Typically, one an application is deployed, it is treated like a black box. We don’t know what is happening inside the application except logs.&lt;/p&gt;

&lt;p&gt;These logs aren’t good enough specially when considering the complex distributed applications we have.&lt;/p&gt;

&lt;p&gt;The solution is to implement good observability.&lt;/p&gt;

&lt;p&gt;Observability is also sometimes called testing-in-production. It allows for clearer insight into the application.&lt;/p&gt;

&lt;p&gt;For example, let’s say you operate an e-commerce store and allow for multiple payment vendors like Google Pay, Amazon Pay, Apple Pay, etc. The code has been tested and working properly. Now, after an year, you went to buy something yourself. And you decided to use Apple Pay, but the payment fail. You debug and you find a critical configuration property was not added. Now you went ahead and fixed it. But when you check the database logs you realize, there wasn’t a single payment via Apple Pay for the last 1 year. You missed a lot of potential business there.&lt;/p&gt;

&lt;p&gt;With observability, your flow to catch the bug would have looked something like this. You get alerts that the number of payment request failing is too high. You want into you dashboard and checked what is happening. It indeed seems too high. You check the logs and find the issue and fix it. You just saved yourself half and year.&lt;/p&gt;

&lt;p&gt;With observability, you can be proactive about the bugs and about the optimizations you can make to your application before your customer reports it. This makes you a continuous improvement machine.&lt;/p&gt;

&lt;p&gt;For a real life example, you can see Slack’s status which shows if slack is up or down. This provides an easy way for customers to know what is happening.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://status.slack.com/&quot;&gt;https://status.slack.com/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-are-the-pillars-of-observability-and-why-do-they-make-sense&quot;&gt;What are the pillars of observability, and why do they make sense?&lt;/h1&gt;

&lt;p&gt;There are three main pillars of observability.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Metrics&lt;/li&gt;
  &lt;li&gt;Logs&lt;/li&gt;
  &lt;li&gt;Traces&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Metrics are numerical values related to the application in a moment. Like, CPU utilization, Number of HTTP Requests success or failures, and RAM Utilization.&lt;/p&gt;

&lt;p&gt;Logs are the application logs. One must ensure that logs are properly added to the right log level. I wrote an article about the topic here: [Link to logs post]&lt;/p&gt;

&lt;p&gt;Traces are the visualization of request flows between multiple microservices (MS). For example, MS1 triggered MS2, MS2 triggered MS3 and MS4.&lt;/p&gt;

&lt;h1 id=&quot;what-are-the-different-observability-tools&quot;&gt;What are the different observability tools?&lt;/h1&gt;

&lt;p&gt;There are different pieces involved in observability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prometheus&lt;/strong&gt;: [Link to Prometheus Article]&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tool for metrics.&lt;/li&gt;
  &lt;li&gt;Application release logs in prometheus format.&lt;/li&gt;
  &lt;li&gt;Prometheus will poll data every 15 minutes.&lt;/li&gt;
  &lt;li&gt;It also allows to run queries against the data with use of PromQL language.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;It’s important for developers to learn PromQL Language for debugging.&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Developers can also add custom metrics via Prometheus.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A tool that adds traceId to requests and helps to track it across microservices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Jaegar&lt;/strong&gt;: A wrapper for open telemetry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Graphana&lt;/strong&gt;: An active-development open-source tool for visualizing logs, metrics, traces and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kibana&lt;/strong&gt;: Another popular tool for visualization. It’s part of a popular ELK stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DataDog&lt;/strong&gt;: A paid tool similar to Graphana.&lt;/p&gt;

&lt;h1 id=&quot;whats-the-architecture-of-graphana&quot;&gt;What’s the architecture of Graphana?&lt;/h1&gt;

&lt;h1 id=&quot;what-are-the-basic-graphana-features-one-should-utilise&quot;&gt;What are the basic Graphana features one should utilise?&lt;/h1&gt;

&lt;p&gt;At the basic, one should be able to read logs. This is where most developers stop.&lt;/p&gt;

&lt;p&gt;[Graphana Logs]&lt;/p&gt;

&lt;h1 id=&quot;how-to-set-up-dashboards-in-the-best-way&quot;&gt;How to set up dashboards in the best way?&lt;/h1&gt;

&lt;p&gt;The dashboard is where you’ll see all your metrics visualized.
You want to visualize it in such a way that you can get to the problems faster.&lt;/p&gt;

&lt;p&gt;Make sure you segregate the most important metrics dashboard has only useful information&lt;/p&gt;

&lt;h1 id=&quot;how-to-set-up-alerts-in-the-best-way&quot;&gt;How to set up alerts in the best way?&lt;/h1&gt;

&lt;p&gt;Assume that most people don’t know what to do.&lt;/p&gt;

&lt;p&gt;Your alert should provide:
Context: What happened exactly?
Next Step: What to do next?&lt;/p&gt;

&lt;h1 id=&quot;how-to-use-graphana-to-debug-a-scenario&quot;&gt;How to use Graphana to debug a scenario?&lt;/h1&gt;

&lt;p&gt;Here is what’s a typical flow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You’ll get an alert&lt;/li&gt;
  &lt;li&gt;You go to the dashboard and check it out.&lt;/li&gt;
  &lt;li&gt;You try to explore more, you write custom queries to find more details.&lt;/li&gt;
  &lt;li&gt;You combine the metrics with logs and traces.&lt;/li&gt;
  &lt;li&gt;You find the problem and you take steps to fix it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Learn PromQL.&lt;/p&gt;

&lt;h1 id=&quot;how-can-chaos-engineering-help&quot;&gt;How can Chaos Engineering help&lt;/h1&gt;</content><author><name></name></author><category term="observability" /><summary type="html">What is observability, and why is it needed?</summary></entry><entry><title type="html">Why we should strive to tell the truth always?</title><link href="https://www.ankushchoubey.com/v1/truth/why-tell-the-truth" rel="alternate" type="text/html" title="Why we should strive to tell the truth always?" /><published>2022-12-31T00:00:00-06:00</published><updated>2022-12-31T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/truth/v1-why-tell-the-truth</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/truth/why-tell-the-truth">&lt;p&gt;&lt;strong&gt;Living and speaking your truth makes you free&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Why lie when you can tell the truth and be free? And will it make things better? That’s a double bonus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Telling the truth is acceptance of how things really are&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;We are always asked to accept reality as it is. Acceptance helps us get clearer, helping us make better decisions and avoid traps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Truth always comes in the long run.&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;No matter what you do, the truth will eventually come out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your body can feel when you are lying&lt;/strong&gt;.:&lt;/p&gt;

&lt;p&gt;When you lie or do something untruthful, your body reacts. Let’s say you hate something, and you are not saying it. You’ll develop resentment and stress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If we are not truthful, someone else will suffer&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;The cost of lying isn’t something we always bear in the short term. Sometimes it’s others. Suppose you go to a doctor, and he doesn’t tell you that you might be at risk of a deadly disease and that now is a good time to avoid drinking. What impact would it have on you?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Living and speaking truthfully orients you properly&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;If you can’t lie, you’ll be hesitant to slack off at work if you want to face daily standup the next day. Thus, orienting you to become a better person and get the work done. Or it’ll help you solve the problem that makes you avoid your work.&lt;/p&gt;

&lt;p&gt;If you can’t live a lie, you won’t cheat on exams, orienting you properly to become the kind of person that will pass the exam.&lt;/p&gt;

&lt;div class=&quot;flash&quot;&gt;
    &lt;svg class=&quot;octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;strong&gt;Note: &lt;/strong&gt;Remember this always, if you speak the truth and act in truthful ways, the world will arrange itself in the best possible manner to you.&lt;br /&gt;If you lie or don’t live truthfully, the world will arrange in the worst possible manager.
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Truth is a shield. That survives scrutiny&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;That protects you against lies of any kind.&lt;/p&gt;

&lt;p&gt;Truth and peace are directly correlated. One increases or decreases another.&lt;/p&gt;</content><author><name></name></author><category term="non-professional" /><category term="truth" /><category term="mature" /><summary type="html">Living and speaking your truth makes you free:</summary></entry><entry><title type="html">Implement Zero Trust in Real Life</title><link href="https://www.ankushchoubey.com/v1/truth/liars" rel="alternate" type="text/html" title="Implement Zero Trust in Real Life" /><published>2022-12-31T00:00:00-06:00</published><updated>2022-12-31T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/truth/v1-liars</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/truth/liars">&lt;p&gt;Liars can wrap you and your worldview to get what they want. They often go unnoticed. They are like successful social black-hat hackers. You need good security to protect yourself.&lt;/p&gt;

&lt;div class=&quot;flash&quot;&gt;
    &lt;svg class=&quot;octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info octicon octicon-info&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;strong&gt;Note: &lt;/strong&gt;There is a difference between not knowing the truth (being naive) and lying. Here we are talking about deception.
&lt;/div&gt;

&lt;p&gt;You need zero trust. Zero trust has three ideas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/v1-truth/zero-trust.png&quot; alt=&quot;Zero Trust&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;Toast&quot;&gt;
   &lt;span class=&quot;Toast-icon&quot;&gt;&lt;svg class=&quot;octicon octicon-info&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;
   &lt;span class=&quot;Toast-content&quot;&gt;Zero Trust is a concept in computer security used to protect distributed systems in cloud infrastructure. We can apply the same concepts to regular life.&lt;/span&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Verify Explicitly&lt;/strong&gt;: Have explicit systems to examine if what is spoken is true. Pull out your logical fallacies and cognitive bias lists.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Least Privilage&lt;/strong&gt;: You don’t have to say everything to everyone. Only give people as much access as they need. They don’t need everything. They don’t need your whole self. Your family needs your whole self, not others. You need to be assertive.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Assume Breach&lt;/strong&gt;: Assume the person you are talking to tends to lie. Or does not speak truthfully as diligently as you do.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Catching a liar&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Lies are oversimplistic and tend to change over time.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The liar has to keep a narrative of many things that aren’t true.&lt;/li&gt;
  &lt;li&gt;When pressed, they may try to blame something else or bring up an irrelevant topic to distract us or place a straw man.&lt;/li&gt;
  &lt;li&gt;They won’t be specific.&lt;/li&gt;
  &lt;li&gt;They may twist their words slightly to fit their lie into truth. At such moments, note if they have motivated reasoning.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Should you confront a liar? Depends on how serious the lie was?&lt;/p&gt;

&lt;div class=&quot;flash flash-success&quot;&gt;
    &lt;svg class=&quot;octicon octicon-checklist octicon octicon-checklist octicon octicon-checklist&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M2.5 1.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v7.736a.75.75 0 101.5 0V1.75A1.75 1.75 0 0011.25 0h-8.5A1.75 1.75 0 001 1.75v11.5c0 .966.784 1.75 1.75 1.75h3.17a.75.75 0 000-1.5H2.75a.25.25 0 01-.25-.25V1.75zM4.75 4a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM4 7.75A.75.75 0 014.75 7h2a.75.75 0 010 1.5h-2A.75.75 0 014 7.75zm11.774 3.537a.75.75 0 00-1.048-1.074L10.7 14.145 9.281 12.72a.75.75 0 00-1.062 1.058l1.943 1.95a.75.75 0 001.055.008l4.557-4.45z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;strong&gt;Tip: &lt;/strong&gt;Stay away from people who explicitly lie or have manipulative behavior.
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Gain perspectives&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;If you have good social connections and a broader worldview, you’ll eventually know many common lies that others face.&lt;/p&gt;

&lt;p&gt;Books like 48 Laws of Power and The Law of Human Nature are also helpful here.&lt;/p&gt;

&lt;p&gt;Consider both sides of the coin. And recognize that if something is too good to be true. It probably is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Know the common areas where you can easily be lied&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Recognize the common areas in which you are suggestible. These likely include things you are insecure about.&lt;/p&gt;

&lt;p&gt;One who is fat and wants to lose weight is more likely to believe in an ad about a magic pill or device.&lt;/p&gt;

&lt;p&gt;If you are desperate about something, it’s easier to believe a lie in that domain.&lt;/p&gt;

&lt;p&gt;Most things on social media are also lying. Why would you wanna stay on a platform that’s fake?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.merits.com/hs-fs/hubfs/Imported_Blog_Media/how-many-people-are-lying-Feb-26-2022-05-34-55-04-PM.png?width=1520&amp;amp;name=how-many-people-are-lying-Feb-26-2022-05-34-55-04-PM.png&quot; alt=&quot;Common Lies&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.merits.com/blog/spotting-the-truth-in-a-world-of-lies&quot;&gt;Spotting the Truth in a World of Lies&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="non-professional" /><category term="truth" /><category term="mature" /><summary type="html">Liars can wrap you and your worldview to get what they want. They often go unnoticed. They are like successful social black-hat hackers. You need good security to protect yourself.</summary></entry><entry><title type="html">Code Review Checklist</title><link href="https://www.ankushchoubey.com/v1/code-review-checklist" rel="alternate" type="text/html" title="Code Review Checklist" /><published>2022-12-31T00:00:00-06:00</published><updated>2022-12-31T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/v1-code-review-checklist</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/code-review-checklist">&lt;h2 id=&quot;why-do-we-need-a-code-review-checklist&quot;&gt;Why do we need a code review checklist?&lt;/h2&gt;

&lt;p&gt;We developers must know a little bit of everything from architecture to low-level code details like HTTP Statuses. Apart from that, we also have non-technical work that needs to be kept up to date.&lt;/p&gt;

&lt;p&gt;For this reason, we need checklists.&lt;/p&gt;

&lt;p&gt;Checklists are proven to increase quality and compliance. They are used heavily in the medical domain. Medical professionals who use checklists make fewer mistakes and are likelier to get through all the steps properly.&lt;/p&gt;

&lt;p&gt;An important goal for us developers is Continous Delivery, where every commit we make reaches production and works properly. To avoid the cycle of making mistakes when we commit, we need accurate processes that help catch our bugs early on.&lt;/p&gt;

&lt;p&gt;These processes can be in the automated form of linters, tests, etc. But still we need a human to verify what we have been doing.&lt;/p&gt;

&lt;p&gt;We need a code review checklist to make the code review process streamlined and understood by the entire team.&lt;/p&gt;

&lt;h2 id=&quot;how-can-we-use-a-code-review-checklist&quot;&gt;How can we use a code review checklist?&lt;/h2&gt;

&lt;p&gt;We can use code-review checklists like doctors do.&lt;/p&gt;

&lt;p&gt;Before committing, we can walk through our code review checklist and tick off points. This will ensure we have a good first screening ourselves before submitting to code review.&lt;/p&gt;

&lt;p&gt;The code review checklist is mostly a yes or no questionnaire. It need not be super complex. And would take a max of 5 minutes to go through.&lt;/p&gt;

&lt;p&gt;If you aim to do 1 Small story in 1 day and 1 medium story in 2.5 days, 5 minutes is nothing to ensure the same story doesn’t produce a bug.&lt;/p&gt;

&lt;h2 id=&quot;what-items-can-we-add-to-a-code-review-checklist&quot;&gt;What items can we add to a code review checklist?&lt;/h2&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Are you using the correct method?&lt;/li&gt;
  &lt;li&gt;Are you using a suitable schema?&lt;/li&gt;
  &lt;li&gt;Are you returning the proper error code?&lt;/li&gt;
  &lt;li&gt;Does the return value need to be cached?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;logging&quot;&gt;Logging&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Are log comments proper?&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="engineering" /><summary type="html">Why do we need a code review checklist?</summary></entry><entry><title type="html">Productive use of time</title><link href="https://www.ankushchoubey.com/v1/productive" rel="alternate" type="text/html" title="Productive use of time" /><published>2022-12-25T00:00:00-06:00</published><updated>2022-12-22T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/v1-productive</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/productive">&lt;p&gt;There are a few rules I discovered that helps.&lt;/p&gt;

&lt;h2 id=&quot;see-the-reality-as-it-is&quot;&gt;See the reality as it is&lt;/h2&gt;

&lt;p&gt;Like previously, being able to see to truth of how we spend our time is very important. Since we have digital devices, this tracking is relatively easy.&lt;/p&gt;

&lt;p&gt;We need to create slots of MED. Minimum Effective Dose. For example: For sleep MED is 8 hours. For POMODORO, MED is 2 hours.&lt;/p&gt;

&lt;p&gt;Going beyond MED doesn’t help. For example, you cannot work more than 35 hours per week and expect your productivity to rise. 35 hours is fixed.&lt;/p&gt;

&lt;p&gt;The lucky thing for us is we have structured week, Sunday to Saturday, structured weekdays and structured day, 24 hours and structures hours and minutes. So we can utilize them at our best.&lt;/p&gt;

&lt;p&gt;For example, given a human attention span, you can only focus for 25 minutes (the size of a sitcom). And then you should take break because without it, your attention will dwindle. And by taking pause and starting again, you;ll have higher focus.&lt;/p&gt;

&lt;p&gt;Like MED, standard recommendations are also useful, like for exercise 75 hours per week distributed over a period of time.&lt;/p&gt;

&lt;p&gt;For Piano, this could be 30 minutes of structured practice every day.&lt;/p&gt;

&lt;p&gt;Structure is important here. Look at systems section on structured training. You should look at every work opportunity and challenge as a structured training exercice.&lt;/p&gt;

&lt;h2 id=&quot;do-your-current-work-well-till-completion-and-produce-no-backlog&quot;&gt;Do your current work well. Till completion and produce no backlog.&lt;/h2&gt;

&lt;p&gt;Like with life, a software development project get’s delayed the more technical debt is there is the system. When half done features are released, then problems arise.&lt;/p&gt;

&lt;p&gt;This is taking shortcuts. Like not doing TDD or skipping a feature thinking oh we’ll ship this and then do this later.&lt;/p&gt;

&lt;p&gt;It doesn’t work. You want your mind to be as clear as possible to focus on the present and future. How do you do it, by producing no backlog.&lt;/p&gt;

&lt;p&gt;This also applies to studies, someone who has studies maths or some other subject well is school doesn’t have to worry re-learning the basics when they grow old and prepare for their MBA entrance exam. Because the work was already done well.&lt;/p&gt;

&lt;p&gt;Doing your present work well also means you gain new capabilities and avoid many other tasks that were in the backlog.&lt;/p&gt;

&lt;p&gt;For instance, you decided to read 4 books on the productivity.&lt;/p&gt;

&lt;p&gt;If you have read the first book properly and slowly, implemented the details, you may not even need to read the rest of the books.&lt;/p&gt;

&lt;p&gt;But suppose you haven’t read the book properly and slowly and failed to implement the lessons, then you’ll go on to read another book on the same topic. Then another and another. THis produced more backlog.&lt;/p&gt;

&lt;p&gt;If you do your work properly, you produce no backlog for the future.&lt;/p&gt;

&lt;h2 id=&quot;do-it-now&quot;&gt;Do it now.&lt;/h2&gt;

&lt;p&gt;You can’t wait for the future to arrive. Things won’t sort out in the future. They’ll sort out in the present. in this moment if you take action.&lt;/p&gt;

&lt;p&gt;Talking about your problems doesn’t fix it. Taking action will definitely fix it.&lt;/p&gt;

&lt;h2 id=&quot;how-to-layer-your-work&quot;&gt;How to layer your work?&lt;/h2&gt;

&lt;p&gt;What tasks should you pick up first assuming you consumed your vitamin N and said no. Here’s my guidelines.&lt;/p&gt;

&lt;p&gt;You can divide your tasks in the following and pick these in order.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Do the task first that makes things easy for your future self. This could be learning or planning or writing a note for your future self.&lt;/li&gt;
  &lt;li&gt;Do the task that brings you more clarity first. This can creating to do list or planning&lt;/li&gt;
  &lt;li&gt;Then task that’s you don’t want to do. Because your brain has a blindspot that makes important things appear harder. Slay that dragon and eat that frog first.&lt;/li&gt;
  &lt;li&gt;Then the task you would love to do. This you won’t have done automatically anyway. Enjoy the task and feel fulfilled that you did rest of your tasks well.&lt;/li&gt;
  &lt;li&gt;Then other tasks that are low quality and time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You’ll also have to slot delegation to team members somewhere here.&lt;/p&gt;

&lt;p&gt;Remember, you only have 35 hours per week. or 7 hour per day or work time.&lt;/p&gt;

&lt;p&gt;For personal you have 7 hours per weekend combined assuming you also want to live your life well. Use them wisely.&lt;/p&gt;</content><author><name></name></author><category term="non-professional" /><category term="time" /><summary type="html">There are a few rules I discovered that helps.</summary></entry><entry><title type="html">Creating Systems To Automate Goal Achievement</title><link href="https://www.ankushchoubey.com/v1/systems" rel="alternate" type="text/html" title="Creating Systems To Automate Goal Achievement" /><published>2022-12-22T00:00:00-06:00</published><updated>2022-12-22T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/v1-systems</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/systems">&lt;p&gt;The only way to become a high performer and fulfil your full potential is to create, iterate and rely on your systems.&lt;/p&gt;

&lt;p&gt;In programming terms, systems are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(log n)&lt;/code&gt;, and No-Systems are like brute force &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(n^3)&lt;/code&gt;. Systems allow us to focus on the task and not reply to other things.&lt;/p&gt;

&lt;p&gt;Suppose you want study for IELTS exam and it’s been your goal for 3-4 months. When you look at what you did in these past months, you can see you wasted a lot of time. Re-iterating, you create a system for yourself. You setup flash cards that you practice daily for 5 minutes once you reach home. In a less than a month, you were able to cover up more than you did in last several months combined.&lt;/p&gt;

&lt;h2 id=&quot;what-are-the-benefits-of-creating-a-system&quot;&gt;What are the benefits of creating a system?&lt;/h2&gt;

&lt;p&gt;Systems allow you to free up your mental load. Allowing you to perform at your best, be decisive, and be confident that everything will work properly.&lt;/p&gt;

&lt;p&gt;Systems allow you to fall back and know everything is okay and taken care of. They are comparable to taking breaks and letting go. We take breaks and let go knowing we are stronger and in control.&lt;/p&gt;

&lt;p&gt;Systems allow us to be happy at the moment and know that the path we are on is the best path there is.&lt;/p&gt;

&lt;p&gt;If you want to have a 360 life, a life where you are covered all areas of life pretty well, you need systems. This is because you have limited time, and limited cognitive ability to re-thing something again and again. You need a set process.&lt;/p&gt;

&lt;h2 id=&quot;what-are-the-different-kinds-of-systems&quot;&gt;What are the different kinds of systems?&lt;/h2&gt;

&lt;p&gt;Different kinds of systems are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Targeted Training and Testing - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(n)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Assistance via Environment - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(log n)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Automation - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(1)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Habits - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(1)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each system has its pros and cons, and when to use each depends on what you are trying to accomplish.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Targeted Training and Testing&lt;/strong&gt;: Learning and deliberately practising each and every step of something. This includes re-training to keep yourself sharp and eliminate flaws.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Assistance via Environment&lt;/strong&gt;: Setting your environment in a way that makes it easy to accomplish your tasks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Automation&lt;/strong&gt;: Using Technology to its full advantage as a modern human. This would take our output from 1 to 20x.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Habits&lt;/strong&gt;: Creating healthier habits that are in our best interest.&lt;/p&gt;

&lt;h2 id=&quot;targeted-training-and-testing&quot;&gt;Targeted Training and Testing&lt;/h2&gt;

&lt;p&gt;Training is the same as putting your reps in the gym. Initially you are fat or skinny, but as you keep training and working out, muscles develop and this development gives you new abilities that allow you do new things.&lt;/p&gt;

&lt;p&gt;Training allows you to not be effected by change in environment or mood. Since you have practices your kick 10,000 time, there is little error that you’ll make a mistake.&lt;/p&gt;

&lt;p&gt;You rely on training and testing to get better at a skill. Suppose you want to give a public speech, create a script, practice it a few times, maybe record yourself, iterate and then give the speech.&lt;/p&gt;

&lt;p&gt;The stages of progression in training and testing are following:&lt;/p&gt;

&lt;p&gt;Level &lt;strong&gt;1: Learn&lt;/strong&gt;: You are learning about the topic and actually practising the things you learn. There is no learning about actually doing. You need #skinInTheGame as early as possible.&lt;/p&gt;

&lt;p&gt;Level &lt;strong&gt;2: Cover the flow&lt;/strong&gt;: You take things slow and try to cover the flow a few times. i.e. you practice something end to end but slowly.&lt;/p&gt;

&lt;p&gt;Level &lt;strong&gt;3: Rectification&lt;/strong&gt;: You rectify everything starting from your weakest point because that’s where you’ll get the most growth.&lt;/p&gt;

&lt;p&gt;Level &lt;strong&gt;4: Iterate and practice&lt;/strong&gt;: You continuously iterate and practice.&lt;/p&gt;

&lt;p&gt;Level &lt;strong&gt;5: Mimic the real world&lt;/strong&gt; until you feel confident to go out into a real situation&lt;/p&gt;

&lt;p&gt;Level &lt;strong&gt;6: Graduate&lt;/strong&gt; but sometimes return to one of the previous steps to iterate.&lt;/p&gt;

&lt;p&gt;// REFLECT and improve&lt;/p&gt;

&lt;p&gt;Remember, your training needs to be targetted and focused. Only by removing redistractions and targetting you’ll have enough myelination in your brain to truly focus and grasp what you are learning.&lt;/p&gt;

&lt;p&gt;Exposure therapy is also a good example of training. You are scared of something and it terrifies you. Now you take steps to learn it, expose yourself to it again and get better at it.&lt;/p&gt;

&lt;h3 id=&quot;find-places-where-you-can-include-training&quot;&gt;Find places where you can include training.&lt;/h3&gt;

&lt;p&gt;Make a list of all the things that you do. Find places that can be trained.&lt;/p&gt;

&lt;p&gt;For example; Gymn&lt;/p&gt;

&lt;h3 id=&quot;nuances-about-training-and-testing&quot;&gt;Nuances about training and testing&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;You need to do your reps.&lt;/strong&gt;: You need to do your reps when it is needed. And take breaks when you are not doing your reps. Work hard. Play hard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You’ll face resistance&lt;/strong&gt; You need to train to get stronger in whatever you are doing. :) You’ll face resistance from your own self. Trust the training process and the system you have set. Part of your training is facing and overcoming these resistance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t expect you’ll special&lt;/strong&gt;: Perhaps there are people out there that don’t need to practice piano on a weekly basis. Assume you are not one of those people.&lt;/p&gt;

&lt;h2 id=&quot;here-are-some-examples-of-trainings-and-testing&quot;&gt;Here are some examples of trainings and testing&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Pomodoro&lt;/strong&gt;: Trains your attention and focus by focusing on something for 25 minutes and then taking a break for 5. The timing and Pomodoro principles need to be strictly followed for good training.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meditation&lt;/strong&gt;: Meditating for a fixed amount, like 10 minutes/20 minutes, would train your brain to focus your attention on what you truly want and trains you to not be swayed by your emotions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Practice Sessions&lt;/strong&gt;: Whether it is Piano or learning a language. You need proper regular practice sessions. These can in be pomodoro style.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tests&lt;/strong&gt;: Tests are a good way to assert if you actually know something. This can be Dry Runs of Demo or an actual test where you sit down for the exam time and give the test. Tests can also be in form ask letting someone else ask a question and you answering it. Tests are something we did commonly as kids.&lt;/p&gt;

&lt;h2 id=&quot;nuances&quot;&gt;Nuances&lt;/h2&gt;

&lt;p&gt;Trust the system you have set.&lt;/p&gt;</content><author><name></name></author><category term="non-professional" /><category term="systems" /><summary type="html">The only way to become a high performer and fulfil your full potential is to create, iterate and rely on your systems.</summary></entry><entry><title type="html">Living a truthful life</title><link href="https://www.ankushchoubey.com/v1/truth" rel="alternate" type="text/html" title="Living a truthful life" /><published>2022-12-20T00:00:00-06:00</published><updated>2022-12-16T14:52:08-06:00</updated><id>https://www.ankushchoubey.com/v1/v1-truth</id><content type="html" xml:base="https://www.ankushchoubey.com/v1/truth">&lt;p&gt;Treat this article as a buffet. Start with the introduction and then read the sections until you feel you get the gist. Then jump to the next.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;There are two parts to truth:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Seeing the truth&lt;/li&gt;
  &lt;li&gt;Speaking the truth&lt;/li&gt;
  &lt;li&gt;Acting the truth&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;seeing-the-truth&quot;&gt;Seeing the truth&lt;/h2&gt;

&lt;p&gt;On truth, we want to be able to see truth as clearly as we can always. How to achieve this.&lt;/p&gt;

&lt;p&gt;Part of it can be automated. Part of it can’t be automated.&lt;/p&gt;

&lt;h3 id=&quot;observability&quot;&gt;Observability&lt;/h3&gt;

&lt;p&gt;Data collection on computers/mobile devices can be automated. For example, you can keep track of all the tasks you need to do. All of them.&lt;/p&gt;

&lt;p&gt;Many people don’t write todolist. They think that tasks accomplish automatically. But most time they don’t. I decided to make change to my passport address an year ago and it’s still not done. Similarly I had decided to get a complete health checkup an year ago. That hasn’t happened yet.&lt;/p&gt;

&lt;p&gt;The goal with todo list is clarity. If we are failing towards our goal, we should know. If we are not failing towarding our goal we should know.&lt;/p&gt;

&lt;p&gt;Similarly, all the quantified self automated systems are also truths.&lt;/p&gt;

&lt;h3 id=&quot;rational-pre-decisions&quot;&gt;Rational Pre-decisions&lt;/h3&gt;

&lt;p&gt;There are other ways to see truth aswell. For example, you predecide that the person who loves you would make time for you. Now, if they don’t make time for you, you know they don’t love you or at least that they might be busy. #loveLanguages&lt;/p&gt;

&lt;p&gt;It’s important to not move your goal posts too much here. A little nuance adjustment is okay. But rationalization is not.&lt;/p&gt;

&lt;h3 id=&quot;hold-opinions-lightly&quot;&gt;Hold opinions lightly&lt;/h3&gt;

&lt;p&gt;To see truth clearly, you have to hold you opinions lightly. Because when you start saying and speaking the truth, you’ll start seeing everything in absolute clarity and that clarity means most times you realize you were either wrong and not perfect.&lt;/p&gt;

&lt;h2 id=&quot;the-mountain-of-perspectives-what-is-true&quot;&gt;&lt;strong&gt;The Mountain of Perspectives&lt;/strong&gt;: What is true?&lt;/h2&gt;

&lt;p&gt;We are in a 3 dimensional landscape. There are multiple people in it. And their are multiple mountains.&lt;/p&gt;

&lt;p&gt;These mountains are truths. Some mountain are tall. Some are short.&lt;/p&gt;

&lt;p&gt;People are distributed accross the terrain. Some can see one mountain clearly. Some can’t. Some can see some part of the mountain.&lt;/p&gt;

&lt;p&gt;On this terrain, if someone is tied, fog appears and they can’t see the mountain clearly at that moment.&lt;/p&gt;

&lt;p&gt;Therefore ultimately, we find that there’s no one mountain. What’s truth for one person may not be true for other. And the interpretation of what’s true may change as more information is gathered.&lt;/p&gt;

&lt;p&gt;This can be tricky when you first start with telling the truth. But you’ll get the hang of it.&lt;/p&gt;

&lt;iframe src=&quot;https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:7007720744847585280?compact=1&quot; height=&quot;399&quot; width=&quot;710&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; title=&quot;Embedded post&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;what-should-you-do-to-seek-truth&quot;&gt;What should you do to seek truth?&lt;/h2&gt;

&lt;p&gt;We can control a few variables.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Hold your opinions lightly and examine them regularly.&lt;/li&gt;
  &lt;li&gt;Filter out Logical Fallacies. Fallacies are very easier to spot and you’ll sharpen your arguments.&lt;/li&gt;
  &lt;li&gt;Ask good questions that aren’t biased.&lt;/li&gt;
  &lt;li&gt;Ask other’s for advice.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-we-usually-avoid-telling-the-truth-and-what-we-can-do-about-it&quot;&gt;How we usually avoid telling the truth and what we can do about it?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;White Lies&lt;/strong&gt;: We should instead be as kind as possible but not lie. It’s important to recognize that white lies backfire bigger than just speaking the truth.&lt;/p&gt;

&lt;h2 id=&quot;optional-psychological-safety-helping-others-tell-you-truth&quot;&gt;&lt;strong&gt;Optional&lt;/strong&gt;: Psychological Safety: Helping others tell you truth&lt;/h2&gt;

&lt;p&gt;Psychological safety allows people to be themselves around you because they feel safe.&lt;/p&gt;

&lt;p&gt;Offer guidelines and offer support.&lt;/p&gt;

&lt;p&gt;Be consistent.&lt;/p&gt;

&lt;p&gt;Tell your people you can handle the truth. Say it out loud. Over and over again. And mean it.&lt;/p&gt;

&lt;p&gt;People who seek feedback more often feel psychologically safer.&lt;/p&gt;

&lt;p&gt;Critize yourself publically.&lt;/p&gt;

&lt;iframe src=&quot;https://www.linkedin.com/embed/feed/update/urn:li:share:7010661770486808576&quot; height=&quot;473&quot; width=&quot;504&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; title=&quot;Embedded post&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PYZIvlf5ROw&quot;&gt;Achieving psychological safety - YouTube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Y6ig4iWeYqk&quot;&gt;How to Build Psychological Safety at Work - YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;implementing-truth&quot;&gt;Implementing Truth&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;It’s easier to stop lying than it is to tell the truth&lt;/strong&gt;: Because most times you don’t know what truth is. So, if you stop lying, you eliminate almost everything. What remains is as true as things can be.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Practicing speaking the truth as clearly as you can&lt;/strong&gt;: Take a step back and think through if what you are saying is truth. Truth is clear and precise.&lt;/p&gt;

&lt;p&gt;In order to be able to search for the truth, you have to think. To think, &lt;strong&gt;you have to risk being offensive&lt;/strong&gt; sometimes.&lt;/p&gt;

&lt;p&gt;In order to speak the truth, &lt;strong&gt;you have to give up on what you want&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tell the truth + be useful&lt;/strong&gt;: You can always laugh. Panic is no good. Seeking truth is difficult when you are in panic.&lt;/p&gt;

&lt;h2 id=&quot;optional-flavours-of-truth-that-we-fail-to-accept&quot;&gt;Optional: Flavours of Truth That We Fail to Accept&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;: Data can be in many forms. It can be text/numbers from a system or it can be observation from a real event. If you can’t see someone is continously treating you badly, you should accept that they treat you improperly. :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rejection&lt;/strong&gt;: Rejection is a truth. No matter at what stage it is. This could be failure in an exam or a failure of relationship. The most rational thing to do here is to accept the rejection and move on. This acceptance is the acceptance of truth. Once we do accept it, we’ll be able to rethink things though and move forward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our Desires&lt;/strong&gt;: We try not to accept our desires. Maybe you wanna have sex badly but you force yourself not to think about it. Thus this thought becomes your new prison. Instead, you can accept this fact and find a healthier alternative than to watch porn :).&lt;/p&gt;

&lt;h2 id=&quot;speaking-your-truth&quot;&gt;Speaking Your Truth&lt;/h2&gt;

&lt;p&gt;Use simpler straight forward words.&lt;/p&gt;

&lt;p&gt;You can’t make others see the truth easily. Saying, “You don’t want to look at truth” might be helpful sometimes but not often. This is because truth is filtered by many personal biases and personal knowledge.&lt;/p&gt;

&lt;p&gt;For example, if someone has not experience pain of a loss, they won’t realize what you are going through. They won’t be able to empathize. And similarly, in such situations, you won’t be able to empathize with them.&lt;/p&gt;

&lt;h2 id=&quot;optional-nuances-about-truth&quot;&gt;Optional: Nuances about Truth&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Don’t be idealistic be realist&lt;/strong&gt;. Being ideastic is great for personal discipline. Bt specially with others it becomes too much.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Truth is good. But Panic is No Good&lt;/strong&gt;: You have to learn to be calm. And specially making someone else panic is no good. We are more likely to create something outof nothing when we panic. In that sense, we are creating truth from a lie.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Belief presupposes truth&lt;/strong&gt;: Knock on the door and the door shall open. If you knock the right doo&lt;/p&gt;

&lt;h2 id=&quot;optional-truth-and-other-concepts&quot;&gt;Optional: Truth and Other Concepts&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Ego&lt;/strong&gt;: Ego stops us from getting to the truth. To avoid ego, hold your opinions lightly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Biases&lt;/strong&gt;: Biases are blindspots we have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Truth and Good are tied&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;If you are asked if you should lie for the greater good? And you say yes.&lt;/p&gt;

&lt;p&gt;Maybe, you are on the extreme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Truth and Peace are tied&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;The closer you are the truth. The more peaceful you are inside.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;We should tell the truth because:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Staying connected with reality is the best place to make wise decisions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Truth is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Based on reality and true events.&lt;/li&gt;
  &lt;li&gt;Based on the recognition of personal biases and fallacies.&lt;/li&gt;
  &lt;li&gt;Based on the recognition that we are more likely wrong given the amount of info in the world.&lt;/li&gt;
  &lt;li&gt;Empirical, i.e. verifiable in the real world.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Truth is not based on the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Self-affirmations and beliefs&lt;/li&gt;
  &lt;li&gt;Motivated reasoning.&lt;/li&gt;
  &lt;li&gt;Commenting without doing.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;optional-resources&quot;&gt;Optional: Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=EfEK-Pmi7v0&quot;&gt;Jordan Peterson - First stop lying, then speak your truth - YouTube&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="non-professional" /><category term="truth" /><summary type="html">Treat this article as a buffet. Start with the introduction and then read the sections until you feel you get the gist. Then jump to the next.</summary></entry></feed>