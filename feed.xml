<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="www.ankushchoubey.com/feed.xml" rel="self" type="application/atom+xml" /><link href="www.ankushchoubey.com/" rel="alternate" type="text/html" /><updated>2022-08-13T16:22:43-05:00</updated><id>www.ankushchoubey.com/feed.xml</id><title type="html">Ankush</title><subtitle>Random Thoughts</subtitle><entry><title type="html">PREFER UPDATING A BLOG OVER WRITING NEW ONES</title><link href="www.ankushchoubey.com/post-format/" rel="alternate" type="text/html" title="PREFER UPDATING A BLOG OVER WRITING NEW ONES" /><published>2050-09-26T00:00:00-05:00</published><updated>2022-09-23T15:52:08-05:00</updated><id>www.ankushchoubey.com/post-format</id><content type="html" xml:base="www.ankushchoubey.com/post-format/">&lt;p&gt;&lt;img src=&quot;/images/switch-jobs.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;prefer-updating-a-blog-over-writing-new-ones&quot;&gt;PREFER UPDATING A BLOG OVER WRITING NEW ONES&lt;/h1&gt;

&lt;h2 id=&quot;writing-steps&quot;&gt;Writing Steps&lt;/h2&gt;

&lt;p&gt;If I write from POV that how I got the this idea and how I thought about it, readers will know thinking behing an idea and not just the preachiness. Plus, I’ll always have the right words to write.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Task&lt;/th&gt;
      &lt;th&gt;Done&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Structure Done&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thoughts Written&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thoughts Edited&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Grammar Check Done&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Perfect Grammarly Score:&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Image Added  https://www.canva.com/&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Links to Other Posts if Any&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tags Added&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Released Publically&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="www.ankushchoubey.com/images/n-plus-one.svg" /><media:content medium="image" url="www.ankushchoubey.com/images/n-plus-one.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Ideal Development Workflow</title><link href="www.ankushchoubey.com/dev-workflow/" rel="alternate" type="text/html" title="Ideal Development Workflow" /><published>2022-08-14T00:00:00-05:00</published><updated>2022-08-12T15:52:08-05:00</updated><id>www.ankushchoubey.com/dev-workflow</id><content type="html" xml:base="www.ankushchoubey.com/dev-workflow/">&lt;p&gt;This is a value-stream mapping exercise in an effort to reduce cognitive overload and enable continous improvement.&lt;/p&gt;

&lt;p&gt;Ideally, all these steps can be columns on a Kanban Board.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;mermaid&quot; src=&quot;https://mermaid.ink/svg/eyJjb2RlIjoiZ3JhcGggVERcbnN1YmdyYXBoIEJERFxuQVsxLiBSZWFkIEJERCBzcGVjaWZpY2F0aW9ucyByZWxhdGVkIHRvIHRoZSBjYXJkXSAtLT4gQlxuQlsyLiBVcGRhdGUgc3BlY2lmaWNhdGlvbnNdXG5lbmRcbiUlLVxuc3ViZ3JhcGggUGxhbm5pbmdcbkIgLS0-IHBsYW5Db21taXRzXG5wbGFuQ29tbWl0c1szLiBQbGFuIHdpdGggYXRvbWljcyBjb21taXRzXSAtLT4gZXN0aW1hdGVDb21taXRzXG5lc3RpbWF0ZUNvbW1pdHNbNC4gRXN0aW1hdGUgZWFjaCBjb21taXQgdGltZSB3aXRoIFBPTU9ET1JPc10gLS0-IGVzdGltYXRlUGxhbm5lZEZpbmlzaERhdGVcbmVzdGltYXRlUGxhbm5lZEZpbmlzaERhdGVbNS4gQWRkIHBsYW5uZWQgZmluaXNoZWQgZGF0ZSB0aGUgY2FyZF1cbmVuZFxuJSUtXG5lc3RpbWF0ZVBsYW5uZWRGaW5pc2hEYXRlIC0tPiB8bW92ZSBjYXJkfCBwb21vZG9yb1xuJSUtXG5zdWJncmFwaCBjb2RlW1RERCB3aXRoIFBvbW9kb3JvXVxucG9tb2Rvcm9bNi4gUmVtb3ZlIGFsbCBkaXN0cmFjdGlvbnMgYW5kIHN0YXJ0IHBvbW9kb3JvIHNlc3Npb25dIC0tPiB0ZGRcbnRkZFs3LiBzdGFydCBpbmNyZW1lbnRhbGx5IHdpdGggVEREIGFuZCBjb21taXQvcHVzaCBlYWNoIGF0b21pYyBjb21taXRdLS0-IHBvbW9kb3JvXG5lbmRcbiUlLVxudGRkIC0tPiB8ZGV2ZWxvcG1lbnQgZG9uZXwgZGVwbG95XG5kZXBsb3lbOC4gRGVwbG95IGZlYXR1cmUgb24gZW52aXJvbm1lbnQgYW5kIG1vdmUgY2FyZF0gLS0-IHB1bGxSaWdodFxucHVsbFJpZ2h0WzkuIFB1bGwgcmlnaHQgdGhlIGNhcmQgdGlsbCBBY2NlcHRlZF0iLCJtZXJtYWlkIjpudWxsfQ&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;BDD
    &lt;ol&gt;
      &lt;li&gt;Read BDD specifications related to the card&lt;/li&gt;
      &lt;li&gt;Update specifications&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Planning
    &lt;ol&gt;
      &lt;li&gt;Break down card into atomic commits&lt;/li&gt;
      &lt;li&gt;Estimate each commit with pomodoros&lt;/li&gt;
      &lt;li&gt;Add planned finish date to the card&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Coding
    &lt;ol&gt;
      &lt;li&gt;Remove all distractions&lt;/li&gt;
      &lt;li&gt;Move card to In-progress lane&lt;/li&gt;
      &lt;li&gt;Start the &lt;a href=&quot;https://lazy-guy.github.io/tomodoro/index.html&quot;&gt;pomodoro timer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Start working incrementally with TDD. Commit and push non-stop.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Release
    &lt;ol&gt;
      &lt;li&gt;Manually deploy if there is no CD pipeline&lt;/li&gt;
      &lt;li&gt;Pull card towards right until accepted&lt;/li&gt;
      &lt;li&gt;At end of each day, fill in card timesheet activity.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="dev" /><summary type="html">This is a value-stream mapping exercise in an effort to reduce cognitive overload and enable continous improvement.</summary></entry><entry><title type="html">Negotiations</title><link href="www.ankushchoubey.com/negotiations/" rel="alternate" type="text/html" title="Negotiations" /><published>2022-08-12T00:00:00-05:00</published><updated>2022-08-12T15:52:08-05:00</updated><id>www.ankushchoubey.com/negotiations</id><content type="html" xml:base="www.ankushchoubey.com/negotiations/">&lt;h2 id=&quot;what-is-negotiation&quot;&gt;What is Negotiation?&lt;/h2&gt;

&lt;p&gt;Negotiation is when people come to a consensus.&lt;/p&gt;

&lt;p&gt;It isn’t about winning. It’s about Win-Win!&lt;/p&gt;

&lt;p&gt;We can’t just think about ourselves. We have to think about everyone. What’s good for others is good for me.&lt;/p&gt;

&lt;p&gt;If someone else is happy, they’ll pay us back somehow. Similarly, when we are happy, we’ll pay them back.&lt;/p&gt;

&lt;h2 id=&quot;is-it-that-important-to-learn-to-negotiate&quot;&gt;Is it that important to learn to negotiate?&lt;/h2&gt;

&lt;p&gt;Negotiation happens in every stage of life. And many times a day.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Monetary negotiations are the most transparent form of negotiations.&lt;/li&gt;
  &lt;li&gt;Negotiations happen beyond money matters too. Things like marriage, friendships, idea proposals, etc.&lt;/li&gt;
  &lt;li&gt;Even you negotiate with yourself to get work done. Like, oh, why do I not want to do this? Can I work for 5 min?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Negotiations are non-stop and non-avoidable. Therefore, negotiations are essential.&lt;/p&gt;

&lt;h2 id=&quot;what-do-negotiations-involve&quot;&gt;What do negotiations involve?&lt;/h2&gt;

&lt;p&gt;Negotiation involves many steps:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Knowing what you want.&lt;/li&gt;
  &lt;li&gt;Knowing what the other person wants.&lt;/li&gt;
  &lt;li&gt;Knowing the market.&lt;/li&gt;
  &lt;li&gt;Expressing what you want.&lt;/li&gt;
  &lt;li&gt;Listening and understanding what the other person really wants.&lt;/li&gt;
  &lt;li&gt;Discuss possible scenarios, outcomes, compromises or different angles.&lt;/li&gt;
  &lt;li&gt;Accepting, being content and following through on your part&lt;/li&gt;
  &lt;li&gt;Hoping the other person feels accepted, content and follows through.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Since there are these many steps, the area where things can fail many. Therefore negotiations are complicated. And they have to be learned and practised.&lt;/p&gt;</content><author><name></name></author><category term="communication" /><category term="non-professional" /><summary type="html">What is Negotiation?</summary></entry><entry><title type="html">Narcissism</title><link href="www.ankushchoubey.com/narcissism/" rel="alternate" type="text/html" title="Narcissism" /><published>2022-08-12T00:00:00-05:00</published><updated>2022-08-12T15:52:08-05:00</updated><id>www.ankushchoubey.com/narcissism</id><content type="html" xml:base="www.ankushchoubey.com/narcissism/">&lt;h1 id=&quot;what-is-narcissistic&quot;&gt;What is narcissistic?&lt;/h1&gt;

&lt;p&gt;Narcissism is a high form of selfishness wrapped in moral virtue.&lt;/p&gt;

&lt;p&gt;It’s wrapped in moral virtue because only the narcist knows they are right and believes everyone else is wrong. And therefore, their actions are justified.&lt;/p&gt;

&lt;p&gt;The narcissist has the confidence of the competent. Without actually having the competence of the competent, nor are they working towards competence &lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. It’s all a facade.&lt;/p&gt;

&lt;h1 id=&quot;how-do-people-become-narcissistic&quot;&gt;How do people become narcissistic?&lt;/h1&gt;

&lt;p&gt;We are all on a spectrum of narcissism &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Some people are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;total narcissists: they talk about themselves&lt;/li&gt;
  &lt;li&gt;many are functional narcissists: they can be polite but don’t enjoy talking unless it’s about them or something they care about. (I fall in this category for the most part)&lt;/li&gt;
  &lt;li&gt;empaths: people who care about others.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our goal in life is to move toward becoming more empathetic.&lt;/p&gt;

&lt;p&gt;There are also other categorizations of narcissism: &lt;a href=&quot;https://www.youtube.com/watch?v=_uJs0iGQN0M&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Classical narcissism 2:02&lt;/li&gt;
  &lt;li&gt;Covert narcissism 3:50&lt;/li&gt;
  &lt;li&gt;Communal narcissism 7:00&lt;/li&gt;
  &lt;li&gt;Acquired narcissism 11:34&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Knowing the four categories can help in understanding behaviours.&lt;/p&gt;

&lt;p&gt;The two common forms of narcissism are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Feeling too superior; therefore, words owe me something&lt;/li&gt;
  &lt;li&gt;Feeling too inferior; therefore world owes me something&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The problem is that feeling the world owes you something with/without virtue is a form of avoiding responsibility for your problems.&lt;/p&gt;

&lt;h1 id=&quot;what-can-give-rise-to-narcissism&quot;&gt;What can give rise to narcissism?&lt;/h1&gt;

&lt;p&gt;One has to spot patterns that give rise to bitterness. Small things that cause&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;arrogance: someone is asking for help, but you want help because you feel you earned something, and now you don’t give a fuck.&lt;/li&gt;
  &lt;li&gt;resentment: for something that happened in the past.&lt;/li&gt;
  &lt;li&gt;deceit: lying about things or not looking to accept reality&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Depression/past trauma can also give rise to narcissism. Trauma need not be something big. Like, a friend laughed at you for liking Justin Beiber.&lt;/p&gt;

&lt;p&gt;Narcissism is a form of insecurity. It can be fear of abandonment.&lt;/p&gt;

&lt;h1 id=&quot;how-can-we-be-less-narcissistic&quot;&gt;How can we be less narcissistic?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Stop being critical. Accept people as they are, not how you want them to be.&lt;/li&gt;
  &lt;li&gt;If you are helping people, help to support them rather than receive. It doesn’t mean you don’t have boundaries but think about it.&lt;/li&gt;
  &lt;li&gt;Tell the truth but be kind. It’s okay to say sorry. There is no harm in it.&lt;/li&gt;
  &lt;li&gt;Know your patterns. Patterns repeat. Tell people about your patterns. That opens you up a bit.&lt;/li&gt;
  &lt;li&gt;Be more humble: Engage in activities that require humility, like serving others in some form—measuring yourself on servant leadership score—giving others more power to critique or provide feedback, like code reviews, without getting stiff.&lt;/li&gt;
  &lt;li&gt;Express observations, not attacks. Use I feel, and I observed words more.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Jordan Peterson &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Robert Greene &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="psychology" /><category term="phisophy" /><category term="non-professional" /><summary type="html">What is narcissistic?</summary></entry><entry><title type="html">Mutation Testing</title><link href="www.ankushchoubey.com/mutation-testing/" rel="alternate" type="text/html" title="Mutation Testing" /><published>2022-08-07T00:00:00-05:00</published><updated>2022-08-07T15:52:08-05:00</updated><id>www.ankushchoubey.com/mutation-testing</id><content type="html" xml:base="www.ankushchoubey.com/mutation-testing/">&lt;p&gt;I am looking for ways to improve my tests and code quality. On this search, I came across Test Driven Development. With TDD, our test and code quality are too damn high. But still, while we do TDD, there are times when we still can’t predict real-world scenarios.&lt;/p&gt;

&lt;p&gt;For example: If we have a String coming from the external system, it can be null.&lt;/p&gt;

&lt;p&gt;We can have a repository of known issues and remember them. A form of threat-modelling/chaos engineering for logic. It’s also helpful to offload such a task to an automated test. That test is mutation testing.&lt;/p&gt;

&lt;h1 id=&quot;what-is-mutation-testing&quot;&gt;What is mutation testing?&lt;/h1&gt;

&lt;p&gt;Assuming you wrote a test for a piece of code passes. If there are changes to the code, the test should fail.&lt;/p&gt;

&lt;p&gt;That is what mutation testing does. Mutation testing mutates (modifies) the code and checks if tests fail. If the test passes, then we know the test isn’t accurate.&lt;/p&gt;

&lt;p&gt;Tests not being accurate can mean two things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Either the scenario isn’t covered.&lt;/li&gt;
  &lt;li&gt;Or assertion isn’t accurate enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In both cases, once we have uncovered a mutant, we can update our test and code to handle the situation.&lt;/p&gt;

&lt;p&gt;Mutation testing improves both code and tests.&lt;/p&gt;

&lt;h1 id=&quot;how-accurate-is-mutation-testing&quot;&gt;How accurate is mutation testing?&lt;/h1&gt;

&lt;p&gt;Sometimes mutation testing produces garbage responses. Like when a mutant removes a log line.&lt;/p&gt;

&lt;p&gt;Similarly, for specific autogenerated codes, we don’t need mutations.&lt;/p&gt;

&lt;p&gt;Sometimes it’s just garbage. But sometimes, it does uncover accurate details.&lt;/p&gt;

&lt;p&gt;The accuracy of mutation testing depends on the application, selected mutants, and current test quality.&lt;/p&gt;

&lt;p&gt;If the application is simple like CRUD, mutation tests might not uncover anything.&lt;/p&gt;

&lt;p&gt;If the types of mutants selected don’t fit your particular application, then mutations might not uncover anything.&lt;/p&gt;

&lt;p&gt;Mutation tests may not discover anything useful if your test quality is already high. But that’s the point. Right? A fallback safety might discover things early in the SDLC process.&lt;/p&gt;

&lt;h1 id=&quot;comparing-mutation-coverage-with-code-coverage-what-should-mutation-coverage-be&quot;&gt;Comparing mutation coverage with code coverage. What should mutation coverage be?&lt;/h1&gt;

&lt;p&gt;During a test, a piece of code can be executed. But unless a specific assertion is applied, it isn’t tested.&lt;/p&gt;

&lt;p&gt;Code coverage can be high even without any assertion. Mutation coverage cannot be high if there are no assertions.&lt;/p&gt;

&lt;p&gt;Mutation coverage depends on code coverage. If a code isn’t reachable, mutating that code will not affect the test.&lt;/p&gt;

&lt;p&gt;So aim for high code coverage.&lt;/p&gt;

&lt;p&gt;For mutation coverage, my current answer is that sometimes mutation results aren’t good enough.&lt;/p&gt;

&lt;h1 id=&quot;how-to-speed-up-mutation-testing&quot;&gt;How to speed up mutation testing?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Make sure your tests without mutation testing is already fast.&lt;/li&gt;
  &lt;li&gt;Exclude POJO classes.&lt;/li&gt;
  &lt;li&gt;Select the right mutators. Read &lt;a href=&quot;https://blog.pitest.org/less-is-more/&quot;&gt;“Less is More”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Use history so that tests don’t repeat.&lt;/li&gt;
  &lt;li&gt;Multiple threads&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;resource&quot;&gt;Resource&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pitest.org/quickstart/mutators/&quot;&gt;PIT - Mutation Testing Library for Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="testing" /><category term="clean-code" /><summary type="html">I am looking for ways to improve my tests and code quality. On this search, I came across Test Driven Development. With TDD, our test and code quality are too damn high. But still, while we do TDD, there are times when we still can’t predict real-world scenarios.</summary></entry><entry><title type="html">Pre-save Data Validation</title><link href="www.ankushchoubey.com/pre-save-data-validation/" rel="alternate" type="text/html" title="Pre-save Data Validation" /><published>2022-08-06T00:00:00-05:00</published><updated>2022-08-06T15:52:08-05:00</updated><id>www.ankushchoubey.com/pre-save-data-validation</id><content type="html" xml:base="www.ankushchoubey.com/pre-save-data-validation/">&lt;p&gt;It’s imperative to have good data validations in place. Because often, data leads to more bugs even when logic works correctly.&lt;/p&gt;

&lt;p&gt;Data errors can be:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;null values in the database or from an external system&lt;/li&gt;
  &lt;li&gt;expecting values to be positive by getting negative ones.&lt;/li&gt;
  &lt;li&gt;expecting a field to have a specific format but getting something else&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The only solution to a data error is running data migrations which is an unnecessary overhead.&lt;/p&gt;

&lt;p&gt;Therefore, we should ensure that data is validated before it reaches DB.&lt;/p&gt;

&lt;h1 id=&quot;only-allows-certain-data&quot;&gt;Only allows certain data&lt;/h1&gt;

&lt;p&gt;You minimize data problems by only allowing it for specific fields.&lt;/p&gt;

&lt;p&gt;On a UI, it could be dropdowns, date fields with range, and auto-completion options.&lt;/p&gt;

&lt;h1 id=&quot;validate-on-frontend&quot;&gt;Validate on frontend&lt;/h1&gt;

&lt;p&gt;Libraries like &lt;a href=&quot;https://formik.org/&quot;&gt;formik&lt;/a&gt; and &lt;a href=&quot;https://github.com/jquense/yup&quot;&gt;yup&lt;/a&gt; can help perform object and user input validation.&lt;/p&gt;

&lt;p&gt;Typescript is only helpful in knowing the exact names of the variable, its type or keys within an object. Since it gets converted to javascript, typescript can’t be used to validate data types.&lt;/p&gt;

&lt;h1 id=&quot;validate-on-the-backend&quot;&gt;Validate on the backend&lt;/h1&gt;

&lt;p&gt;In Java specifically, you have JSR Validators.&lt;/p&gt;

&lt;p&gt;Use in all POJOs, especially for incoming request objects and entity objects.&lt;/p&gt;

&lt;p&gt;You can also &lt;a href=&quot;https://www.baeldung.com/spring-mvc-custom-validator&quot;&gt;create custom validators&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using enums is also an option.&lt;/p&gt;</content><author><name></name></author><category term="data" /><category term="clean-code" /><summary type="html">It’s imperative to have good data validations in place. Because often, data leads to more bugs even when logic works correctly.</summary></entry><entry><title type="html">Tips on fixing and upgrading Maven Dependencies</title><link href="www.ankushchoubey.com/maven-dependency-upgrade/" rel="alternate" type="text/html" title="Tips on fixing and upgrading Maven Dependencies" /><published>2022-07-29T00:00:00-05:00</published><updated>2022-07-24T15:52:08-05:00</updated><id>www.ankushchoubey.com/maven-updation</id><content type="html" xml:base="www.ankushchoubey.com/maven-dependency-upgrade/">&lt;p&gt;&lt;img src=&quot;/images/maven-dependency-upgrade/header.svg&quot; alt=&quot;Maven Logo From Wikipedia&quot; /&gt;&lt;/p&gt;

&lt;p&gt;{$ include note.html content=”&lt;strong&gt;For beginners&lt;/strong&gt;: Instead of writing your code, you can include code written by other people. This is done by setting up dependencies. Maven is a java build tool that helps streamline and automate dependency management so that you don’t have to manually configure things within each machine. Apart from this, maven also helps in testing, and release and has a plugin ecosystem to automate many tasks.” $}&lt;/p&gt;

&lt;p&gt;Updating dependencies is important. Reasons could be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;your SAST scan found a list of vulnerable dependancies&lt;/li&gt;
  &lt;li&gt;you want to keep up with the latest.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are few things that could make the process easier.&lt;/p&gt;

&lt;h1 id=&quot;update-dependencies-in-parent&quot;&gt;Update dependencies in parent&lt;/h1&gt;

&lt;p&gt;If dependencies in the parent can’t be updated exclude and update the child.&lt;/p&gt;

&lt;p&gt;If you are excluding do write a comment mentioning why you are excluding and if/when to remove the exlusion.&lt;/p&gt;

&lt;p&gt;If dependency cannot be upgraded, find a different package specially if it’s a security problem.&lt;/p&gt;

&lt;h1 id=&quot;find-child-dependies-easier-with-maven-helper-plugin-for-intellij&quot;&gt;Find child dependies easier with Maven Helper plugin for IntelliJ&lt;/h1&gt;

&lt;p&gt;It can be hard to know the subdependiencies of a dependency. &lt;a href=&quot;https://plugins.jetbrains.com/plugin/7179-maven-helper&quot;&gt;Maven Helper&lt;/a&gt; plugin creates a tree that can help.&lt;/p&gt;

&lt;p&gt;It has options to exclude dependies too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/maven-dependency-upgrade/maven_helper.png&quot; alt=&quot;Maven Helper IntelliJ Plugin&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;run-automated-tests-after-updation&quot;&gt;Run automated tests after updation&lt;/h1&gt;

&lt;p&gt;Having a good automated test suit helps elevate the risks involves with updation of any kind.&lt;/p&gt;

&lt;p&gt;Run all your automated tests to verify if change to dependies is making the code break.&lt;/p&gt;

&lt;h1 id=&quot;automate-updation&quot;&gt;Automate updation&lt;/h1&gt;

&lt;p&gt;This can be automated by using a maven plugin like &lt;a href=&quot;https://www.baeldung.com/maven-dependency-latest-version&quot;&gt;Versions Maven Plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A pipeline job can be run where version is auto-updated and merged to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt; branch if tests are passed. :)&lt;/p&gt;</content><author><name></name></author><category term="maven" /><category term="build-tool" /><category term="automation" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="www.ankushchoubey.com/images/maven-dependency-upgrade/header.svg" /><media:content medium="image" url="www.ankushchoubey.com/images/maven-dependency-upgrade/header.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">When doing reactive programming, ‘aim’ to have streaming end-to-end</title><link href="www.ankushchoubey.com/reactive-streaming/" rel="alternate" type="text/html" title="When doing reactive programming, ‘aim’ to have streaming end-to-end" /><published>2022-07-24T00:00:00-05:00</published><updated>2022-07-24T15:52:08-05:00</updated><id>www.ankushchoubey.com/reactive-streaming</id><content type="html" xml:base="www.ankushchoubey.com/reactive-streaming/">&lt;p&gt;A streaming microservice works on streams of data rather than waiting for entire data to load before performing operations.&lt;/p&gt;

&lt;p&gt;This means by definition streaming is much high performance and therefore a good aim to have.&lt;/p&gt;

&lt;h1 id=&quot;example-of-streaming-and-non-streaming-reactive-implementation&quot;&gt;Example of Streaming and Non-Streaming Reactive Implementation&lt;/h1&gt;

&lt;p&gt;Suppose you have an application that shows a list of movies to users. The application comprises a frontend user view and a backend that talks to a database.&lt;/p&gt;

&lt;p&gt;You have chosen Spring Webflux for the backend and Angular for the frontend since both provide reactive programming support. Webflux provides it with Project Reactor. Angular provides it with RxJs.&lt;/p&gt;

&lt;p&gt;A non-reactive non-streaming way would have been something like this&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an API endpoint that fetches all movies from the database to the backend service.
2 Once all the data is fetched, then create a payload to send to the browser. (Backend has to wait for fetching to be complete)&lt;/li&gt;
  &lt;li&gt;Once the complete payload is received by the browser, it will start rendering the details. (Browser has to wait for fetching to be complete)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Spring Webflux backend&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moviesRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collectList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this makes it non-streaming&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServerResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bodyValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Angular Frontend&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Typescript:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/movies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this line makes it non-streaming&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;HTML:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;*ngFor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;let movie of movies&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    \{\{ movie.name }}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A reactive streaming implementation would be like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start fetching movies from the database to the backend.&lt;/li&gt;
  &lt;li&gt;As movies are being fetched, start creating the payload and send that payload to the browser without waiting for other movies. (Backend does not wait for fetching to be complete)&lt;/li&gt;
  &lt;li&gt;Browser will receive a record and display it. When it receives another record, it will display that as well. (Browser does not have to wait for fetching to be complete).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This means that both your backend and your frontend have to be reactive-streaming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Webflux backend&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServerResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moviesRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Movies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Angular Frontend&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Typescript:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/movies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HTML:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;*ngFor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;let movie of movies | async; index as i&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    \{\{ movie.name }}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;when-is-streaming-not-efficient&quot;&gt;When is streaming not-efficient&lt;/h1&gt;

&lt;p&gt;There are some cases where streaming isn’t effective or can be used like:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Amount of data is too small.&lt;/li&gt;
  &lt;li&gt;Certain operations/transformations that require the entire data to be loaded. For example, HAL Format isn’t possible with streaming.&lt;/li&gt;
  &lt;li&gt;Sometimes batch operations are more effective than streaming.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, while fetching movies, you have to also fetch data about movie stars from a separate table. Since many movies might have the same movie star, it may be more effective to fetch them once in bulk rather than in a streaming fashion for each movie.&lt;/p&gt;

&lt;p&gt;These nuances depend on what you are trying to build. Therefore it is a good “aim” to have streaming end-to-end for true reactivity. But it isn’t always applicable.&lt;/p&gt;</content><author><name></name></author><category term="clean-code" /><category term="reactive" /><summary type="html">A streaming microservice works on streams of data rather than waiting for entire data to load before performing operations.</summary></entry><entry><title type="html">Writing better commits with Atomic Commits</title><link href="www.ankushchoubey.com/atomic-commits/" rel="alternate" type="text/html" title="Writing better commits with Atomic Commits" /><published>2022-07-14T00:00:00-05:00</published><updated>2022-07-14T15:52:08-05:00</updated><id>www.ankushchoubey.com/atomic-commits</id><content type="html" xml:base="www.ankushchoubey.com/atomic-commits/">&lt;h1 id=&quot;what-is-the-problem-with-larger-commits&quot;&gt;What is the problem with larger commits?&lt;/h1&gt;

&lt;p&gt;Many developers complete all their features before committing and merging. When they commit and merge,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;their commit is often bulky i.e it is too big&lt;/li&gt;
  &lt;li&gt;since it is too big, it often causes merge conflicts&lt;/li&gt;
  &lt;li&gt;since it is too big, the commit message is often not the best indicator of what the code does.&lt;/li&gt;
  &lt;li&gt;since it is too big, there were too many changes, and the confidence to merge and expect everything to work fine reduces.&lt;/li&gt;
  &lt;li&gt;since it took so long to merge, other developers might have built the same features again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Often the reason is, that we are afraid to merge and want to get everything perfect the first time. But this is counterintuitive.&lt;/p&gt;

&lt;h1 id=&quot;why-we-should-do-atomic-commits&quot;&gt;Why we should do atomic commits?&lt;/h1&gt;

&lt;p&gt;Atomic commits are frequent commits.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Allows for easily reversing changes&lt;/li&gt;
  &lt;li&gt;Leads to a more accurate commit history that can be easily understood by developers.
    &lt;ul&gt;
      &lt;li&gt;and therefore is easier to review.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Small changes are easier to revert than bulky changes.&lt;/li&gt;
  &lt;li&gt;Developers are much more in sync when small commits are merged non-stop.&lt;/li&gt;
  &lt;li&gt;Small commits lead to a better sense of progress.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Suppose you are working on two features related to upload and download of files to and from AWS S3. Instead of a single commit for both, you can break it down into multiple commits.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-conventional-commits&quot;&gt;// bad
added support for file upload and download

// better 
feat(s3-service): configuration for AWS S3
feat(s3-service): add streaming upload file to S3
feat(api): add endpoint for streaming upload /uploads 
feat(53-service): streaming download from s3
feat(api): add endpoint for streaming download /downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;how-to-implement-atomic-commits-in-practice&quot;&gt;How to implement atomic commits in practice?&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Commit and push to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt; after every completing method/feature.&lt;/li&gt;
  &lt;li&gt;This push should involve both test and code.&lt;/li&gt;
  &lt;li&gt;The commit message should be accurate.
    &lt;ul&gt;
      &lt;li&gt;Each commit should only include a small number of changes.&lt;/li&gt;
      &lt;li&gt;Use a commit format like &lt;a href=&quot;/conventional-commits&quot;&gt;conventional commits&lt;/a&gt; that separates different types of commits:&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feat&lt;/code&gt;: feature&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refactor&lt;/code&gt;: refactoring&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fix&lt;/code&gt;: bug fix&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doc&lt;/code&gt;: documentation&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ci&lt;/code&gt;: continuous integration changes&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt;: related to build&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In practice, you can assume committing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feat&lt;/code&gt; at least once per hour. Other commit types especially &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refactor&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fix&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doc&lt;/code&gt; might be even more frequent.&lt;/p&gt;</content><author><name></name></author><category term="clean-code" /><category term="continuous-integration" /><category term="commits" /><category term="code-review" /><summary type="html">What is the problem with larger commits?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="www.ankushchoubey.com/images/atomic-commits.svg" /><media:content medium="image" url="www.ankushchoubey.com/images/atomic-commits.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Always choose Reactive Programming</title><link href="www.ankushchoubey.com/reactive-programming/" rel="alternate" type="text/html" title="Always choose Reactive Programming" /><published>2022-07-11T00:00:00-05:00</published><updated>2022-07-11T15:52:08-05:00</updated><id>www.ankushchoubey.com/reactive</id><content type="html" xml:base="www.ankushchoubey.com/reactive-programming/">&lt;h1 id=&quot;what-is-reactive-programming&quot;&gt;What is reactive programming?&lt;/h1&gt;

&lt;p&gt;Reactive programming is not a straight paradigm like empirical or functional. Reactive means that code that is written is non-blocking and asynchronous.&lt;/p&gt;

&lt;p&gt;Typically, whenever we have an IO operation, the thread waits for the IO operation to complete before proceeding to the following line. This consumes CPU time while the CPU is ideal.&lt;/p&gt;

&lt;p&gt;In reactive programming, during IO operations, the thread is auto-switched. Therefore, the CPU is never ideal.&lt;/p&gt;

&lt;p&gt;This means that reactive code has a higher throughput overall depending on the number of IO operations. Reactive code is typically several magnitudes faster and consumes fewer resources overall.&lt;/p&gt;

&lt;p&gt;Also, traditional code doesn’t work on streaming data. If you fetch a list of records from a database, the entire list has to be loaded before you can act on it.&lt;/p&gt;

&lt;p&gt;In reactive, however, you can work with streams of data. So, you can start performing operations on data you have received till now without waiting for the rest of the data.&lt;/p&gt;

&lt;p&gt;Similarly, suppose you have a client-server application that needs to display a list. If you code it to be reactive, the list items can be received as a stream. Each item can be displayed one at a time. No need to wait for the entire list to load. This would significantly reduce initial load time.&lt;/p&gt;

&lt;h1 id=&quot;why-choose-reactive-programming-for-every-project&quot;&gt;Why choose reactive programming for every project?&lt;/h1&gt;

&lt;p&gt;Often a con of reactive programming is said to be the initial learning curve. In my experience, the initial learning curve is much less relevant than the return on investment it provides.&lt;/p&gt;

&lt;p&gt;Cloud applications need to consume less memory and higher throughput. Before going for vertical or horizontal scaling, the best thing to do is optimize code. Reactive code is one of the directions to look for.&lt;/p&gt;

&lt;p&gt;Reactive libraries are available in many programming languages. Especially the flavors of reactivex (RxJs, Rx Java, etc). Spring Webflux is a variant of Spring Boot that supports building reactive backends.&lt;/p&gt;

&lt;h1 id=&quot;when-should-you-not-use-reactive-programming&quot;&gt;When should you not use reactive programming?&lt;/h1&gt;

&lt;p&gt;The only place not to use reactive programming is when everything can be done in memory itself i.e there is no IO operation.&lt;/p&gt;

&lt;h1 id=&quot;my-experience-with-reactice&quot;&gt;My experience with reactice&lt;/h1&gt;

&lt;p&gt;I have used Project Reactor Spring Webflux and RxJS in Angular with both the experience has been this.&lt;/p&gt;

&lt;p&gt;A much cleaner coding experience&lt;/p&gt;

&lt;p&gt;One of the reason is it seems all reactive libraries are a sort of functional pipeline. One stage with another.&lt;/p&gt;

&lt;p&gt;Each stage is a pure function and ideally doesn’t have any side effects.&lt;/p&gt;

&lt;p&gt;You can think of it like a scope.&lt;/p&gt;

&lt;p&gt;I very much agree with this video I found on Youtube. With project reactor, everything is just a Flux from start to end. No need to wrap things into different convertor classes. Everything is just Publisher.&lt;/p&gt;

&lt;p&gt;Multithreading programming has never been easier.&lt;/p&gt;</content><author><name></name></author><category term="microservices" /><category term="experience" /><category term="webflux" /><summary type="html">What is reactive programming?</summary></entry></feed>